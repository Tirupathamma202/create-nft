import type { ChainConfig } from "../../types";
export interface ChainConfigsResponse<T> {
    chainConfigs: T;
}
export interface QueryChainConfig {
    identifier: string;
}
export type QueryChainConfigResponse = ChainConfigsResponse<{
    config: ChainConfig;
}>;
export declare const QUERY_CHAIN_CONFIG: string;
/**
 * Queries a chain config by chain ID or config name
 * @param identifier
 * @returns
 */
export declare function queryChainConfig(identifier: string): Promise<ChainConfig>;
export interface QueryAllChainConfigs {
}
export type QueryAllChainConfigsResponse = ChainConfigsResponse<{
    allConfigs: ChainConfig[];
}>;
export declare const QUERY_ALL_CHAIN_CONFIGS: string;
/**
 * Queries all stored chain configs
 * @returns
 */
export declare function queryAllChainConfigs(): Promise<ChainConfig[]>;
