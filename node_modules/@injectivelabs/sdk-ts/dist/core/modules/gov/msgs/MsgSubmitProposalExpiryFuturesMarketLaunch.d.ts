import { MsgSubmitProposal as BaseMsgSubmitProposal } from '@injectivelabs/chain-api/cosmos/gov/v1beta1/tx_pb';
import { Coin } from '@injectivelabs/chain-api/cosmos/base/v1beta1/coin_pb';
import { Any } from 'google-protobuf/google/protobuf/any_pb';
import { OracleTypeMap } from '@injectivelabs/chain-api/injective/oracle/v1beta1/oracle_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgSubmitProposalExpiryFuturesMarketLaunch {
    interface Params {
        market: {
            title: string;
            description: string;
            ticker: string;
            quoteDenom: string;
            oracleBase: string;
            oracleQuote: string;
            expiry: number;
            oracleScaleFactor: number;
            oracleType: OracleTypeMap[keyof OracleTypeMap];
            initialMarginRatio: string;
            maintenanceMarginRatio: string;
            makerFeeRate: string;
            takerFeeRate: string;
            minPriceTickSize: string;
            minQuantityTickSize: string;
        };
        proposer: string;
        deposit: {
            amount: string;
            denom: string;
        };
    }
    type Proto = BaseMsgSubmitProposal;
    type Object = BaseMsgSubmitProposal.AsObject;
}
/**
 * @category Messages
 */
export default class MsgSubmitProposalExpiryFuturesMarketLaunch extends MsgBase<MsgSubmitProposalExpiryFuturesMarketLaunch.Params, MsgSubmitProposalExpiryFuturesMarketLaunch.Proto, MsgSubmitProposalExpiryFuturesMarketLaunch.Object> {
    static fromJSON(params: MsgSubmitProposalExpiryFuturesMarketLaunch.Params): MsgSubmitProposalExpiryFuturesMarketLaunch;
    toProto(): BaseMsgSubmitProposal;
    toData(): {
        content?: Any.AsObject | undefined;
        initialDepositList: Coin.AsObject[];
        proposer: string;
        '@type': string;
    };
    toAmino(): {
        type: string;
        value: {
            content?: {
                type_url: string;
                value: string | Uint8Array;
            } | undefined;
            initial_deposit_list: {
                denom: string;
                amount: string;
            }[];
            proposer: string;
        };
    };
    toWeb3(): {
        content?: {
            type_url: string;
            value: string | Uint8Array;
        } | undefined;
        initial_deposit_list: {
            denom: string;
            amount: string;
        }[];
        proposer: string;
        '@type': string;
    };
    toDirectSign(): {
        type: string;
        message: BaseMsgSubmitProposal;
    };
    private getContent;
}
//# sourceMappingURL=MsgSubmitProposalExpiryFuturesMarketLaunch.d.ts.map