// source: event_provider_api.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.event_provider_api.BlockEventsRPC', null, global);
goog.exportSymbol('proto.event_provider_api.GetBlockEventsRPCRequest', null, global);
goog.exportSymbol('proto.event_provider_api.GetBlockEventsRPCResponse', null, global);
goog.exportSymbol('proto.event_provider_api.GetCustomEventsRPCRequest', null, global);
goog.exportSymbol('proto.event_provider_api.GetCustomEventsRPCResponse', null, global);
goog.exportSymbol('proto.event_provider_api.GetLatestHeightRequest', null, global);
goog.exportSymbol('proto.event_provider_api.GetLatestHeightResponse', null, global);
goog.exportSymbol('proto.event_provider_api.LatestBlockHeight', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_provider_api.GetLatestHeightRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_provider_api.GetLatestHeightRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_provider_api.GetLatestHeightRequest.displayName = 'proto.event_provider_api.GetLatestHeightRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_provider_api.GetLatestHeightResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_provider_api.GetLatestHeightResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_provider_api.GetLatestHeightResponse.displayName = 'proto.event_provider_api.GetLatestHeightResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_provider_api.LatestBlockHeight = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_provider_api.LatestBlockHeight, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_provider_api.LatestBlockHeight.displayName = 'proto.event_provider_api.LatestBlockHeight';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_provider_api.GetBlockEventsRPCRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_provider_api.GetBlockEventsRPCRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_provider_api.GetBlockEventsRPCRequest.displayName = 'proto.event_provider_api.GetBlockEventsRPCRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_provider_api.GetBlockEventsRPCResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_provider_api.GetBlockEventsRPCResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_provider_api.GetBlockEventsRPCResponse.displayName = 'proto.event_provider_api.GetBlockEventsRPCResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_provider_api.BlockEventsRPC = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.event_provider_api.BlockEventsRPC.repeatedFields_, null);
};
goog.inherits(proto.event_provider_api.BlockEventsRPC, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_provider_api.BlockEventsRPC.displayName = 'proto.event_provider_api.BlockEventsRPC';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_provider_api.GetCustomEventsRPCRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_provider_api.GetCustomEventsRPCRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_provider_api.GetCustomEventsRPCRequest.displayName = 'proto.event_provider_api.GetCustomEventsRPCRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.event_provider_api.GetCustomEventsRPCResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.event_provider_api.GetCustomEventsRPCResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.event_provider_api.GetCustomEventsRPCResponse.displayName = 'proto.event_provider_api.GetCustomEventsRPCResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_provider_api.GetLatestHeightRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.event_provider_api.GetLatestHeightRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_provider_api.GetLatestHeightRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.GetLatestHeightRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_provider_api.GetLatestHeightRequest}
 */
proto.event_provider_api.GetLatestHeightRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_provider_api.GetLatestHeightRequest;
  return proto.event_provider_api.GetLatestHeightRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_provider_api.GetLatestHeightRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_provider_api.GetLatestHeightRequest}
 */
proto.event_provider_api.GetLatestHeightRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_provider_api.GetLatestHeightRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_provider_api.GetLatestHeightRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_provider_api.GetLatestHeightRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.GetLatestHeightRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_provider_api.GetLatestHeightResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.event_provider_api.GetLatestHeightResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_provider_api.GetLatestHeightResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.GetLatestHeightResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    s: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errmsg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && proto.event_provider_api.LatestBlockHeight.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_provider_api.GetLatestHeightResponse}
 */
proto.event_provider_api.GetLatestHeightResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_provider_api.GetLatestHeightResponse;
  return proto.event_provider_api.GetLatestHeightResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_provider_api.GetLatestHeightResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_provider_api.GetLatestHeightResponse}
 */
proto.event_provider_api.GetLatestHeightResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setS(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrmsg(value);
      break;
    case 3:
      var value = new proto.event_provider_api.LatestBlockHeight;
      reader.readMessage(value,proto.event_provider_api.LatestBlockHeight.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_provider_api.GetLatestHeightResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_provider_api.GetLatestHeightResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_provider_api.GetLatestHeightResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.GetLatestHeightResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getS();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErrmsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.event_provider_api.LatestBlockHeight.serializeBinaryToWriter
    );
  }
};


/**
 * optional string s = 1;
 * @return {string}
 */
proto.event_provider_api.GetLatestHeightResponse.prototype.getS = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_provider_api.GetLatestHeightResponse} returns this
 */
proto.event_provider_api.GetLatestHeightResponse.prototype.setS = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string errmsg = 2;
 * @return {string}
 */
proto.event_provider_api.GetLatestHeightResponse.prototype.getErrmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_provider_api.GetLatestHeightResponse} returns this
 */
proto.event_provider_api.GetLatestHeightResponse.prototype.setErrmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional LatestBlockHeight data = 3;
 * @return {?proto.event_provider_api.LatestBlockHeight}
 */
proto.event_provider_api.GetLatestHeightResponse.prototype.getData = function() {
  return /** @type{?proto.event_provider_api.LatestBlockHeight} */ (
    jspb.Message.getWrapperField(this, proto.event_provider_api.LatestBlockHeight, 3));
};


/**
 * @param {?proto.event_provider_api.LatestBlockHeight|undefined} value
 * @return {!proto.event_provider_api.GetLatestHeightResponse} returns this
*/
proto.event_provider_api.GetLatestHeightResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_provider_api.GetLatestHeightResponse} returns this
 */
proto.event_provider_api.GetLatestHeightResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_provider_api.GetLatestHeightResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_provider_api.LatestBlockHeight.prototype.toObject = function(opt_includeInstance) {
  return proto.event_provider_api.LatestBlockHeight.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_provider_api.LatestBlockHeight} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.LatestBlockHeight.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_provider_api.LatestBlockHeight}
 */
proto.event_provider_api.LatestBlockHeight.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_provider_api.LatestBlockHeight;
  return proto.event_provider_api.LatestBlockHeight.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_provider_api.LatestBlockHeight} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_provider_api.LatestBlockHeight}
 */
proto.event_provider_api.LatestBlockHeight.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_provider_api.LatestBlockHeight.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_provider_api.LatestBlockHeight.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_provider_api.LatestBlockHeight} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.LatestBlockHeight.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 height = 1;
 * @return {number}
 */
proto.event_provider_api.LatestBlockHeight.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.event_provider_api.LatestBlockHeight} returns this
 */
proto.event_provider_api.LatestBlockHeight.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_provider_api.GetBlockEventsRPCRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.event_provider_api.GetBlockEventsRPCRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_provider_api.GetBlockEventsRPCRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.GetBlockEventsRPCRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    backend: jspb.Message.getFieldWithDefault(msg, 1, ""),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_provider_api.GetBlockEventsRPCRequest}
 */
proto.event_provider_api.GetBlockEventsRPCRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_provider_api.GetBlockEventsRPCRequest;
  return proto.event_provider_api.GetBlockEventsRPCRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_provider_api.GetBlockEventsRPCRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_provider_api.GetBlockEventsRPCRequest}
 */
proto.event_provider_api.GetBlockEventsRPCRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackend(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setHeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_provider_api.GetBlockEventsRPCRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_provider_api.GetBlockEventsRPCRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_provider_api.GetBlockEventsRPCRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.GetBlockEventsRPCRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackend();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeSint32(
      2,
      f
    );
  }
};


/**
 * optional string backend = 1;
 * @return {string}
 */
proto.event_provider_api.GetBlockEventsRPCRequest.prototype.getBackend = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_provider_api.GetBlockEventsRPCRequest} returns this
 */
proto.event_provider_api.GetBlockEventsRPCRequest.prototype.setBackend = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional sint32 height = 2;
 * @return {number}
 */
proto.event_provider_api.GetBlockEventsRPCRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.event_provider_api.GetBlockEventsRPCRequest} returns this
 */
proto.event_provider_api.GetBlockEventsRPCRequest.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_provider_api.GetBlockEventsRPCResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.event_provider_api.GetBlockEventsRPCResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_provider_api.GetBlockEventsRPCResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.GetBlockEventsRPCResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    s: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errmsg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && proto.event_provider_api.BlockEventsRPC.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_provider_api.GetBlockEventsRPCResponse}
 */
proto.event_provider_api.GetBlockEventsRPCResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_provider_api.GetBlockEventsRPCResponse;
  return proto.event_provider_api.GetBlockEventsRPCResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_provider_api.GetBlockEventsRPCResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_provider_api.GetBlockEventsRPCResponse}
 */
proto.event_provider_api.GetBlockEventsRPCResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setS(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrmsg(value);
      break;
    case 3:
      var value = new proto.event_provider_api.BlockEventsRPC;
      reader.readMessage(value,proto.event_provider_api.BlockEventsRPC.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_provider_api.GetBlockEventsRPCResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_provider_api.GetBlockEventsRPCResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_provider_api.GetBlockEventsRPCResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.GetBlockEventsRPCResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getS();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErrmsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.event_provider_api.BlockEventsRPC.serializeBinaryToWriter
    );
  }
};


/**
 * optional string s = 1;
 * @return {string}
 */
proto.event_provider_api.GetBlockEventsRPCResponse.prototype.getS = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_provider_api.GetBlockEventsRPCResponse} returns this
 */
proto.event_provider_api.GetBlockEventsRPCResponse.prototype.setS = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string errmsg = 2;
 * @return {string}
 */
proto.event_provider_api.GetBlockEventsRPCResponse.prototype.getErrmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_provider_api.GetBlockEventsRPCResponse} returns this
 */
proto.event_provider_api.GetBlockEventsRPCResponse.prototype.setErrmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional BlockEventsRPC data = 3;
 * @return {?proto.event_provider_api.BlockEventsRPC}
 */
proto.event_provider_api.GetBlockEventsRPCResponse.prototype.getData = function() {
  return /** @type{?proto.event_provider_api.BlockEventsRPC} */ (
    jspb.Message.getWrapperField(this, proto.event_provider_api.BlockEventsRPC, 3));
};


/**
 * @param {?proto.event_provider_api.BlockEventsRPC|undefined} value
 * @return {!proto.event_provider_api.GetBlockEventsRPCResponse} returns this
*/
proto.event_provider_api.GetBlockEventsRPCResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_provider_api.GetBlockEventsRPCResponse} returns this
 */
proto.event_provider_api.GetBlockEventsRPCResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_provider_api.GetBlockEventsRPCResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.event_provider_api.BlockEventsRPC.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_provider_api.BlockEventsRPC.prototype.toObject = function(opt_includeInstance) {
  return proto.event_provider_api.BlockEventsRPC.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_provider_api.BlockEventsRPC} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.BlockEventsRPC.toObject = function(includeInstance, msg) {
  var f, obj = {
    typesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    eventsList: msg.getEventsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_provider_api.BlockEventsRPC}
 */
proto.event_provider_api.BlockEventsRPC.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_provider_api.BlockEventsRPC;
  return proto.event_provider_api.BlockEventsRPC.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_provider_api.BlockEventsRPC} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_provider_api.BlockEventsRPC}
 */
proto.event_provider_api.BlockEventsRPC.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addTypes(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_provider_api.BlockEventsRPC.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_provider_api.BlockEventsRPC.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_provider_api.BlockEventsRPC} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.BlockEventsRPC.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getEventsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
};


/**
 * repeated string types = 1;
 * @return {!Array<string>}
 */
proto.event_provider_api.BlockEventsRPC.prototype.getTypesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.event_provider_api.BlockEventsRPC} returns this
 */
proto.event_provider_api.BlockEventsRPC.prototype.setTypesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.event_provider_api.BlockEventsRPC} returns this
 */
proto.event_provider_api.BlockEventsRPC.prototype.addTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event_provider_api.BlockEventsRPC} returns this
 */
proto.event_provider_api.BlockEventsRPC.prototype.clearTypesList = function() {
  return this.setTypesList([]);
};


/**
 * repeated bytes events = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.event_provider_api.BlockEventsRPC.prototype.getEventsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes events = 2;
 * This is a type-conversion wrapper around `getEventsList()`
 * @return {!Array<string>}
 */
proto.event_provider_api.BlockEventsRPC.prototype.getEventsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getEventsList()));
};


/**
 * repeated bytes events = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEventsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.event_provider_api.BlockEventsRPC.prototype.getEventsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getEventsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.event_provider_api.BlockEventsRPC} returns this
 */
proto.event_provider_api.BlockEventsRPC.prototype.setEventsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.event_provider_api.BlockEventsRPC} returns this
 */
proto.event_provider_api.BlockEventsRPC.prototype.addEvents = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.event_provider_api.BlockEventsRPC} returns this
 */
proto.event_provider_api.BlockEventsRPC.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_provider_api.GetCustomEventsRPCRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.event_provider_api.GetCustomEventsRPCRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_provider_api.GetCustomEventsRPCRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.GetCustomEventsRPCRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    backend: jspb.Message.getFieldWithDefault(msg, 1, ""),
    height: jspb.Message.getFieldWithDefault(msg, 2, 0),
    events: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_provider_api.GetCustomEventsRPCRequest}
 */
proto.event_provider_api.GetCustomEventsRPCRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_provider_api.GetCustomEventsRPCRequest;
  return proto.event_provider_api.GetCustomEventsRPCRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_provider_api.GetCustomEventsRPCRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_provider_api.GetCustomEventsRPCRequest}
 */
proto.event_provider_api.GetCustomEventsRPCRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackend(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setHeight(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_provider_api.GetCustomEventsRPCRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_provider_api.GetCustomEventsRPCRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_provider_api.GetCustomEventsRPCRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.GetCustomEventsRPCRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackend();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeSint32(
      2,
      f
    );
  }
  f = message.getEvents();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string backend = 1;
 * @return {string}
 */
proto.event_provider_api.GetCustomEventsRPCRequest.prototype.getBackend = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_provider_api.GetCustomEventsRPCRequest} returns this
 */
proto.event_provider_api.GetCustomEventsRPCRequest.prototype.setBackend = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional sint32 height = 2;
 * @return {number}
 */
proto.event_provider_api.GetCustomEventsRPCRequest.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.event_provider_api.GetCustomEventsRPCRequest} returns this
 */
proto.event_provider_api.GetCustomEventsRPCRequest.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string events = 3;
 * @return {string}
 */
proto.event_provider_api.GetCustomEventsRPCRequest.prototype.getEvents = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_provider_api.GetCustomEventsRPCRequest} returns this
 */
proto.event_provider_api.GetCustomEventsRPCRequest.prototype.setEvents = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.event_provider_api.GetCustomEventsRPCResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.event_provider_api.GetCustomEventsRPCResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.event_provider_api.GetCustomEventsRPCResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.GetCustomEventsRPCResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    s: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errmsg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && proto.event_provider_api.BlockEventsRPC.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.event_provider_api.GetCustomEventsRPCResponse}
 */
proto.event_provider_api.GetCustomEventsRPCResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.event_provider_api.GetCustomEventsRPCResponse;
  return proto.event_provider_api.GetCustomEventsRPCResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.event_provider_api.GetCustomEventsRPCResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.event_provider_api.GetCustomEventsRPCResponse}
 */
proto.event_provider_api.GetCustomEventsRPCResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setS(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrmsg(value);
      break;
    case 3:
      var value = new proto.event_provider_api.BlockEventsRPC;
      reader.readMessage(value,proto.event_provider_api.BlockEventsRPC.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.event_provider_api.GetCustomEventsRPCResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.event_provider_api.GetCustomEventsRPCResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.event_provider_api.GetCustomEventsRPCResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.event_provider_api.GetCustomEventsRPCResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getS();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErrmsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.event_provider_api.BlockEventsRPC.serializeBinaryToWriter
    );
  }
};


/**
 * optional string s = 1;
 * @return {string}
 */
proto.event_provider_api.GetCustomEventsRPCResponse.prototype.getS = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_provider_api.GetCustomEventsRPCResponse} returns this
 */
proto.event_provider_api.GetCustomEventsRPCResponse.prototype.setS = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string errmsg = 2;
 * @return {string}
 */
proto.event_provider_api.GetCustomEventsRPCResponse.prototype.getErrmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.event_provider_api.GetCustomEventsRPCResponse} returns this
 */
proto.event_provider_api.GetCustomEventsRPCResponse.prototype.setErrmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional BlockEventsRPC data = 3;
 * @return {?proto.event_provider_api.BlockEventsRPC}
 */
proto.event_provider_api.GetCustomEventsRPCResponse.prototype.getData = function() {
  return /** @type{?proto.event_provider_api.BlockEventsRPC} */ (
    jspb.Message.getWrapperField(this, proto.event_provider_api.BlockEventsRPC, 3));
};


/**
 * @param {?proto.event_provider_api.BlockEventsRPC|undefined} value
 * @return {!proto.event_provider_api.GetCustomEventsRPCResponse} returns this
*/
proto.event_provider_api.GetCustomEventsRPCResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.event_provider_api.GetCustomEventsRPCResponse} returns this
 */
proto.event_provider_api.GetCustomEventsRPCResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.event_provider_api.GetCustomEventsRPCResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.event_provider_api);
