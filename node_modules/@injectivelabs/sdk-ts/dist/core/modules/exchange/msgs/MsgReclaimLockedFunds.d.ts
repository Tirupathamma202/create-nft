import { MsgReclaimLockedFunds as BaseMsgReclaimLockedFunds } from '@injectivelabs/chain-api/injective/exchange/v1beta1/tx_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgReclaimLockedFunds {
    interface Params {
        sender: string;
        lockedAccountPubKey: string;
        signature: Uint8Array;
    }
    type Proto = BaseMsgReclaimLockedFunds;
    type Object = BaseMsgReclaimLockedFunds.AsObject;
}
/**
 * @category Messages
 */
export default class MsgReclaimLockedFunds extends MsgBase<MsgReclaimLockedFunds.Params, MsgReclaimLockedFunds.Proto, MsgReclaimLockedFunds.Object> {
    static fromJSON(params: MsgReclaimLockedFunds.Params): MsgReclaimLockedFunds;
    toProto(): BaseMsgReclaimLockedFunds;
    toData(): {
        sender: string;
        lockedaccountpubkey: string | Uint8Array;
        signature: string | Uint8Array;
        '@type': string;
    };
    toAmino(): {
        type: string;
        value: {
            sender: string;
            lockedaccountpubkey: string | Uint8Array;
            signature: string | Uint8Array;
        };
    };
    toWeb3(): {
        sender: string;
        lockedaccountpubkey: string | Uint8Array;
        signature: string | Uint8Array;
        '@type': string;
    };
    toDirectSign(): {
        type: string;
        message: BaseMsgReclaimLockedFunds;
    };
}
//# sourceMappingURL=MsgReclaimLockedFunds.d.ts.map