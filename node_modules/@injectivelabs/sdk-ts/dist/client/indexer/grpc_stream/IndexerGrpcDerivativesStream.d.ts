import { StreamOrdersResponse, StreamTradesResponse, StreamMarketResponse, StreamOrderbookResponse, StreamPositionsResponse, StreamOrderbookV2Response, StreamOrdersHistoryResponse, StreamOrderbookUpdateResponse } from '@injectivelabs/indexer-api/injective_derivative_exchange_rpc_pb';
import { InjectiveDerivativeExchangeRPCClient } from '@injectivelabs/indexer-api/injective_derivative_exchange_rpc_pb_service';
import { TradeDirection, TradeExecutionSide, TradeExecutionType } from '../../../types';
import { StreamStatusResponse } from '../types';
import { PaginationOption } from '../../../types/pagination';
import { DerivativeOrderSide, DerivativeOrderState } from '../types/derivatives';
import { IndexerDerivativeStreamTransformer } from '../transformers';
export type DerivativeOrderbookStreamCallback = (response: ReturnType<typeof IndexerDerivativeStreamTransformer.orderbookStreamCallback>) => void;
export type DerivativeOrderbookV2StreamCallback = (response: ReturnType<typeof IndexerDerivativeStreamTransformer.orderbookV2StreamCallback>) => void;
export type DerivativeOrderbookUpdateStreamCallback = (response: ReturnType<typeof IndexerDerivativeStreamTransformer.orderbookUpdateStreamCallback>) => void;
export type DerivativeOrdersStreamCallback = (response: ReturnType<typeof IndexerDerivativeStreamTransformer.ordersStreamCallback>) => void;
export type DerivativeOrderHistoryStreamCallback = (response: ReturnType<typeof IndexerDerivativeStreamTransformer.orderHistoryStreamCallback>) => void;
export type DerivativeTradesStreamCallback = (response: ReturnType<typeof IndexerDerivativeStreamTransformer.tradesStreamCallback>) => void;
export type PositionsStreamCallback = (response: ReturnType<typeof IndexerDerivativeStreamTransformer.positionStreamCallback>) => void;
export type MarketStreamCallback = (response: StreamMarketResponse) => void;
/**
 * @category Indexer Grpc Stream
 */
export declare class IndexerGrpcDerivativesStream {
    protected client: InjectiveDerivativeExchangeRPCClient;
    constructor(endpoint: string);
    streamDerivativeOrderbook({ marketIds, callback, onEndCallback, onStatusCallback, }: {
        marketIds: string[];
        callback: DerivativeOrderbookStreamCallback;
        onEndCallback?: (status?: StreamStatusResponse) => void;
        onStatusCallback?: (status: StreamStatusResponse) => void;
    }): import("@injectivelabs/indexer-api/injective_derivative_exchange_rpc_pb_service").ResponseStream<StreamOrderbookResponse>;
    streamDerivativeOrders({ marketId, subaccountId, orderSide, callback, onEndCallback, onStatusCallback, }: {
        marketId?: string;
        subaccountId?: string;
        orderSide?: DerivativeOrderSide;
        callback: DerivativeOrdersStreamCallback;
        onEndCallback?: (status?: StreamStatusResponse) => void;
        onStatusCallback?: (status: StreamStatusResponse) => void;
    }): import("@injectivelabs/indexer-api/injective_derivative_exchange_rpc_pb_service").ResponseStream<StreamOrdersResponse>;
    streamDerivativeOrderHistory({ subaccountId, marketId, orderTypes, executionTypes, direction, state, callback, onEndCallback, onStatusCallback, }: {
        marketId?: string;
        subaccountId?: string;
        orderTypes?: DerivativeOrderSide[];
        executionTypes?: TradeExecutionType[];
        direction?: TradeDirection;
        state?: DerivativeOrderState;
        callback: DerivativeOrderHistoryStreamCallback;
        onEndCallback?: (status?: StreamStatusResponse) => void;
        onStatusCallback?: (status: StreamStatusResponse) => void;
    }): import("@injectivelabs/indexer-api/injective_derivative_exchange_rpc_pb_service").ResponseStream<StreamOrdersHistoryResponse>;
    streamDerivativeTrades({ marketIds, marketId, subaccountIds, subaccountId, callback, pagination, executionSide, direction, onEndCallback, onStatusCallback, }: {
        marketIds?: string[];
        marketId?: string;
        subaccountIds?: string[];
        subaccountId?: string;
        pagination?: PaginationOption;
        executionSide?: TradeExecutionSide;
        direction?: TradeDirection;
        callback: DerivativeTradesStreamCallback;
        onEndCallback?: (status?: StreamStatusResponse) => void;
        onStatusCallback?: (status: StreamStatusResponse) => void;
    }): import("@injectivelabs/indexer-api/injective_derivative_exchange_rpc_pb_service").ResponseStream<StreamTradesResponse>;
    streamDerivativePositions({ marketId, subaccountId, callback, onEndCallback, onStatusCallback, }: {
        marketId?: string;
        subaccountId?: string;
        callback: PositionsStreamCallback;
        onEndCallback?: (status?: StreamStatusResponse) => void;
        onStatusCallback?: (status: StreamStatusResponse) => void;
    }): import("@injectivelabs/indexer-api/injective_derivative_exchange_rpc_pb_service").ResponseStream<StreamPositionsResponse>;
    streamDerivativeMarket({ marketIds, callback, onEndCallback, onStatusCallback, }: {
        marketIds?: string[];
        callback: MarketStreamCallback;
        onEndCallback?: (status?: StreamStatusResponse) => void;
        onStatusCallback?: (status: StreamStatusResponse) => void;
    }): import("@injectivelabs/indexer-api/injective_derivative_exchange_rpc_pb_service").ResponseStream<StreamMarketResponse>;
    streamDerivativeOrderbookV2({ marketIds, callback, onEndCallback, onStatusCallback, }: {
        marketIds: string[];
        callback: DerivativeOrderbookV2StreamCallback;
        onEndCallback?: (status?: StreamStatusResponse) => void;
        onStatusCallback?: (status: StreamStatusResponse) => void;
    }): import("@injectivelabs/indexer-api/injective_derivative_exchange_rpc_pb_service").ResponseStream<StreamOrderbookV2Response>;
    streamDerivativeOrderbookUpdate({ marketIds, callback, onEndCallback, onStatusCallback, }: {
        marketIds: string[];
        callback: DerivativeOrderbookV2StreamCallback;
        onEndCallback?: (status?: StreamStatusResponse) => void;
        onStatusCallback?: (status: StreamStatusResponse) => void;
    }): import("@injectivelabs/indexer-api/injective_derivative_exchange_rpc_pb_service").ResponseStream<StreamOrderbookUpdateResponse>;
}
//# sourceMappingURL=IndexerGrpcDerivativesStream.d.ts.map