// source: injective_explorer_rpc.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

goog.exportSymbol('proto.injective_explorer_rpc.BlockDetailInfo', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.BlockInfo', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.Checksum', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.ContractFund', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.ContractPermission', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.CosmosCoin', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.Cw20MarketingInfo', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.Cw20Metadata', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.Cw20TokenInfo', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.Event', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GasFee', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetAccountTxsRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetAccountTxsResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetBlockRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetBlockResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetBlocksRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetBlocksResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetContractTxsRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetContractTxsResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetCw20BalanceRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetCw20BalanceResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetIBCTransferTxsRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetIBCTransferTxsResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetPeggyDepositTxsRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetPeggyDepositTxsResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetTxByTxHashRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetTxByTxHashResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetTxsRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetTxsResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetValidatorRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetValidatorResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetValidatorUptimeRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetValidatorUptimeResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetValidatorsRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetValidatorsResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetWasmCodeByIDRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetWasmCodeByIDResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetWasmCodesRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetWasmCodesResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetWasmContractByAddressRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetWasmContractByAddressResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetWasmContractsRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.GetWasmContractsResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.IBCTransferTx', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.Paging', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.PeggyDepositTx', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.PeggyWithdrawalTx', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.Relayer', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.RelayerMarkets', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.RelayersRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.RelayersResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.Signature', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.SlashingEvent', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.StreamBlocksRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.StreamBlocksResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.StreamTxsRequest', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.StreamTxsResponse', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.TxData', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.TxDataRPC', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.TxDetailData', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.Validator', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.ValidatorDescription', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.ValidatorUptime', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.WasmCode', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.WasmContract', null, global);
goog.exportSymbol('proto.injective_explorer_rpc.WasmCw20Balance', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetAccountTxsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetAccountTxsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetAccountTxsRequest.displayName = 'proto.injective_explorer_rpc.GetAccountTxsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetAccountTxsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GetAccountTxsResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GetAccountTxsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetAccountTxsResponse.displayName = 'proto.injective_explorer_rpc.GetAccountTxsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.Paging = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.Paging, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.Paging.displayName = 'proto.injective_explorer_rpc.Paging';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.TxDetailData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.TxDetailData.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.TxDetailData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.TxDetailData.displayName = 'proto.injective_explorer_rpc.TxDetailData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GasFee = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GasFee.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GasFee, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GasFee.displayName = 'proto.injective_explorer_rpc.GasFee';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.CosmosCoin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.CosmosCoin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.CosmosCoin.displayName = 'proto.injective_explorer_rpc.CosmosCoin';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.Event.displayName = 'proto.injective_explorer_rpc.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.Signature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.Signature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.Signature.displayName = 'proto.injective_explorer_rpc.Signature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetContractTxsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetContractTxsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetContractTxsRequest.displayName = 'proto.injective_explorer_rpc.GetContractTxsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetContractTxsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GetContractTxsResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GetContractTxsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetContractTxsResponse.displayName = 'proto.injective_explorer_rpc.GetContractTxsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetBlocksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetBlocksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetBlocksRequest.displayName = 'proto.injective_explorer_rpc.GetBlocksRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetBlocksResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GetBlocksResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GetBlocksResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetBlocksResponse.displayName = 'proto.injective_explorer_rpc.GetBlocksResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.BlockInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.BlockInfo.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.BlockInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.BlockInfo.displayName = 'proto.injective_explorer_rpc.BlockInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.TxDataRPC = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.TxDataRPC, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.TxDataRPC.displayName = 'proto.injective_explorer_rpc.TxDataRPC';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetBlockRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetBlockRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetBlockRequest.displayName = 'proto.injective_explorer_rpc.GetBlockRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetBlockResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetBlockResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetBlockResponse.displayName = 'proto.injective_explorer_rpc.GetBlockResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.BlockDetailInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.BlockDetailInfo.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.BlockDetailInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.BlockDetailInfo.displayName = 'proto.injective_explorer_rpc.BlockDetailInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.TxData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.TxData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.TxData.displayName = 'proto.injective_explorer_rpc.TxData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetValidatorsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetValidatorsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetValidatorsRequest.displayName = 'proto.injective_explorer_rpc.GetValidatorsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetValidatorsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GetValidatorsResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GetValidatorsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetValidatorsResponse.displayName = 'proto.injective_explorer_rpc.GetValidatorsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.Validator = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.Validator.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.Validator, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.Validator.displayName = 'proto.injective_explorer_rpc.Validator';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.ValidatorDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.ValidatorDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.ValidatorDescription.displayName = 'proto.injective_explorer_rpc.ValidatorDescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.ValidatorUptime = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.ValidatorUptime, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.ValidatorUptime.displayName = 'proto.injective_explorer_rpc.ValidatorUptime';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.SlashingEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.SlashingEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.SlashingEvent.displayName = 'proto.injective_explorer_rpc.SlashingEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetValidatorRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetValidatorRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetValidatorRequest.displayName = 'proto.injective_explorer_rpc.GetValidatorRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetValidatorResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetValidatorResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetValidatorResponse.displayName = 'proto.injective_explorer_rpc.GetValidatorResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetValidatorUptimeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetValidatorUptimeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetValidatorUptimeRequest.displayName = 'proto.injective_explorer_rpc.GetValidatorUptimeRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GetValidatorUptimeResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GetValidatorUptimeResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetValidatorUptimeResponse.displayName = 'proto.injective_explorer_rpc.GetValidatorUptimeResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetTxsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetTxsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetTxsRequest.displayName = 'proto.injective_explorer_rpc.GetTxsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetTxsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GetTxsResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GetTxsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetTxsResponse.displayName = 'proto.injective_explorer_rpc.GetTxsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetTxByTxHashRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetTxByTxHashRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetTxByTxHashRequest.displayName = 'proto.injective_explorer_rpc.GetTxByTxHashRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetTxByTxHashResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetTxByTxHashResponse.displayName = 'proto.injective_explorer_rpc.GetTxByTxHashResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetPeggyDepositTxsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.displayName = 'proto.injective_explorer_rpc.GetPeggyDepositTxsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GetPeggyDepositTxsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.displayName = 'proto.injective_explorer_rpc.GetPeggyDepositTxsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.PeggyDepositTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.PeggyDepositTx.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.PeggyDepositTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.PeggyDepositTx.displayName = 'proto.injective_explorer_rpc.PeggyDepositTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.displayName = 'proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.displayName = 'proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.PeggyWithdrawalTx.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.PeggyWithdrawalTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.PeggyWithdrawalTx.displayName = 'proto.injective_explorer_rpc.PeggyWithdrawalTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetIBCTransferTxsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetIBCTransferTxsRequest.displayName = 'proto.injective_explorer_rpc.GetIBCTransferTxsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetIBCTransferTxsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GetIBCTransferTxsResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GetIBCTransferTxsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetIBCTransferTxsResponse.displayName = 'proto.injective_explorer_rpc.GetIBCTransferTxsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.IBCTransferTx = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.IBCTransferTx.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.IBCTransferTx, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.IBCTransferTx.displayName = 'proto.injective_explorer_rpc.IBCTransferTx';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetWasmCodesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetWasmCodesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetWasmCodesRequest.displayName = 'proto.injective_explorer_rpc.GetWasmCodesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetWasmCodesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GetWasmCodesResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GetWasmCodesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetWasmCodesResponse.displayName = 'proto.injective_explorer_rpc.GetWasmCodesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.WasmCode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.WasmCode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.WasmCode.displayName = 'proto.injective_explorer_rpc.WasmCode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.Checksum = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.Checksum, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.Checksum.displayName = 'proto.injective_explorer_rpc.Checksum';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.ContractPermission = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.ContractPermission, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.ContractPermission.displayName = 'proto.injective_explorer_rpc.ContractPermission';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetWasmCodeByIDRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetWasmCodeByIDRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetWasmCodeByIDRequest.displayName = 'proto.injective_explorer_rpc.GetWasmCodeByIDRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetWasmCodeByIDResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetWasmCodeByIDResponse.displayName = 'proto.injective_explorer_rpc.GetWasmCodeByIDResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetWasmContractsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetWasmContractsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetWasmContractsRequest.displayName = 'proto.injective_explorer_rpc.GetWasmContractsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetWasmContractsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GetWasmContractsResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GetWasmContractsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetWasmContractsResponse.displayName = 'proto.injective_explorer_rpc.GetWasmContractsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.WasmContract = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.WasmContract.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.WasmContract, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.WasmContract.displayName = 'proto.injective_explorer_rpc.WasmContract';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.ContractFund = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.ContractFund, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.ContractFund.displayName = 'proto.injective_explorer_rpc.ContractFund';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.Cw20Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.Cw20Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.Cw20Metadata.displayName = 'proto.injective_explorer_rpc.Cw20Metadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.Cw20TokenInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.Cw20TokenInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.Cw20TokenInfo.displayName = 'proto.injective_explorer_rpc.Cw20TokenInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.Cw20MarketingInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.Cw20MarketingInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.Cw20MarketingInfo.displayName = 'proto.injective_explorer_rpc.Cw20MarketingInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetWasmContractByAddressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetWasmContractByAddressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetWasmContractByAddressRequest.displayName = 'proto.injective_explorer_rpc.GetWasmContractByAddressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GetWasmContractByAddressResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GetWasmContractByAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetWasmContractByAddressResponse.displayName = 'proto.injective_explorer_rpc.GetWasmContractByAddressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetCw20BalanceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.GetCw20BalanceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetCw20BalanceRequest.displayName = 'proto.injective_explorer_rpc.GetCw20BalanceRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.GetCw20BalanceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.GetCw20BalanceResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.GetCw20BalanceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.GetCw20BalanceResponse.displayName = 'proto.injective_explorer_rpc.GetCw20BalanceResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.WasmCw20Balance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.WasmCw20Balance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.WasmCw20Balance.displayName = 'proto.injective_explorer_rpc.WasmCw20Balance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.RelayersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.RelayersRequest.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.RelayersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.RelayersRequest.displayName = 'proto.injective_explorer_rpc.RelayersRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.RelayersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.RelayersResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.RelayersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.RelayersResponse.displayName = 'proto.injective_explorer_rpc.RelayersResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.RelayerMarkets = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.RelayerMarkets.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.RelayerMarkets, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.RelayerMarkets.displayName = 'proto.injective_explorer_rpc.RelayerMarkets';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.Relayer = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.Relayer, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.Relayer.displayName = 'proto.injective_explorer_rpc.Relayer';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.StreamTxsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.StreamTxsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.StreamTxsRequest.displayName = 'proto.injective_explorer_rpc.StreamTxsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.StreamTxsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.StreamTxsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.StreamTxsResponse.displayName = 'proto.injective_explorer_rpc.StreamTxsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.StreamBlocksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.injective_explorer_rpc.StreamBlocksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.StreamBlocksRequest.displayName = 'proto.injective_explorer_rpc.StreamBlocksRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.injective_explorer_rpc.StreamBlocksResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.injective_explorer_rpc.StreamBlocksResponse.repeatedFields_, null);
};
goog.inherits(proto.injective_explorer_rpc.StreamBlocksResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.injective_explorer_rpc.StreamBlocksResponse.displayName = 'proto.injective_explorer_rpc.StreamBlocksResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetAccountTxsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetAccountTxsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    before: jspb.Message.getFieldWithDefault(msg, 2, 0),
    after: jspb.Message.getFieldWithDefault(msg, 3, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 4, 0),
    skip: jspb.Message.getFieldWithDefault(msg, 5, 0),
    type: jspb.Message.getFieldWithDefault(msg, 6, ""),
    module: jspb.Message.getFieldWithDefault(msg, 7, ""),
    fromNumber: jspb.Message.getFieldWithDefault(msg, 8, 0),
    toNumber: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetAccountTxsRequest}
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetAccountTxsRequest;
  return proto.injective_explorer_rpc.GetAccountTxsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetAccountTxsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetAccountTxsRequest}
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBefore(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAfter(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setLimit(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSkip(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setModule(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setFromNumber(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setToNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetAccountTxsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetAccountTxsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBefore();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAfter();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeSint32(
      4,
      f
    );
  }
  f = message.getSkip();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getModule();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFromNumber();
  if (f !== 0) {
    writer.writeSint64(
      8,
      f
    );
  }
  f = message.getToNumber();
  if (f !== 0) {
    writer.writeSint64(
      9,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetAccountTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 before = 2;
 * @return {number}
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.getBefore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetAccountTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.setBefore = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 after = 3;
 * @return {number}
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.getAfter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetAccountTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.setAfter = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional sint32 limit = 4;
 * @return {number}
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetAccountTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint64 skip = 5;
 * @return {number}
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetAccountTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.setSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string type = 6;
 * @return {string}
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetAccountTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string module = 7;
 * @return {string}
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.getModule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetAccountTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.setModule = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional sint64 from_number = 8;
 * @return {number}
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.getFromNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetAccountTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.setFromNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional sint64 to_number = 9;
 * @return {number}
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.getToNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetAccountTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetAccountTxsRequest.prototype.setToNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GetAccountTxsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetAccountTxsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetAccountTxsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetAccountTxsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetAccountTxsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paging: (f = msg.getPaging()) && proto.injective_explorer_rpc.Paging.toObject(includeInstance, f),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.injective_explorer_rpc.TxDetailData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetAccountTxsResponse}
 */
proto.injective_explorer_rpc.GetAccountTxsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetAccountTxsResponse;
  return proto.injective_explorer_rpc.GetAccountTxsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetAccountTxsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetAccountTxsResponse}
 */
proto.injective_explorer_rpc.GetAccountTxsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.injective_explorer_rpc.Paging;
      reader.readMessage(value,proto.injective_explorer_rpc.Paging.deserializeBinaryFromReader);
      msg.setPaging(value);
      break;
    case 2:
      var value = new proto.injective_explorer_rpc.TxDetailData;
      reader.readMessage(value,proto.injective_explorer_rpc.TxDetailData.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetAccountTxsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetAccountTxsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetAccountTxsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetAccountTxsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaging();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.injective_explorer_rpc.Paging.serializeBinaryToWriter
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.injective_explorer_rpc.TxDetailData.serializeBinaryToWriter
    );
  }
};


/**
 * optional Paging paging = 1;
 * @return {?proto.injective_explorer_rpc.Paging}
 */
proto.injective_explorer_rpc.GetAccountTxsResponse.prototype.getPaging = function() {
  return /** @type{?proto.injective_explorer_rpc.Paging} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Paging, 1));
};


/**
 * @param {?proto.injective_explorer_rpc.Paging|undefined} value
 * @return {!proto.injective_explorer_rpc.GetAccountTxsResponse} returns this
*/
proto.injective_explorer_rpc.GetAccountTxsResponse.prototype.setPaging = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.GetAccountTxsResponse} returns this
 */
proto.injective_explorer_rpc.GetAccountTxsResponse.prototype.clearPaging = function() {
  return this.setPaging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.GetAccountTxsResponse.prototype.hasPaging = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TxDetailData data = 2;
 * @return {!Array<!proto.injective_explorer_rpc.TxDetailData>}
 */
proto.injective_explorer_rpc.GetAccountTxsResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.TxDetailData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.TxDetailData, 2));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.TxDetailData>} value
 * @return {!proto.injective_explorer_rpc.GetAccountTxsResponse} returns this
*/
proto.injective_explorer_rpc.GetAccountTxsResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.injective_explorer_rpc.TxDetailData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.TxDetailData}
 */
proto.injective_explorer_rpc.GetAccountTxsResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective_explorer_rpc.TxDetailData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GetAccountTxsResponse} returns this
 */
proto.injective_explorer_rpc.GetAccountTxsResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.Paging.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.Paging.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.Paging} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Paging.toObject = function(includeInstance, msg) {
  var f, obj = {
    total: jspb.Message.getFieldWithDefault(msg, 1, 0),
    from: jspb.Message.getFieldWithDefault(msg, 2, 0),
    to: jspb.Message.getFieldWithDefault(msg, 3, 0),
    countBySubaccount: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.Paging}
 */
proto.injective_explorer_rpc.Paging.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.Paging;
  return proto.injective_explorer_rpc.Paging.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.Paging} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.Paging}
 */
proto.injective_explorer_rpc.Paging.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setTotal(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setFrom(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setTo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setCountBySubaccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.Paging.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.Paging.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.Paging} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Paging.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTotal();
  if (f !== 0) {
    writer.writeSint64(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f !== 0) {
    writer.writeSint32(
      2,
      f
    );
  }
  f = message.getTo();
  if (f !== 0) {
    writer.writeSint32(
      3,
      f
    );
  }
  f = message.getCountBySubaccount();
  if (f !== 0) {
    writer.writeSint64(
      4,
      f
    );
  }
};


/**
 * optional sint64 total = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.Paging.prototype.getTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.Paging} returns this
 */
proto.injective_explorer_rpc.Paging.prototype.setTotal = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional sint32 from = 2;
 * @return {number}
 */
proto.injective_explorer_rpc.Paging.prototype.getFrom = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.Paging} returns this
 */
proto.injective_explorer_rpc.Paging.prototype.setFrom = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional sint32 to = 3;
 * @return {number}
 */
proto.injective_explorer_rpc.Paging.prototype.getTo = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.Paging} returns this
 */
proto.injective_explorer_rpc.Paging.prototype.setTo = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional sint64 count_by_subaccount = 4;
 * @return {number}
 */
proto.injective_explorer_rpc.Paging.prototype.getCountBySubaccount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.Paging} returns this
 */
proto.injective_explorer_rpc.Paging.prototype.setCountBySubaccount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.TxDetailData.repeatedFields_ = [13,16];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.TxDetailData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.TxDetailData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.TxDetailData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blockTimestamp: jspb.Message.getFieldWithDefault(msg, 3, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 4, ""),
    code: jspb.Message.getFieldWithDefault(msg, 5, 0),
    data: msg.getData_asB64(),
    info: jspb.Message.getFieldWithDefault(msg, 8, ""),
    gasWanted: jspb.Message.getFieldWithDefault(msg, 9, 0),
    gasUsed: jspb.Message.getFieldWithDefault(msg, 10, 0),
    gasFee: (f = msg.getGasFee()) && proto.injective_explorer_rpc.GasFee.toObject(includeInstance, f),
    codespace: jspb.Message.getFieldWithDefault(msg, 12, ""),
    eventsList: jspb.Message.toObjectList(msg.getEventsList(),
    proto.injective_explorer_rpc.Event.toObject, includeInstance),
    txType: jspb.Message.getFieldWithDefault(msg, 14, ""),
    messages: msg.getMessages_asB64(),
    signaturesList: jspb.Message.toObjectList(msg.getSignaturesList(),
    proto.injective_explorer_rpc.Signature.toObject, includeInstance),
    memo: jspb.Message.getFieldWithDefault(msg, 17, ""),
    txNumber: jspb.Message.getFieldWithDefault(msg, 18, 0),
    blockUnixTimestamp: jspb.Message.getFieldWithDefault(msg, 19, 0),
    errorLog: jspb.Message.getFieldWithDefault(msg, 20, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.TxDetailData}
 */
proto.injective_explorer_rpc.TxDetailData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.TxDetailData;
  return proto.injective_explorer_rpc.TxDetailData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.TxDetailData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.TxDetailData}
 */
proto.injective_explorer_rpc.TxDetailData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockTimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setInfo(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setGasWanted(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setGasUsed(value);
      break;
    case 11:
      var value = new proto.injective_explorer_rpc.GasFee;
      reader.readMessage(value,proto.injective_explorer_rpc.GasFee.deserializeBinaryFromReader);
      msg.setGasFee(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodespace(value);
      break;
    case 13:
      var value = new proto.injective_explorer_rpc.Event;
      reader.readMessage(value,proto.injective_explorer_rpc.Event.deserializeBinaryFromReader);
      msg.addEvents(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxType(value);
      break;
    case 15:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMessages(value);
      break;
    case 16:
      var value = new proto.injective_explorer_rpc.Signature;
      reader.readMessage(value,proto.injective_explorer_rpc.Signature.deserializeBinaryFromReader);
      msg.addSignatures(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemo(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTxNumber(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockUnixTimestamp(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorLog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.TxDetailData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.TxDetailData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.TxDetailData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockNumber();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getBlockTimestamp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getInfo();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getGasWanted();
  if (f !== 0) {
    writer.writeSint64(
      9,
      f
    );
  }
  f = message.getGasUsed();
  if (f !== 0) {
    writer.writeSint64(
      10,
      f
    );
  }
  f = message.getGasFee();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.injective_explorer_rpc.GasFee.serializeBinaryToWriter
    );
  }
  f = message.getCodespace();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.injective_explorer_rpc.Event.serializeBinaryToWriter
    );
  }
  f = message.getTxType();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getMessages_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      15,
      f
    );
  }
  f = message.getSignaturesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      16,
      f,
      proto.injective_explorer_rpc.Signature.serializeBinaryToWriter
    );
  }
  f = message.getMemo();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getTxNumber();
  if (f !== 0) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = message.getBlockUnixTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      19,
      f
    );
  }
  f = message.getErrorLog();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 block_number = 2;
 * @return {number}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getBlockNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setBlockNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string block_timestamp = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getBlockTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setBlockTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string hash = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint32 code = 5;
 * @return {number}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bytes data = 6;
 * @return {!(string|Uint8Array)}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes data = 6;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setData = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional string info = 8;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional sint64 gas_wanted = 9;
 * @return {number}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getGasWanted = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setGasWanted = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional sint64 gas_used = 10;
 * @return {number}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getGasUsed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setGasUsed = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional GasFee gas_fee = 11;
 * @return {?proto.injective_explorer_rpc.GasFee}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getGasFee = function() {
  return /** @type{?proto.injective_explorer_rpc.GasFee} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.GasFee, 11));
};


/**
 * @param {?proto.injective_explorer_rpc.GasFee|undefined} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
*/
proto.injective_explorer_rpc.TxDetailData.prototype.setGasFee = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.clearGasFee = function() {
  return this.setGasFee(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.hasGasFee = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string codespace = 12;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getCodespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setCodespace = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * repeated Event events = 13;
 * @return {!Array<!proto.injective_explorer_rpc.Event>}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getEventsList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.Event>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.Event, 13));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.Event>} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
*/
proto.injective_explorer_rpc.TxDetailData.prototype.setEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.injective_explorer_rpc.Event=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.Event}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.addEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.injective_explorer_rpc.Event, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.clearEventsList = function() {
  return this.setEventsList([]);
};


/**
 * optional string tx_type = 14;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getTxType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setTxType = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bytes messages = 15;
 * @return {!(string|Uint8Array)}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getMessages = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * optional bytes messages = 15;
 * This is a type-conversion wrapper around `getMessages()`
 * @return {string}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getMessages_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMessages()));
};


/**
 * optional bytes messages = 15;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessages()`
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getMessages_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMessages()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setMessages = function(value) {
  return jspb.Message.setProto3BytesField(this, 15, value);
};


/**
 * repeated Signature signatures = 16;
 * @return {!Array<!proto.injective_explorer_rpc.Signature>}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getSignaturesList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.Signature>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.Signature, 16));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.Signature>} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
*/
proto.injective_explorer_rpc.TxDetailData.prototype.setSignaturesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 16, value);
};


/**
 * @param {!proto.injective_explorer_rpc.Signature=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.Signature}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.addSignatures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 16, opt_value, proto.injective_explorer_rpc.Signature, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.clearSignaturesList = function() {
  return this.setSignaturesList([]);
};


/**
 * optional string memo = 17;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getMemo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setMemo = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional uint64 tx_number = 18;
 * @return {number}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getTxNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setTxNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional uint64 block_unix_timestamp = 19;
 * @return {number}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getBlockUnixTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setBlockUnixTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 19, value);
};


/**
 * optional string error_log = 20;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDetailData.prototype.getErrorLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDetailData} returns this
 */
proto.injective_explorer_rpc.TxDetailData.prototype.setErrorLog = function(value) {
  return jspb.Message.setProto3StringField(this, 20, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GasFee.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GasFee.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GasFee.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GasFee} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GasFee.toObject = function(includeInstance, msg) {
  var f, obj = {
    amountList: jspb.Message.toObjectList(msg.getAmountList(),
    proto.injective_explorer_rpc.CosmosCoin.toObject, includeInstance),
    gasLimit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    payer: jspb.Message.getFieldWithDefault(msg, 3, ""),
    granter: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GasFee}
 */
proto.injective_explorer_rpc.GasFee.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GasFee;
  return proto.injective_explorer_rpc.GasFee.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GasFee} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GasFee}
 */
proto.injective_explorer_rpc.GasFee.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.injective_explorer_rpc.CosmosCoin;
      reader.readMessage(value,proto.injective_explorer_rpc.CosmosCoin.deserializeBinaryFromReader);
      msg.addAmount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGasLimit(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayer(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGranter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GasFee.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GasFee.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GasFee} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GasFee.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAmountList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.injective_explorer_rpc.CosmosCoin.serializeBinaryToWriter
    );
  }
  f = message.getGasLimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getPayer();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGranter();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * repeated CosmosCoin amount = 1;
 * @return {!Array<!proto.injective_explorer_rpc.CosmosCoin>}
 */
proto.injective_explorer_rpc.GasFee.prototype.getAmountList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.CosmosCoin>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.CosmosCoin, 1));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.CosmosCoin>} value
 * @return {!proto.injective_explorer_rpc.GasFee} returns this
*/
proto.injective_explorer_rpc.GasFee.prototype.setAmountList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.injective_explorer_rpc.CosmosCoin=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.CosmosCoin}
 */
proto.injective_explorer_rpc.GasFee.prototype.addAmount = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective_explorer_rpc.CosmosCoin, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GasFee} returns this
 */
proto.injective_explorer_rpc.GasFee.prototype.clearAmountList = function() {
  return this.setAmountList([]);
};


/**
 * optional uint64 gas_limit = 2;
 * @return {number}
 */
proto.injective_explorer_rpc.GasFee.prototype.getGasLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GasFee} returns this
 */
proto.injective_explorer_rpc.GasFee.prototype.setGasLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string payer = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.GasFee.prototype.getPayer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GasFee} returns this
 */
proto.injective_explorer_rpc.GasFee.prototype.setPayer = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string granter = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.GasFee.prototype.getGranter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GasFee} returns this
 */
proto.injective_explorer_rpc.GasFee.prototype.setGranter = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.CosmosCoin.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.CosmosCoin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.CosmosCoin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.CosmosCoin.toObject = function(includeInstance, msg) {
  var f, obj = {
    denom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.CosmosCoin}
 */
proto.injective_explorer_rpc.CosmosCoin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.CosmosCoin;
  return proto.injective_explorer_rpc.CosmosCoin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.CosmosCoin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.CosmosCoin}
 */
proto.injective_explorer_rpc.CosmosCoin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.CosmosCoin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.CosmosCoin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.CosmosCoin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.CosmosCoin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string denom = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.CosmosCoin.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.CosmosCoin} returns this
 */
proto.injective_explorer_rpc.CosmosCoin.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.CosmosCoin.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.CosmosCoin} returns this
 */
proto.injective_explorer_rpc.CosmosCoin.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, ""),
    attributesMap: (f = msg.getAttributesMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.Event}
 */
proto.injective_explorer_rpc.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.Event;
  return proto.injective_explorer_rpc.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.Event}
 */
proto.injective_explorer_rpc.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 2:
      var value = msg.getAttributesMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAttributesMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional string type = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.Event.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Event} returns this
 */
proto.injective_explorer_rpc.Event.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * map<string, string> attributes = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.injective_explorer_rpc.Event.prototype.getAttributesMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.injective_explorer_rpc.Event} returns this
 */
proto.injective_explorer_rpc.Event.prototype.clearAttributesMap = function() {
  this.getAttributesMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.Signature.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.Signature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.Signature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Signature.toObject = function(includeInstance, msg) {
  var f, obj = {
    pubkey: jspb.Message.getFieldWithDefault(msg, 1, ""),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 3, 0),
    signature: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.Signature}
 */
proto.injective_explorer_rpc.Signature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.Signature;
  return proto.injective_explorer_rpc.Signature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.Signature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.Signature}
 */
proto.injective_explorer_rpc.Signature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPubkey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.Signature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.Signature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.Signature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Signature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPubkey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getSignature();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string pubkey = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.Signature.prototype.getPubkey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Signature} returns this
 */
proto.injective_explorer_rpc.Signature.prototype.setPubkey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.Signature.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Signature} returns this
 */
proto.injective_explorer_rpc.Signature.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 sequence = 3;
 * @return {number}
 */
proto.injective_explorer_rpc.Signature.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.Signature} returns this
 */
proto.injective_explorer_rpc.Signature.prototype.setSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string signature = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.Signature.prototype.getSignature = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Signature} returns this
 */
proto.injective_explorer_rpc.Signature.prototype.setSignature = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetContractTxsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetContractTxsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetContractTxsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetContractTxsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    skip: jspb.Message.getFieldWithDefault(msg, 3, 0),
    fromNumber: jspb.Message.getFieldWithDefault(msg, 4, 0),
    toNumber: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetContractTxsRequest}
 */
proto.injective_explorer_rpc.GetContractTxsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetContractTxsRequest;
  return proto.injective_explorer_rpc.GetContractTxsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetContractTxsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetContractTxsRequest}
 */
proto.injective_explorer_rpc.GetContractTxsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSkip(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setFromNumber(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setToNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetContractTxsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetContractTxsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetContractTxsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetContractTxsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeSint32(
      2,
      f
    );
  }
  f = message.getSkip();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getFromNumber();
  if (f !== 0) {
    writer.writeSint64(
      4,
      f
    );
  }
  f = message.getToNumber();
  if (f !== 0) {
    writer.writeSint64(
      5,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetContractTxsRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetContractTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetContractTxsRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional sint32 limit = 2;
 * @return {number}
 */
proto.injective_explorer_rpc.GetContractTxsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetContractTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetContractTxsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 skip = 3;
 * @return {number}
 */
proto.injective_explorer_rpc.GetContractTxsRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetContractTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetContractTxsRequest.prototype.setSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional sint64 from_number = 4;
 * @return {number}
 */
proto.injective_explorer_rpc.GetContractTxsRequest.prototype.getFromNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetContractTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetContractTxsRequest.prototype.setFromNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional sint64 to_number = 5;
 * @return {number}
 */
proto.injective_explorer_rpc.GetContractTxsRequest.prototype.getToNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetContractTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetContractTxsRequest.prototype.setToNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GetContractTxsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetContractTxsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetContractTxsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetContractTxsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetContractTxsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paging: (f = msg.getPaging()) && proto.injective_explorer_rpc.Paging.toObject(includeInstance, f),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.injective_explorer_rpc.TxDetailData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetContractTxsResponse}
 */
proto.injective_explorer_rpc.GetContractTxsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetContractTxsResponse;
  return proto.injective_explorer_rpc.GetContractTxsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetContractTxsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetContractTxsResponse}
 */
proto.injective_explorer_rpc.GetContractTxsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.injective_explorer_rpc.Paging;
      reader.readMessage(value,proto.injective_explorer_rpc.Paging.deserializeBinaryFromReader);
      msg.setPaging(value);
      break;
    case 2:
      var value = new proto.injective_explorer_rpc.TxDetailData;
      reader.readMessage(value,proto.injective_explorer_rpc.TxDetailData.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetContractTxsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetContractTxsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetContractTxsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetContractTxsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaging();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.injective_explorer_rpc.Paging.serializeBinaryToWriter
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.injective_explorer_rpc.TxDetailData.serializeBinaryToWriter
    );
  }
};


/**
 * optional Paging paging = 1;
 * @return {?proto.injective_explorer_rpc.Paging}
 */
proto.injective_explorer_rpc.GetContractTxsResponse.prototype.getPaging = function() {
  return /** @type{?proto.injective_explorer_rpc.Paging} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Paging, 1));
};


/**
 * @param {?proto.injective_explorer_rpc.Paging|undefined} value
 * @return {!proto.injective_explorer_rpc.GetContractTxsResponse} returns this
*/
proto.injective_explorer_rpc.GetContractTxsResponse.prototype.setPaging = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.GetContractTxsResponse} returns this
 */
proto.injective_explorer_rpc.GetContractTxsResponse.prototype.clearPaging = function() {
  return this.setPaging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.GetContractTxsResponse.prototype.hasPaging = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TxDetailData data = 2;
 * @return {!Array<!proto.injective_explorer_rpc.TxDetailData>}
 */
proto.injective_explorer_rpc.GetContractTxsResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.TxDetailData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.TxDetailData, 2));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.TxDetailData>} value
 * @return {!proto.injective_explorer_rpc.GetContractTxsResponse} returns this
*/
proto.injective_explorer_rpc.GetContractTxsResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.injective_explorer_rpc.TxDetailData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.TxDetailData}
 */
proto.injective_explorer_rpc.GetContractTxsResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective_explorer_rpc.TxDetailData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GetContractTxsResponse} returns this
 */
proto.injective_explorer_rpc.GetContractTxsResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetBlocksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetBlocksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetBlocksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetBlocksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    before: jspb.Message.getFieldWithDefault(msg, 1, 0),
    after: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetBlocksRequest}
 */
proto.injective_explorer_rpc.GetBlocksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetBlocksRequest;
  return proto.injective_explorer_rpc.GetBlocksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetBlocksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetBlocksRequest}
 */
proto.injective_explorer_rpc.GetBlocksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBefore(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAfter(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetBlocksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetBlocksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetBlocksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetBlocksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBefore();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAfter();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeSint32(
      3,
      f
    );
  }
};


/**
 * optional uint64 before = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.GetBlocksRequest.prototype.getBefore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetBlocksRequest} returns this
 */
proto.injective_explorer_rpc.GetBlocksRequest.prototype.setBefore = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 after = 2;
 * @return {number}
 */
proto.injective_explorer_rpc.GetBlocksRequest.prototype.getAfter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetBlocksRequest} returns this
 */
proto.injective_explorer_rpc.GetBlocksRequest.prototype.setAfter = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional sint32 limit = 3;
 * @return {number}
 */
proto.injective_explorer_rpc.GetBlocksRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetBlocksRequest} returns this
 */
proto.injective_explorer_rpc.GetBlocksRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GetBlocksResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetBlocksResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetBlocksResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetBlocksResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetBlocksResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paging: (f = msg.getPaging()) && proto.injective_explorer_rpc.Paging.toObject(includeInstance, f),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.injective_explorer_rpc.BlockInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetBlocksResponse}
 */
proto.injective_explorer_rpc.GetBlocksResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetBlocksResponse;
  return proto.injective_explorer_rpc.GetBlocksResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetBlocksResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetBlocksResponse}
 */
proto.injective_explorer_rpc.GetBlocksResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.injective_explorer_rpc.Paging;
      reader.readMessage(value,proto.injective_explorer_rpc.Paging.deserializeBinaryFromReader);
      msg.setPaging(value);
      break;
    case 2:
      var value = new proto.injective_explorer_rpc.BlockInfo;
      reader.readMessage(value,proto.injective_explorer_rpc.BlockInfo.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetBlocksResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetBlocksResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetBlocksResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetBlocksResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaging();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.injective_explorer_rpc.Paging.serializeBinaryToWriter
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.injective_explorer_rpc.BlockInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Paging paging = 1;
 * @return {?proto.injective_explorer_rpc.Paging}
 */
proto.injective_explorer_rpc.GetBlocksResponse.prototype.getPaging = function() {
  return /** @type{?proto.injective_explorer_rpc.Paging} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Paging, 1));
};


/**
 * @param {?proto.injective_explorer_rpc.Paging|undefined} value
 * @return {!proto.injective_explorer_rpc.GetBlocksResponse} returns this
*/
proto.injective_explorer_rpc.GetBlocksResponse.prototype.setPaging = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.GetBlocksResponse} returns this
 */
proto.injective_explorer_rpc.GetBlocksResponse.prototype.clearPaging = function() {
  return this.setPaging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.GetBlocksResponse.prototype.hasPaging = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated BlockInfo data = 2;
 * @return {!Array<!proto.injective_explorer_rpc.BlockInfo>}
 */
proto.injective_explorer_rpc.GetBlocksResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.BlockInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.BlockInfo, 2));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.BlockInfo>} value
 * @return {!proto.injective_explorer_rpc.GetBlocksResponse} returns this
*/
proto.injective_explorer_rpc.GetBlocksResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.injective_explorer_rpc.BlockInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.BlockInfo}
 */
proto.injective_explorer_rpc.GetBlocksResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective_explorer_rpc.BlockInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GetBlocksResponse} returns this
 */
proto.injective_explorer_rpc.GetBlocksResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.BlockInfo.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.BlockInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.BlockInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.BlockInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.BlockInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0),
    proposer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    moniker: jspb.Message.getFieldWithDefault(msg, 3, ""),
    blockHash: jspb.Message.getFieldWithDefault(msg, 4, ""),
    parentHash: jspb.Message.getFieldWithDefault(msg, 5, ""),
    numPreCommits: jspb.Message.getFieldWithDefault(msg, 6, 0),
    numTxs: jspb.Message.getFieldWithDefault(msg, 7, 0),
    txsList: jspb.Message.toObjectList(msg.getTxsList(),
    proto.injective_explorer_rpc.TxDataRPC.toObject, includeInstance),
    timestamp: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.BlockInfo}
 */
proto.injective_explorer_rpc.BlockInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.BlockInfo;
  return proto.injective_explorer_rpc.BlockInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.BlockInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.BlockInfo}
 */
proto.injective_explorer_rpc.BlockInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHeight(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProposer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMoniker(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockHash(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentHash(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setNumPreCommits(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setNumTxs(value);
      break;
    case 8:
      var value = new proto.injective_explorer_rpc.TxDataRPC;
      reader.readMessage(value,proto.injective_explorer_rpc.TxDataRPC.deserializeBinaryFromReader);
      msg.addTxs(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.BlockInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.BlockInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.BlockInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.BlockInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getProposer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBlockHash();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getParentHash();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNumPreCommits();
  if (f !== 0) {
    writer.writeSint64(
      6,
      f
    );
  }
  f = message.getNumTxs();
  if (f !== 0) {
    writer.writeSint64(
      7,
      f
    );
  }
  f = message.getTxsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.injective_explorer_rpc.TxDataRPC.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional uint64 height = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.BlockInfo.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.BlockInfo} returns this
 */
proto.injective_explorer_rpc.BlockInfo.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string proposer = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.BlockInfo.prototype.getProposer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.BlockInfo} returns this
 */
proto.injective_explorer_rpc.BlockInfo.prototype.setProposer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string moniker = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.BlockInfo.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.BlockInfo} returns this
 */
proto.injective_explorer_rpc.BlockInfo.prototype.setMoniker = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string block_hash = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.BlockInfo.prototype.getBlockHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.BlockInfo} returns this
 */
proto.injective_explorer_rpc.BlockInfo.prototype.setBlockHash = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string parent_hash = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.BlockInfo.prototype.getParentHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.BlockInfo} returns this
 */
proto.injective_explorer_rpc.BlockInfo.prototype.setParentHash = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional sint64 num_pre_commits = 6;
 * @return {number}
 */
proto.injective_explorer_rpc.BlockInfo.prototype.getNumPreCommits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.BlockInfo} returns this
 */
proto.injective_explorer_rpc.BlockInfo.prototype.setNumPreCommits = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional sint64 num_txs = 7;
 * @return {number}
 */
proto.injective_explorer_rpc.BlockInfo.prototype.getNumTxs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.BlockInfo} returns this
 */
proto.injective_explorer_rpc.BlockInfo.prototype.setNumTxs = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated TxDataRPC txs = 8;
 * @return {!Array<!proto.injective_explorer_rpc.TxDataRPC>}
 */
proto.injective_explorer_rpc.BlockInfo.prototype.getTxsList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.TxDataRPC>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.TxDataRPC, 8));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.TxDataRPC>} value
 * @return {!proto.injective_explorer_rpc.BlockInfo} returns this
*/
proto.injective_explorer_rpc.BlockInfo.prototype.setTxsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.injective_explorer_rpc.TxDataRPC=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.TxDataRPC}
 */
proto.injective_explorer_rpc.BlockInfo.prototype.addTxs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.injective_explorer_rpc.TxDataRPC, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.BlockInfo} returns this
 */
proto.injective_explorer_rpc.BlockInfo.prototype.clearTxsList = function() {
  return this.setTxsList([]);
};


/**
 * optional string timestamp = 9;
 * @return {string}
 */
proto.injective_explorer_rpc.BlockInfo.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.BlockInfo} returns this
 */
proto.injective_explorer_rpc.BlockInfo.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.TxDataRPC.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.TxDataRPC} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.TxDataRPC.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blockTimestamp: jspb.Message.getFieldWithDefault(msg, 3, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 4, ""),
    codespace: jspb.Message.getFieldWithDefault(msg, 5, ""),
    messages: jspb.Message.getFieldWithDefault(msg, 6, ""),
    txNumber: jspb.Message.getFieldWithDefault(msg, 7, 0),
    errorLog: jspb.Message.getFieldWithDefault(msg, 8, ""),
    code: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.TxDataRPC}
 */
proto.injective_explorer_rpc.TxDataRPC.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.TxDataRPC;
  return proto.injective_explorer_rpc.TxDataRPC.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.TxDataRPC} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.TxDataRPC}
 */
proto.injective_explorer_rpc.TxDataRPC.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockTimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodespace(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessages(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTxNumber(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorLog(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.TxDataRPC.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.TxDataRPC} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.TxDataRPC.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockNumber();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getBlockTimestamp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCodespace();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMessages();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTxNumber();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getErrorLog();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDataRPC} returns this
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 block_number = 2;
 * @return {number}
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.getBlockNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.TxDataRPC} returns this
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.setBlockNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string block_timestamp = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.getBlockTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDataRPC} returns this
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.setBlockTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string hash = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDataRPC} returns this
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string codespace = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.getCodespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDataRPC} returns this
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.setCodespace = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string messages = 6;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.getMessages = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDataRPC} returns this
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.setMessages = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint64 tx_number = 7;
 * @return {number}
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.getTxNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.TxDataRPC} returns this
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.setTxNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string error_log = 8;
 * @return {string}
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.getErrorLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxDataRPC} returns this
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.setErrorLog = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint32 code = 9;
 * @return {number}
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.TxDataRPC} returns this
 */
proto.injective_explorer_rpc.TxDataRPC.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetBlockRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetBlockRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetBlockRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetBlockRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetBlockRequest}
 */
proto.injective_explorer_rpc.GetBlockRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetBlockRequest;
  return proto.injective_explorer_rpc.GetBlockRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetBlockRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetBlockRequest}
 */
proto.injective_explorer_rpc.GetBlockRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetBlockRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetBlockRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetBlockRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetBlockRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetBlockRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetBlockRequest} returns this
 */
proto.injective_explorer_rpc.GetBlockRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetBlockResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetBlockResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetBlockResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetBlockResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    s: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errmsg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && proto.injective_explorer_rpc.BlockDetailInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetBlockResponse}
 */
proto.injective_explorer_rpc.GetBlockResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetBlockResponse;
  return proto.injective_explorer_rpc.GetBlockResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetBlockResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetBlockResponse}
 */
proto.injective_explorer_rpc.GetBlockResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setS(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrmsg(value);
      break;
    case 3:
      var value = new proto.injective_explorer_rpc.BlockDetailInfo;
      reader.readMessage(value,proto.injective_explorer_rpc.BlockDetailInfo.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetBlockResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetBlockResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetBlockResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetBlockResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getS();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErrmsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.injective_explorer_rpc.BlockDetailInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string s = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetBlockResponse.prototype.getS = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetBlockResponse} returns this
 */
proto.injective_explorer_rpc.GetBlockResponse.prototype.setS = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string errmsg = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.GetBlockResponse.prototype.getErrmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetBlockResponse} returns this
 */
proto.injective_explorer_rpc.GetBlockResponse.prototype.setErrmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional BlockDetailInfo data = 3;
 * @return {?proto.injective_explorer_rpc.BlockDetailInfo}
 */
proto.injective_explorer_rpc.GetBlockResponse.prototype.getData = function() {
  return /** @type{?proto.injective_explorer_rpc.BlockDetailInfo} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.BlockDetailInfo, 3));
};


/**
 * @param {?proto.injective_explorer_rpc.BlockDetailInfo|undefined} value
 * @return {!proto.injective_explorer_rpc.GetBlockResponse} returns this
*/
proto.injective_explorer_rpc.GetBlockResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.GetBlockResponse} returns this
 */
proto.injective_explorer_rpc.GetBlockResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.GetBlockResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.BlockDetailInfo.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.BlockDetailInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.BlockDetailInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.BlockDetailInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0),
    proposer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    moniker: jspb.Message.getFieldWithDefault(msg, 3, ""),
    blockHash: jspb.Message.getFieldWithDefault(msg, 4, ""),
    parentHash: jspb.Message.getFieldWithDefault(msg, 5, ""),
    numPreCommits: jspb.Message.getFieldWithDefault(msg, 6, 0),
    numTxs: jspb.Message.getFieldWithDefault(msg, 7, 0),
    totalTxs: jspb.Message.getFieldWithDefault(msg, 8, 0),
    txsList: jspb.Message.toObjectList(msg.getTxsList(),
    proto.injective_explorer_rpc.TxData.toObject, includeInstance),
    timestamp: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.BlockDetailInfo}
 */
proto.injective_explorer_rpc.BlockDetailInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.BlockDetailInfo;
  return proto.injective_explorer_rpc.BlockDetailInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.BlockDetailInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.BlockDetailInfo}
 */
proto.injective_explorer_rpc.BlockDetailInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHeight(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProposer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMoniker(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockHash(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentHash(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setNumPreCommits(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setNumTxs(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setTotalTxs(value);
      break;
    case 9:
      var value = new proto.injective_explorer_rpc.TxData;
      reader.readMessage(value,proto.injective_explorer_rpc.TxData.deserializeBinaryFromReader);
      msg.addTxs(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.BlockDetailInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.BlockDetailInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.BlockDetailInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getProposer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBlockHash();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getParentHash();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNumPreCommits();
  if (f !== 0) {
    writer.writeSint64(
      6,
      f
    );
  }
  f = message.getNumTxs();
  if (f !== 0) {
    writer.writeSint64(
      7,
      f
    );
  }
  f = message.getTotalTxs();
  if (f !== 0) {
    writer.writeSint64(
      8,
      f
    );
  }
  f = message.getTxsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.injective_explorer_rpc.TxData.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional uint64 height = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.BlockDetailInfo} returns this
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string proposer = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.getProposer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.BlockDetailInfo} returns this
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.setProposer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string moniker = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.BlockDetailInfo} returns this
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.setMoniker = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string block_hash = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.getBlockHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.BlockDetailInfo} returns this
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.setBlockHash = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string parent_hash = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.getParentHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.BlockDetailInfo} returns this
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.setParentHash = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional sint64 num_pre_commits = 6;
 * @return {number}
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.getNumPreCommits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.BlockDetailInfo} returns this
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.setNumPreCommits = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional sint64 num_txs = 7;
 * @return {number}
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.getNumTxs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.BlockDetailInfo} returns this
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.setNumTxs = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional sint64 total_txs = 8;
 * @return {number}
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.getTotalTxs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.BlockDetailInfo} returns this
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.setTotalTxs = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated TxData txs = 9;
 * @return {!Array<!proto.injective_explorer_rpc.TxData>}
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.getTxsList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.TxData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.TxData, 9));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.TxData>} value
 * @return {!proto.injective_explorer_rpc.BlockDetailInfo} returns this
*/
proto.injective_explorer_rpc.BlockDetailInfo.prototype.setTxsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.injective_explorer_rpc.TxData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.TxData}
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.addTxs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.injective_explorer_rpc.TxData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.BlockDetailInfo} returns this
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.clearTxsList = function() {
  return this.setTxsList([]);
};


/**
 * optional string timestamp = 10;
 * @return {string}
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.BlockDetailInfo} returns this
 */
proto.injective_explorer_rpc.BlockDetailInfo.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.TxData.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.TxData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.TxData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.TxData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blockTimestamp: jspb.Message.getFieldWithDefault(msg, 3, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 4, ""),
    codespace: jspb.Message.getFieldWithDefault(msg, 5, ""),
    messages: msg.getMessages_asB64(),
    txNumber: jspb.Message.getFieldWithDefault(msg, 7, 0),
    errorLog: jspb.Message.getFieldWithDefault(msg, 8, ""),
    code: jspb.Message.getFieldWithDefault(msg, 9, 0),
    txMsgTypes: msg.getTxMsgTypes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.TxData}
 */
proto.injective_explorer_rpc.TxData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.TxData;
  return proto.injective_explorer_rpc.TxData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.TxData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.TxData}
 */
proto.injective_explorer_rpc.TxData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockTimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodespace(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMessages(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTxNumber(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorLog(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    case 10:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setTxMsgTypes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.TxData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.TxData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.TxData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.TxData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockNumber();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getBlockTimestamp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCodespace();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMessages_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getTxNumber();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getErrorLog();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getTxMsgTypes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.TxData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxData} returns this
 */
proto.injective_explorer_rpc.TxData.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 block_number = 2;
 * @return {number}
 */
proto.injective_explorer_rpc.TxData.prototype.getBlockNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.TxData} returns this
 */
proto.injective_explorer_rpc.TxData.prototype.setBlockNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string block_timestamp = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.TxData.prototype.getBlockTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxData} returns this
 */
proto.injective_explorer_rpc.TxData.prototype.setBlockTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string hash = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.TxData.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxData} returns this
 */
proto.injective_explorer_rpc.TxData.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string codespace = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.TxData.prototype.getCodespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxData} returns this
 */
proto.injective_explorer_rpc.TxData.prototype.setCodespace = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bytes messages = 6;
 * @return {!(string|Uint8Array)}
 */
proto.injective_explorer_rpc.TxData.prototype.getMessages = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes messages = 6;
 * This is a type-conversion wrapper around `getMessages()`
 * @return {string}
 */
proto.injective_explorer_rpc.TxData.prototype.getMessages_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMessages()));
};


/**
 * optional bytes messages = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMessages()`
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.TxData.prototype.getMessages_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMessages()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.injective_explorer_rpc.TxData} returns this
 */
proto.injective_explorer_rpc.TxData.prototype.setMessages = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional uint64 tx_number = 7;
 * @return {number}
 */
proto.injective_explorer_rpc.TxData.prototype.getTxNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.TxData} returns this
 */
proto.injective_explorer_rpc.TxData.prototype.setTxNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string error_log = 8;
 * @return {string}
 */
proto.injective_explorer_rpc.TxData.prototype.getErrorLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.TxData} returns this
 */
proto.injective_explorer_rpc.TxData.prototype.setErrorLog = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint32 code = 9;
 * @return {number}
 */
proto.injective_explorer_rpc.TxData.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.TxData} returns this
 */
proto.injective_explorer_rpc.TxData.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bytes tx_msg_types = 10;
 * @return {!(string|Uint8Array)}
 */
proto.injective_explorer_rpc.TxData.prototype.getTxMsgTypes = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * optional bytes tx_msg_types = 10;
 * This is a type-conversion wrapper around `getTxMsgTypes()`
 * @return {string}
 */
proto.injective_explorer_rpc.TxData.prototype.getTxMsgTypes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getTxMsgTypes()));
};


/**
 * optional bytes tx_msg_types = 10;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxMsgTypes()`
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.TxData.prototype.getTxMsgTypes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getTxMsgTypes()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.injective_explorer_rpc.TxData} returns this
 */
proto.injective_explorer_rpc.TxData.prototype.setTxMsgTypes = function(value) {
  return jspb.Message.setProto3BytesField(this, 10, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetValidatorsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetValidatorsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetValidatorsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetValidatorsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetValidatorsRequest}
 */
proto.injective_explorer_rpc.GetValidatorsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetValidatorsRequest;
  return proto.injective_explorer_rpc.GetValidatorsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetValidatorsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetValidatorsRequest}
 */
proto.injective_explorer_rpc.GetValidatorsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetValidatorsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetValidatorsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetValidatorsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetValidatorsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GetValidatorsResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetValidatorsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetValidatorsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetValidatorsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetValidatorsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    s: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errmsg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.injective_explorer_rpc.Validator.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetValidatorsResponse}
 */
proto.injective_explorer_rpc.GetValidatorsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetValidatorsResponse;
  return proto.injective_explorer_rpc.GetValidatorsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetValidatorsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetValidatorsResponse}
 */
proto.injective_explorer_rpc.GetValidatorsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setS(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrmsg(value);
      break;
    case 3:
      var value = new proto.injective_explorer_rpc.Validator;
      reader.readMessage(value,proto.injective_explorer_rpc.Validator.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetValidatorsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetValidatorsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetValidatorsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetValidatorsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getS();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErrmsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.injective_explorer_rpc.Validator.serializeBinaryToWriter
    );
  }
};


/**
 * optional string s = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetValidatorsResponse.prototype.getS = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetValidatorsResponse} returns this
 */
proto.injective_explorer_rpc.GetValidatorsResponse.prototype.setS = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string errmsg = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.GetValidatorsResponse.prototype.getErrmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetValidatorsResponse} returns this
 */
proto.injective_explorer_rpc.GetValidatorsResponse.prototype.setErrmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Validator data = 3;
 * @return {!Array<!proto.injective_explorer_rpc.Validator>}
 */
proto.injective_explorer_rpc.GetValidatorsResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.Validator>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.Validator, 3));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.Validator>} value
 * @return {!proto.injective_explorer_rpc.GetValidatorsResponse} returns this
*/
proto.injective_explorer_rpc.GetValidatorsResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.injective_explorer_rpc.Validator=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.Validator}
 */
proto.injective_explorer_rpc.GetValidatorsResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.injective_explorer_rpc.Validator, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GetValidatorsResponse} returns this
 */
proto.injective_explorer_rpc.GetValidatorsResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.Validator.repeatedFields_ = [20,21];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.Validator.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.Validator.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.Validator} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Validator.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    moniker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    operatorAddress: jspb.Message.getFieldWithDefault(msg, 3, ""),
    consensusAddress: jspb.Message.getFieldWithDefault(msg, 4, ""),
    jailed: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    status: jspb.Message.getFieldWithDefault(msg, 6, 0),
    tokens: jspb.Message.getFieldWithDefault(msg, 7, ""),
    delegatorShares: jspb.Message.getFieldWithDefault(msg, 8, ""),
    description: (f = msg.getDescription()) && proto.injective_explorer_rpc.ValidatorDescription.toObject(includeInstance, f),
    unbondingHeight: jspb.Message.getFieldWithDefault(msg, 10, 0),
    unbondingTime: jspb.Message.getFieldWithDefault(msg, 11, ""),
    commissionRate: jspb.Message.getFieldWithDefault(msg, 12, ""),
    commissionMaxRate: jspb.Message.getFieldWithDefault(msg, 13, ""),
    commissionMaxChangeRate: jspb.Message.getFieldWithDefault(msg, 14, ""),
    commissionUpdateTime: jspb.Message.getFieldWithDefault(msg, 15, ""),
    proposed: jspb.Message.getFieldWithDefault(msg, 16, 0),
    signed: jspb.Message.getFieldWithDefault(msg, 17, 0),
    missed: jspb.Message.getFieldWithDefault(msg, 18, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 19, ""),
    uptimesList: jspb.Message.toObjectList(msg.getUptimesList(),
    proto.injective_explorer_rpc.ValidatorUptime.toObject, includeInstance),
    slashingEventsList: jspb.Message.toObjectList(msg.getSlashingEventsList(),
    proto.injective_explorer_rpc.SlashingEvent.toObject, includeInstance),
    uptimePercentage: jspb.Message.getFloatingPointFieldWithDefault(msg, 22, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.Validator}
 */
proto.injective_explorer_rpc.Validator.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.Validator;
  return proto.injective_explorer_rpc.Validator.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.Validator} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.Validator}
 */
proto.injective_explorer_rpc.Validator.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMoniker(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOperatorAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsensusAddress(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setJailed(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setStatus(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokens(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDelegatorShares(value);
      break;
    case 9:
      var value = new proto.injective_explorer_rpc.ValidatorDescription;
      reader.readMessage(value,proto.injective_explorer_rpc.ValidatorDescription.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setUnbondingHeight(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnbondingTime(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommissionRate(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommissionMaxRate(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommissionMaxChangeRate(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommissionUpdateTime(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setProposed(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSigned(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMissed(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    case 20:
      var value = new proto.injective_explorer_rpc.ValidatorUptime;
      reader.readMessage(value,proto.injective_explorer_rpc.ValidatorUptime.deserializeBinaryFromReader);
      msg.addUptimes(value);
      break;
    case 21:
      var value = new proto.injective_explorer_rpc.SlashingEvent;
      reader.readMessage(value,proto.injective_explorer_rpc.SlashingEvent.deserializeBinaryFromReader);
      msg.addSlashingEvents(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setUptimePercentage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.Validator.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.Validator.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.Validator} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Validator.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOperatorAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getConsensusAddress();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getJailed();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeSint32(
      6,
      f
    );
  }
  f = message.getTokens();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDelegatorShares();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.injective_explorer_rpc.ValidatorDescription.serializeBinaryToWriter
    );
  }
  f = message.getUnbondingHeight();
  if (f !== 0) {
    writer.writeSint64(
      10,
      f
    );
  }
  f = message.getUnbondingTime();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCommissionRate();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getCommissionMaxRate();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getCommissionMaxChangeRate();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCommissionUpdateTime();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getProposed();
  if (f !== 0) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = message.getSigned();
  if (f !== 0) {
    writer.writeUint64(
      17,
      f
    );
  }
  f = message.getMissed();
  if (f !== 0) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getUptimesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      20,
      f,
      proto.injective_explorer_rpc.ValidatorUptime.serializeBinaryToWriter
    );
  }
  f = message.getSlashingEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      21,
      f,
      proto.injective_explorer_rpc.SlashingEvent.serializeBinaryToWriter
    );
  }
  f = message.getUptimePercentage();
  if (f !== 0.0) {
    writer.writeDouble(
      22,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.Validator.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string moniker = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.Validator.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setMoniker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string operator_address = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.Validator.prototype.getOperatorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setOperatorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string consensus_address = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.Validator.prototype.getConsensusAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setConsensusAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool jailed = 5;
 * @return {boolean}
 */
proto.injective_explorer_rpc.Validator.prototype.getJailed = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setJailed = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional sint32 status = 6;
 * @return {number}
 */
proto.injective_explorer_rpc.Validator.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string tokens = 7;
 * @return {string}
 */
proto.injective_explorer_rpc.Validator.prototype.getTokens = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setTokens = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string delegator_shares = 8;
 * @return {string}
 */
proto.injective_explorer_rpc.Validator.prototype.getDelegatorShares = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setDelegatorShares = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional ValidatorDescription description = 9;
 * @return {?proto.injective_explorer_rpc.ValidatorDescription}
 */
proto.injective_explorer_rpc.Validator.prototype.getDescription = function() {
  return /** @type{?proto.injective_explorer_rpc.ValidatorDescription} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.ValidatorDescription, 9));
};


/**
 * @param {?proto.injective_explorer_rpc.ValidatorDescription|undefined} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
*/
proto.injective_explorer_rpc.Validator.prototype.setDescription = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.clearDescription = function() {
  return this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.Validator.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional sint64 unbonding_height = 10;
 * @return {number}
 */
proto.injective_explorer_rpc.Validator.prototype.getUnbondingHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setUnbondingHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string unbonding_time = 11;
 * @return {string}
 */
proto.injective_explorer_rpc.Validator.prototype.getUnbondingTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setUnbondingTime = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string commission_rate = 12;
 * @return {string}
 */
proto.injective_explorer_rpc.Validator.prototype.getCommissionRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setCommissionRate = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string commission_max_rate = 13;
 * @return {string}
 */
proto.injective_explorer_rpc.Validator.prototype.getCommissionMaxRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setCommissionMaxRate = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string commission_max_change_rate = 14;
 * @return {string}
 */
proto.injective_explorer_rpc.Validator.prototype.getCommissionMaxChangeRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setCommissionMaxChangeRate = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string commission_update_time = 15;
 * @return {string}
 */
proto.injective_explorer_rpc.Validator.prototype.getCommissionUpdateTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setCommissionUpdateTime = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional uint64 proposed = 16;
 * @return {number}
 */
proto.injective_explorer_rpc.Validator.prototype.getProposed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setProposed = function(value) {
  return jspb.Message.setProto3IntField(this, 16, value);
};


/**
 * optional uint64 signed = 17;
 * @return {number}
 */
proto.injective_explorer_rpc.Validator.prototype.getSigned = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setSigned = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};


/**
 * optional uint64 missed = 18;
 * @return {number}
 */
proto.injective_explorer_rpc.Validator.prototype.getMissed = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setMissed = function(value) {
  return jspb.Message.setProto3IntField(this, 18, value);
};


/**
 * optional string timestamp = 19;
 * @return {string}
 */
proto.injective_explorer_rpc.Validator.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * repeated ValidatorUptime uptimes = 20;
 * @return {!Array<!proto.injective_explorer_rpc.ValidatorUptime>}
 */
proto.injective_explorer_rpc.Validator.prototype.getUptimesList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.ValidatorUptime>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.ValidatorUptime, 20));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.ValidatorUptime>} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
*/
proto.injective_explorer_rpc.Validator.prototype.setUptimesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 20, value);
};


/**
 * @param {!proto.injective_explorer_rpc.ValidatorUptime=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.ValidatorUptime}
 */
proto.injective_explorer_rpc.Validator.prototype.addUptimes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 20, opt_value, proto.injective_explorer_rpc.ValidatorUptime, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.clearUptimesList = function() {
  return this.setUptimesList([]);
};


/**
 * repeated SlashingEvent slashing_events = 21;
 * @return {!Array<!proto.injective_explorer_rpc.SlashingEvent>}
 */
proto.injective_explorer_rpc.Validator.prototype.getSlashingEventsList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.SlashingEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.SlashingEvent, 21));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.SlashingEvent>} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
*/
proto.injective_explorer_rpc.Validator.prototype.setSlashingEventsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 21, value);
};


/**
 * @param {!proto.injective_explorer_rpc.SlashingEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.SlashingEvent}
 */
proto.injective_explorer_rpc.Validator.prototype.addSlashingEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 21, opt_value, proto.injective_explorer_rpc.SlashingEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.clearSlashingEventsList = function() {
  return this.setSlashingEventsList([]);
};


/**
 * optional double uptime_percentage = 22;
 * @return {number}
 */
proto.injective_explorer_rpc.Validator.prototype.getUptimePercentage = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 22, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.Validator} returns this
 */
proto.injective_explorer_rpc.Validator.prototype.setUptimePercentage = function(value) {
  return jspb.Message.setProto3FloatField(this, 22, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.ValidatorDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.ValidatorDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.ValidatorDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.ValidatorDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    moniker: jspb.Message.getFieldWithDefault(msg, 1, ""),
    identity: jspb.Message.getFieldWithDefault(msg, 2, ""),
    website: jspb.Message.getFieldWithDefault(msg, 3, ""),
    securityContact: jspb.Message.getFieldWithDefault(msg, 4, ""),
    details: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.ValidatorDescription}
 */
proto.injective_explorer_rpc.ValidatorDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.ValidatorDescription;
  return proto.injective_explorer_rpc.ValidatorDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.ValidatorDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.ValidatorDescription}
 */
proto.injective_explorer_rpc.ValidatorDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMoniker(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIdentity(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setWebsite(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecurityContact(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.ValidatorDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.ValidatorDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.ValidatorDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.ValidatorDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIdentity();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getWebsite();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSecurityContact();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDetails();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string moniker = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.ValidatorDescription.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.ValidatorDescription} returns this
 */
proto.injective_explorer_rpc.ValidatorDescription.prototype.setMoniker = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string identity = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.ValidatorDescription.prototype.getIdentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.ValidatorDescription} returns this
 */
proto.injective_explorer_rpc.ValidatorDescription.prototype.setIdentity = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string website = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.ValidatorDescription.prototype.getWebsite = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.ValidatorDescription} returns this
 */
proto.injective_explorer_rpc.ValidatorDescription.prototype.setWebsite = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string security_contact = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.ValidatorDescription.prototype.getSecurityContact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.ValidatorDescription} returns this
 */
proto.injective_explorer_rpc.ValidatorDescription.prototype.setSecurityContact = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string details = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.ValidatorDescription.prototype.getDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.ValidatorDescription} returns this
 */
proto.injective_explorer_rpc.ValidatorDescription.prototype.setDetails = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.ValidatorUptime.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.ValidatorUptime.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.ValidatorUptime} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.ValidatorUptime.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    status: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.ValidatorUptime}
 */
proto.injective_explorer_rpc.ValidatorUptime.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.ValidatorUptime;
  return proto.injective_explorer_rpc.ValidatorUptime.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.ValidatorUptime} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.ValidatorUptime}
 */
proto.injective_explorer_rpc.ValidatorUptime.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.ValidatorUptime.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.ValidatorUptime.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.ValidatorUptime} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.ValidatorUptime.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockNumber();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint64 block_number = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.ValidatorUptime.prototype.getBlockNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.ValidatorUptime} returns this
 */
proto.injective_explorer_rpc.ValidatorUptime.prototype.setBlockNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string status = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.ValidatorUptime.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.ValidatorUptime} returns this
 */
proto.injective_explorer_rpc.ValidatorUptime.prototype.setStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.SlashingEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.SlashingEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.SlashingEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    blockTimestamp: jspb.Message.getFieldWithDefault(msg, 2, ""),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    power: jspb.Message.getFieldWithDefault(msg, 4, 0),
    reason: jspb.Message.getFieldWithDefault(msg, 5, ""),
    jailed: jspb.Message.getFieldWithDefault(msg, 6, ""),
    missedBlocks: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.SlashingEvent}
 */
proto.injective_explorer_rpc.SlashingEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.SlashingEvent;
  return proto.injective_explorer_rpc.SlashingEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.SlashingEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.SlashingEvent}
 */
proto.injective_explorer_rpc.SlashingEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockTimestamp(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPower(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setJailed(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMissedBlocks(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.SlashingEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.SlashingEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.SlashingEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockNumber();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getBlockTimestamp();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPower();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getJailed();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getMissedBlocks();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
};


/**
 * optional uint64 block_number = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.getBlockNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.SlashingEvent} returns this
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.setBlockNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string block_timestamp = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.getBlockTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.SlashingEvent} returns this
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.setBlockTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.SlashingEvent} returns this
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 power = 4;
 * @return {number}
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.getPower = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.SlashingEvent} returns this
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.setPower = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string reason = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.SlashingEvent} returns this
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string jailed = 6;
 * @return {string}
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.getJailed = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.SlashingEvent} returns this
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.setJailed = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint64 missed_blocks = 7;
 * @return {number}
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.getMissedBlocks = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.SlashingEvent} returns this
 */
proto.injective_explorer_rpc.SlashingEvent.prototype.setMissedBlocks = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetValidatorRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetValidatorRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetValidatorRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetValidatorRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetValidatorRequest}
 */
proto.injective_explorer_rpc.GetValidatorRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetValidatorRequest;
  return proto.injective_explorer_rpc.GetValidatorRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetValidatorRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetValidatorRequest}
 */
proto.injective_explorer_rpc.GetValidatorRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetValidatorRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetValidatorRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetValidatorRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetValidatorRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetValidatorRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetValidatorRequest} returns this
 */
proto.injective_explorer_rpc.GetValidatorRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetValidatorResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetValidatorResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetValidatorResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetValidatorResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    s: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errmsg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && proto.injective_explorer_rpc.Validator.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetValidatorResponse}
 */
proto.injective_explorer_rpc.GetValidatorResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetValidatorResponse;
  return proto.injective_explorer_rpc.GetValidatorResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetValidatorResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetValidatorResponse}
 */
proto.injective_explorer_rpc.GetValidatorResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setS(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrmsg(value);
      break;
    case 3:
      var value = new proto.injective_explorer_rpc.Validator;
      reader.readMessage(value,proto.injective_explorer_rpc.Validator.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetValidatorResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetValidatorResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetValidatorResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetValidatorResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getS();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErrmsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.injective_explorer_rpc.Validator.serializeBinaryToWriter
    );
  }
};


/**
 * optional string s = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetValidatorResponse.prototype.getS = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetValidatorResponse} returns this
 */
proto.injective_explorer_rpc.GetValidatorResponse.prototype.setS = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string errmsg = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.GetValidatorResponse.prototype.getErrmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetValidatorResponse} returns this
 */
proto.injective_explorer_rpc.GetValidatorResponse.prototype.setErrmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Validator data = 3;
 * @return {?proto.injective_explorer_rpc.Validator}
 */
proto.injective_explorer_rpc.GetValidatorResponse.prototype.getData = function() {
  return /** @type{?proto.injective_explorer_rpc.Validator} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Validator, 3));
};


/**
 * @param {?proto.injective_explorer_rpc.Validator|undefined} value
 * @return {!proto.injective_explorer_rpc.GetValidatorResponse} returns this
*/
proto.injective_explorer_rpc.GetValidatorResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.GetValidatorResponse} returns this
 */
proto.injective_explorer_rpc.GetValidatorResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.GetValidatorResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetValidatorUptimeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetValidatorUptimeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetValidatorUptimeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetValidatorUptimeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetValidatorUptimeRequest}
 */
proto.injective_explorer_rpc.GetValidatorUptimeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetValidatorUptimeRequest;
  return proto.injective_explorer_rpc.GetValidatorUptimeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetValidatorUptimeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetValidatorUptimeRequest}
 */
proto.injective_explorer_rpc.GetValidatorUptimeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetValidatorUptimeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetValidatorUptimeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetValidatorUptimeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetValidatorUptimeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetValidatorUptimeRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetValidatorUptimeRequest} returns this
 */
proto.injective_explorer_rpc.GetValidatorUptimeRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetValidatorUptimeResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetValidatorUptimeResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    s: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errmsg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.injective_explorer_rpc.ValidatorUptime.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetValidatorUptimeResponse}
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetValidatorUptimeResponse;
  return proto.injective_explorer_rpc.GetValidatorUptimeResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetValidatorUptimeResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetValidatorUptimeResponse}
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setS(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrmsg(value);
      break;
    case 3:
      var value = new proto.injective_explorer_rpc.ValidatorUptime;
      reader.readMessage(value,proto.injective_explorer_rpc.ValidatorUptime.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetValidatorUptimeResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetValidatorUptimeResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getS();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErrmsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.injective_explorer_rpc.ValidatorUptime.serializeBinaryToWriter
    );
  }
};


/**
 * optional string s = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.prototype.getS = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetValidatorUptimeResponse} returns this
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.prototype.setS = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string errmsg = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.prototype.getErrmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetValidatorUptimeResponse} returns this
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.prototype.setErrmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated ValidatorUptime data = 3;
 * @return {!Array<!proto.injective_explorer_rpc.ValidatorUptime>}
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.ValidatorUptime>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.ValidatorUptime, 3));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.ValidatorUptime>} value
 * @return {!proto.injective_explorer_rpc.GetValidatorUptimeResponse} returns this
*/
proto.injective_explorer_rpc.GetValidatorUptimeResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.injective_explorer_rpc.ValidatorUptime=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.ValidatorUptime}
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.injective_explorer_rpc.ValidatorUptime, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GetValidatorUptimeResponse} returns this
 */
proto.injective_explorer_rpc.GetValidatorUptimeResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetTxsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetTxsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetTxsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    before: jspb.Message.getFieldWithDefault(msg, 1, 0),
    after: jspb.Message.getFieldWithDefault(msg, 2, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    skip: jspb.Message.getFieldWithDefault(msg, 4, 0),
    type: jspb.Message.getFieldWithDefault(msg, 5, ""),
    module: jspb.Message.getFieldWithDefault(msg, 6, ""),
    fromNumber: jspb.Message.getFieldWithDefault(msg, 7, 0),
    toNumber: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetTxsRequest}
 */
proto.injective_explorer_rpc.GetTxsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetTxsRequest;
  return proto.injective_explorer_rpc.GetTxsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetTxsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetTxsRequest}
 */
proto.injective_explorer_rpc.GetTxsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBefore(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAfter(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSkip(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setModule(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setFromNumber(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setToNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetTxsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetTxsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetTxsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBefore();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAfter();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeSint32(
      3,
      f
    );
  }
  f = message.getSkip();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getModule();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getFromNumber();
  if (f !== 0) {
    writer.writeSint64(
      7,
      f
    );
  }
  f = message.getToNumber();
  if (f !== 0) {
    writer.writeSint64(
      8,
      f
    );
  }
};


/**
 * optional uint64 before = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.getBefore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.setBefore = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 after = 2;
 * @return {number}
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.getAfter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.setAfter = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional sint32 limit = 3;
 * @return {number}
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 skip = 4;
 * @return {number}
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.setSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string type = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string module = 6;
 * @return {string}
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.getModule = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.setModule = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional sint64 from_number = 7;
 * @return {number}
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.getFromNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.setFromNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional sint64 to_number = 8;
 * @return {number}
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.getToNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetTxsRequest.prototype.setToNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GetTxsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetTxsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetTxsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetTxsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetTxsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paging: (f = msg.getPaging()) && proto.injective_explorer_rpc.Paging.toObject(includeInstance, f),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.injective_explorer_rpc.TxData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetTxsResponse}
 */
proto.injective_explorer_rpc.GetTxsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetTxsResponse;
  return proto.injective_explorer_rpc.GetTxsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetTxsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetTxsResponse}
 */
proto.injective_explorer_rpc.GetTxsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.injective_explorer_rpc.Paging;
      reader.readMessage(value,proto.injective_explorer_rpc.Paging.deserializeBinaryFromReader);
      msg.setPaging(value);
      break;
    case 2:
      var value = new proto.injective_explorer_rpc.TxData;
      reader.readMessage(value,proto.injective_explorer_rpc.TxData.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetTxsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetTxsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetTxsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetTxsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaging();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.injective_explorer_rpc.Paging.serializeBinaryToWriter
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.injective_explorer_rpc.TxData.serializeBinaryToWriter
    );
  }
};


/**
 * optional Paging paging = 1;
 * @return {?proto.injective_explorer_rpc.Paging}
 */
proto.injective_explorer_rpc.GetTxsResponse.prototype.getPaging = function() {
  return /** @type{?proto.injective_explorer_rpc.Paging} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Paging, 1));
};


/**
 * @param {?proto.injective_explorer_rpc.Paging|undefined} value
 * @return {!proto.injective_explorer_rpc.GetTxsResponse} returns this
*/
proto.injective_explorer_rpc.GetTxsResponse.prototype.setPaging = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.GetTxsResponse} returns this
 */
proto.injective_explorer_rpc.GetTxsResponse.prototype.clearPaging = function() {
  return this.setPaging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.GetTxsResponse.prototype.hasPaging = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated TxData data = 2;
 * @return {!Array<!proto.injective_explorer_rpc.TxData>}
 */
proto.injective_explorer_rpc.GetTxsResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.TxData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.TxData, 2));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.TxData>} value
 * @return {!proto.injective_explorer_rpc.GetTxsResponse} returns this
*/
proto.injective_explorer_rpc.GetTxsResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.injective_explorer_rpc.TxData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.TxData}
 */
proto.injective_explorer_rpc.GetTxsResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective_explorer_rpc.TxData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GetTxsResponse} returns this
 */
proto.injective_explorer_rpc.GetTxsResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetTxByTxHashRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetTxByTxHashRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetTxByTxHashRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetTxByTxHashRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetTxByTxHashRequest}
 */
proto.injective_explorer_rpc.GetTxByTxHashRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetTxByTxHashRequest;
  return proto.injective_explorer_rpc.GetTxByTxHashRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetTxByTxHashRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetTxByTxHashRequest}
 */
proto.injective_explorer_rpc.GetTxByTxHashRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetTxByTxHashRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetTxByTxHashRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetTxByTxHashRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetTxByTxHashRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string hash = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetTxByTxHashRequest.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetTxByTxHashRequest} returns this
 */
proto.injective_explorer_rpc.GetTxByTxHashRequest.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetTxByTxHashResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetTxByTxHashResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    s: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errmsg: jspb.Message.getFieldWithDefault(msg, 2, ""),
    data: (f = msg.getData()) && proto.injective_explorer_rpc.TxDetailData.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetTxByTxHashResponse}
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetTxByTxHashResponse;
  return proto.injective_explorer_rpc.GetTxByTxHashResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetTxByTxHashResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetTxByTxHashResponse}
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setS(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrmsg(value);
      break;
    case 3:
      var value = new proto.injective_explorer_rpc.TxDetailData;
      reader.readMessage(value,proto.injective_explorer_rpc.TxDetailData.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetTxByTxHashResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetTxByTxHashResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getS();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getErrmsg();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.injective_explorer_rpc.TxDetailData.serializeBinaryToWriter
    );
  }
};


/**
 * optional string s = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse.prototype.getS = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetTxByTxHashResponse} returns this
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse.prototype.setS = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string errmsg = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse.prototype.getErrmsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetTxByTxHashResponse} returns this
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse.prototype.setErrmsg = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional TxDetailData data = 3;
 * @return {?proto.injective_explorer_rpc.TxDetailData}
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse.prototype.getData = function() {
  return /** @type{?proto.injective_explorer_rpc.TxDetailData} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.TxDetailData, 3));
};


/**
 * @param {?proto.injective_explorer_rpc.TxDetailData|undefined} value
 * @return {!proto.injective_explorer_rpc.GetTxByTxHashResponse} returns this
*/
proto.injective_explorer_rpc.GetTxByTxHashResponse.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.GetTxByTxHashResponse} returns this
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.GetTxByTxHashResponse.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetPeggyDepositTxsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    receiver: jspb.Message.getFieldWithDefault(msg, 2, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    skip: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetPeggyDepositTxsRequest}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetPeggyDepositTxsRequest;
  return proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetPeggyDepositTxsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetPeggyDepositTxsRequest}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSkip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetPeggyDepositTxsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeSint32(
      3,
      f
    );
  }
  f = message.getSkip();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetPeggyDepositTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string receiver = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetPeggyDepositTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional sint32 limit = 3;
 * @return {number}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetPeggyDepositTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 skip = 4;
 * @return {number}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetPeggyDepositTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsRequest.prototype.setSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetPeggyDepositTxsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldList: jspb.Message.toObjectList(msg.getFieldList(),
    proto.injective_explorer_rpc.PeggyDepositTx.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetPeggyDepositTxsResponse}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetPeggyDepositTxsResponse;
  return proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetPeggyDepositTxsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetPeggyDepositTxsResponse}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.injective_explorer_rpc.PeggyDepositTx;
      reader.readMessage(value,proto.injective_explorer_rpc.PeggyDepositTx.deserializeBinaryFromReader);
      msg.addField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetPeggyDepositTxsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.injective_explorer_rpc.PeggyDepositTx.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PeggyDepositTx field = 1;
 * @return {!Array<!proto.injective_explorer_rpc.PeggyDepositTx>}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.prototype.getFieldList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.PeggyDepositTx>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.PeggyDepositTx, 1));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.PeggyDepositTx>} value
 * @return {!proto.injective_explorer_rpc.GetPeggyDepositTxsResponse} returns this
*/
proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.prototype.setFieldList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.injective_explorer_rpc.PeggyDepositTx=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx}
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.prototype.addField = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective_explorer_rpc.PeggyDepositTx, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GetPeggyDepositTxsResponse} returns this
 */
proto.injective_explorer_rpc.GetPeggyDepositTxsResponse.prototype.clearFieldList = function() {
  return this.setFieldList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.PeggyDepositTx.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.PeggyDepositTx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.PeggyDepositTx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.PeggyDepositTx.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    receiver: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eventNonce: jspb.Message.getFieldWithDefault(msg, 3, 0),
    eventHeight: jspb.Message.getFieldWithDefault(msg, 4, 0),
    amount: jspb.Message.getFieldWithDefault(msg, 5, ""),
    denom: jspb.Message.getFieldWithDefault(msg, 6, ""),
    orchestratorAddress: jspb.Message.getFieldWithDefault(msg, 7, ""),
    state: jspb.Message.getFieldWithDefault(msg, 8, ""),
    claimType: jspb.Message.getFieldWithDefault(msg, 9, 0),
    txHashesList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f,
    createdAt: jspb.Message.getFieldWithDefault(msg, 11, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 12, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx}
 */
proto.injective_explorer_rpc.PeggyDepositTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.PeggyDepositTx;
  return proto.injective_explorer_rpc.PeggyDepositTx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.PeggyDepositTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx}
 */
proto.injective_explorer_rpc.PeggyDepositTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventNonce(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventHeight(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrchestratorAddress(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setClaimType(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addTxHashes(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.PeggyDepositTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.PeggyDepositTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.PeggyDepositTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEventNonce();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getEventHeight();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getOrchestratorAddress();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getClaimType();
  if (f !== 0) {
    writer.writeSint32(
      9,
      f
    );
  }
  f = message.getTxHashesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string receiver = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 event_nonce = 3;
 * @return {number}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.getEventNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.setEventNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 event_height = 4;
 * @return {number}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.getEventHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.setEventHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string amount = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string denom = 6;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string orchestrator_address = 7;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.getOrchestratorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.setOrchestratorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string state = 8;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional sint32 claim_type = 9;
 * @return {number}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.getClaimType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.setClaimType = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated string tx_hashes = 10;
 * @return {!Array<string>}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.getTxHashesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.setTxHashesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.addTxHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.clearTxHashesList = function() {
  return this.setTxHashesList([]);
};


/**
 * optional string created_at = 11;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string updated_at = 12;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyDepositTx} returns this
 */
proto.injective_explorer_rpc.PeggyDepositTx.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    receiver: jspb.Message.getFieldWithDefault(msg, 2, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 3, 0),
    skip: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest;
  return proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSkip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeSint32(
      3,
      f
    );
  }
  f = message.getSkip();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string receiver = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional sint32 limit = 3;
 * @return {number}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 skip = 4;
 * @return {number}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsRequest.prototype.setSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldList: jspb.Message.toObjectList(msg.getFieldList(),
    proto.injective_explorer_rpc.PeggyWithdrawalTx.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse;
  return proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.injective_explorer_rpc.PeggyWithdrawalTx;
      reader.readMessage(value,proto.injective_explorer_rpc.PeggyWithdrawalTx.deserializeBinaryFromReader);
      msg.addField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.injective_explorer_rpc.PeggyWithdrawalTx.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PeggyWithdrawalTx field = 1;
 * @return {!Array<!proto.injective_explorer_rpc.PeggyWithdrawalTx>}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.prototype.getFieldList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.PeggyWithdrawalTx>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.PeggyWithdrawalTx, 1));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.PeggyWithdrawalTx>} value
 * @return {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse} returns this
*/
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.prototype.setFieldList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.injective_explorer_rpc.PeggyWithdrawalTx=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx}
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.prototype.addField = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective_explorer_rpc.PeggyWithdrawalTx, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse} returns this
 */
proto.injective_explorer_rpc.GetPeggyWithdrawalTxsResponse.prototype.clearFieldList = function() {
  return this.setFieldList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.repeatedFields_ = [14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.PeggyWithdrawalTx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.PeggyWithdrawalTx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    receiver: jspb.Message.getFieldWithDefault(msg, 2, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    denom: jspb.Message.getFieldWithDefault(msg, 4, ""),
    bridgeFee: jspb.Message.getFieldWithDefault(msg, 5, ""),
    outgoingTxId: jspb.Message.getFieldWithDefault(msg, 6, 0),
    batchTimeout: jspb.Message.getFieldWithDefault(msg, 7, 0),
    batchNonce: jspb.Message.getFieldWithDefault(msg, 8, 0),
    orchestratorAddress: jspb.Message.getFieldWithDefault(msg, 9, ""),
    eventNonce: jspb.Message.getFieldWithDefault(msg, 10, 0),
    eventHeight: jspb.Message.getFieldWithDefault(msg, 11, 0),
    state: jspb.Message.getFieldWithDefault(msg, 12, ""),
    claimType: jspb.Message.getFieldWithDefault(msg, 13, 0),
    txHashesList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    createdAt: jspb.Message.getFieldWithDefault(msg, 15, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.PeggyWithdrawalTx;
  return proto.injective_explorer_rpc.PeggyWithdrawalTx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.PeggyWithdrawalTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBridgeFee(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOutgoingTxId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBatchTimeout(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBatchNonce(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrchestratorAddress(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventNonce(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEventHeight(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setClaimType(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addTxHashes(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.PeggyWithdrawalTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.PeggyWithdrawalTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBridgeFee();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getOutgoingTxId();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getBatchTimeout();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getBatchNonce();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getOrchestratorAddress();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getEventNonce();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getEventHeight();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getClaimType();
  if (f !== 0) {
    writer.writeSint32(
      13,
      f
    );
  }
  f = message.getTxHashesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string receiver = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string amount = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string denom = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string bridge_fee = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getBridgeFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setBridgeFee = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 outgoing_tx_id = 6;
 * @return {number}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getOutgoingTxId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setOutgoingTxId = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 batch_timeout = 7;
 * @return {number}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getBatchTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setBatchTimeout = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 batch_nonce = 8;
 * @return {number}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getBatchNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setBatchNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string orchestrator_address = 9;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getOrchestratorAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setOrchestratorAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint64 event_nonce = 10;
 * @return {number}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getEventNonce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setEventNonce = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 event_height = 11;
 * @return {number}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getEventHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setEventHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string state = 12;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional sint32 claim_type = 13;
 * @return {number}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getClaimType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setClaimType = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * repeated string tx_hashes = 14;
 * @return {!Array<string>}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getTxHashesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setTxHashesList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.addTxHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.clearTxHashesList = function() {
  return this.setTxHashesList([]);
};


/**
 * optional string created_at = 15;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string updated_at = 16;
 * @return {string}
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.PeggyWithdrawalTx} returns this
 */
proto.injective_explorer_rpc.PeggyWithdrawalTx.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetIBCTransferTxsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetIBCTransferTxsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    receiver: jspb.Message.getFieldWithDefault(msg, 2, ""),
    srcChannel: jspb.Message.getFieldWithDefault(msg, 3, ""),
    srcPort: jspb.Message.getFieldWithDefault(msg, 4, ""),
    destChannel: jspb.Message.getFieldWithDefault(msg, 5, ""),
    destPort: jspb.Message.getFieldWithDefault(msg, 6, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 7, 0),
    skip: jspb.Message.getFieldWithDefault(msg, 8, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsRequest}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetIBCTransferTxsRequest;
  return proto.injective_explorer_rpc.GetIBCTransferTxsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetIBCTransferTxsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsRequest}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcChannel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSrcPort(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestChannel(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestPort(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setLimit(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSkip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetIBCTransferTxsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetIBCTransferTxsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSrcChannel();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSrcPort();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDestChannel();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDestPort();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeSint32(
      7,
      f
    );
  }
  f = message.getSkip();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string receiver = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string src_channel = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.getSrcChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.setSrcChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string src_port = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.getSrcPort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.setSrcPort = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string dest_channel = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.getDestChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.setDestChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string dest_port = 6;
 * @return {string}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.getDestPort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.setDestPort = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional sint32 limit = 7;
 * @return {number}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint64 skip = 8;
 * @return {number}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsRequest} returns this
 */
proto.injective_explorer_rpc.GetIBCTransferTxsRequest.prototype.setSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GetIBCTransferTxsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetIBCTransferTxsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetIBCTransferTxsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetIBCTransferTxsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldList: jspb.Message.toObjectList(msg.getFieldList(),
    proto.injective_explorer_rpc.IBCTransferTx.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsResponse}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetIBCTransferTxsResponse;
  return proto.injective_explorer_rpc.GetIBCTransferTxsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetIBCTransferTxsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsResponse}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.injective_explorer_rpc.IBCTransferTx;
      reader.readMessage(value,proto.injective_explorer_rpc.IBCTransferTx.deserializeBinaryFromReader);
      msg.addField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetIBCTransferTxsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetIBCTransferTxsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetIBCTransferTxsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.injective_explorer_rpc.IBCTransferTx.serializeBinaryToWriter
    );
  }
};


/**
 * repeated IBCTransferTx field = 1;
 * @return {!Array<!proto.injective_explorer_rpc.IBCTransferTx>}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsResponse.prototype.getFieldList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.IBCTransferTx>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.IBCTransferTx, 1));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.IBCTransferTx>} value
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsResponse} returns this
*/
proto.injective_explorer_rpc.GetIBCTransferTxsResponse.prototype.setFieldList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.injective_explorer_rpc.IBCTransferTx=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.IBCTransferTx}
 */
proto.injective_explorer_rpc.GetIBCTransferTxsResponse.prototype.addField = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective_explorer_rpc.IBCTransferTx, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GetIBCTransferTxsResponse} returns this
 */
proto.injective_explorer_rpc.GetIBCTransferTxsResponse.prototype.clearFieldList = function() {
  return this.setFieldList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.IBCTransferTx.repeatedFields_ = [14];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.IBCTransferTx.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.IBCTransferTx} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.IBCTransferTx.toObject = function(includeInstance, msg) {
  var f, obj = {
    sender: jspb.Message.getFieldWithDefault(msg, 1, ""),
    receiver: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sourcePort: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sourceChannel: jspb.Message.getFieldWithDefault(msg, 4, ""),
    destinationPort: jspb.Message.getFieldWithDefault(msg, 5, ""),
    destinationChannel: jspb.Message.getFieldWithDefault(msg, 6, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 7, ""),
    denom: jspb.Message.getFieldWithDefault(msg, 8, ""),
    timeoutHeight: jspb.Message.getFieldWithDefault(msg, 9, ""),
    timeoutTimestamp: jspb.Message.getFieldWithDefault(msg, 10, 0),
    packetSequence: jspb.Message.getFieldWithDefault(msg, 11, 0),
    dataHex: msg.getDataHex_asB64(),
    state: jspb.Message.getFieldWithDefault(msg, 13, ""),
    txHashesList: (f = jspb.Message.getRepeatedField(msg, 14)) == null ? undefined : f,
    createdAt: jspb.Message.getFieldWithDefault(msg, 15, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.IBCTransferTx}
 */
proto.injective_explorer_rpc.IBCTransferTx.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.IBCTransferTx;
  return proto.injective_explorer_rpc.IBCTransferTx.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.IBCTransferTx} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.IBCTransferTx}
 */
proto.injective_explorer_rpc.IBCTransferTx.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSender(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setReceiver(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourcePort(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setSourceChannel(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationPort(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDestinationChannel(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeoutHeight(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimeoutTimestamp(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setPacketSequence(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDataHex(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setState(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.addTxHashes(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.IBCTransferTx.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.IBCTransferTx} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.IBCTransferTx.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSender();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getReceiver();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSourcePort();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSourceChannel();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getDestinationPort();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDestinationChannel();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTimeoutHeight();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTimeoutTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getPacketSequence();
  if (f !== 0) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = message.getDataHex_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = message.getState();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getTxHashesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      14,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string sender = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getSender = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setSender = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string receiver = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getReceiver = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setReceiver = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string source_port = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getSourcePort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setSourcePort = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string source_channel = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getSourceChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setSourceChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string destination_port = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getDestinationPort = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setDestinationPort = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string destination_channel = 6;
 * @return {string}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getDestinationChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setDestinationChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string amount = 7;
 * @return {string}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string denom = 8;
 * @return {string}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string timeout_height = 9;
 * @return {string}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getTimeoutHeight = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setTimeoutHeight = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint64 timeout_timestamp = 10;
 * @return {number}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getTimeoutTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setTimeoutTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional uint64 packet_sequence = 11;
 * @return {number}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getPacketSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setPacketSequence = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bytes data_hex = 12;
 * @return {!(string|Uint8Array)}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getDataHex = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes data_hex = 12;
 * This is a type-conversion wrapper around `getDataHex()`
 * @return {string}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getDataHex_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDataHex()));
};


/**
 * optional bytes data_hex = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDataHex()`
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getDataHex_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDataHex()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setDataHex = function(value) {
  return jspb.Message.setProto3BytesField(this, 12, value);
};


/**
 * optional string state = 13;
 * @return {string}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getState = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setState = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * repeated string tx_hashes = 14;
 * @return {!Array<string>}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getTxHashesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 14));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setTxHashesList = function(value) {
  return jspb.Message.setField(this, 14, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.addTxHashes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 14, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.clearTxHashesList = function() {
  return this.setTxHashesList([]);
};


/**
 * optional string created_at = 15;
 * @return {string}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string updated_at = 16;
 * @return {string}
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.IBCTransferTx} returns this
 */
proto.injective_explorer_rpc.IBCTransferTx.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetWasmCodesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetWasmCodesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetWasmCodesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmCodesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fromNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    toNumber: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetWasmCodesRequest}
 */
proto.injective_explorer_rpc.GetWasmCodesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetWasmCodesRequest;
  return proto.injective_explorer_rpc.GetWasmCodesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetWasmCodesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetWasmCodesRequest}
 */
proto.injective_explorer_rpc.GetWasmCodesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setFromNumber(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setToNumber(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetWasmCodesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetWasmCodesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetWasmCodesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmCodesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
  f = message.getFromNumber();
  if (f !== 0) {
    writer.writeSint64(
      2,
      f
    );
  }
  f = message.getToNumber();
  if (f !== 0) {
    writer.writeSint64(
      3,
      f
    );
  }
};


/**
 * optional sint32 limit = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmCodesRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodesRequest} returns this
 */
proto.injective_explorer_rpc.GetWasmCodesRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional sint64 from_number = 2;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmCodesRequest.prototype.getFromNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodesRequest} returns this
 */
proto.injective_explorer_rpc.GetWasmCodesRequest.prototype.setFromNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional sint64 to_number = 3;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmCodesRequest.prototype.getToNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodesRequest} returns this
 */
proto.injective_explorer_rpc.GetWasmCodesRequest.prototype.setToNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GetWasmCodesResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetWasmCodesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetWasmCodesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetWasmCodesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmCodesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paging: (f = msg.getPaging()) && proto.injective_explorer_rpc.Paging.toObject(includeInstance, f),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.injective_explorer_rpc.WasmCode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetWasmCodesResponse}
 */
proto.injective_explorer_rpc.GetWasmCodesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetWasmCodesResponse;
  return proto.injective_explorer_rpc.GetWasmCodesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetWasmCodesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetWasmCodesResponse}
 */
proto.injective_explorer_rpc.GetWasmCodesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.injective_explorer_rpc.Paging;
      reader.readMessage(value,proto.injective_explorer_rpc.Paging.deserializeBinaryFromReader);
      msg.setPaging(value);
      break;
    case 2:
      var value = new proto.injective_explorer_rpc.WasmCode;
      reader.readMessage(value,proto.injective_explorer_rpc.WasmCode.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetWasmCodesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetWasmCodesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetWasmCodesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmCodesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaging();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.injective_explorer_rpc.Paging.serializeBinaryToWriter
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.injective_explorer_rpc.WasmCode.serializeBinaryToWriter
    );
  }
};


/**
 * optional Paging paging = 1;
 * @return {?proto.injective_explorer_rpc.Paging}
 */
proto.injective_explorer_rpc.GetWasmCodesResponse.prototype.getPaging = function() {
  return /** @type{?proto.injective_explorer_rpc.Paging} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Paging, 1));
};


/**
 * @param {?proto.injective_explorer_rpc.Paging|undefined} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodesResponse} returns this
*/
proto.injective_explorer_rpc.GetWasmCodesResponse.prototype.setPaging = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.GetWasmCodesResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodesResponse.prototype.clearPaging = function() {
  return this.setPaging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.GetWasmCodesResponse.prototype.hasPaging = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated WasmCode data = 2;
 * @return {!Array<!proto.injective_explorer_rpc.WasmCode>}
 */
proto.injective_explorer_rpc.GetWasmCodesResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.WasmCode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.WasmCode, 2));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.WasmCode>} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodesResponse} returns this
*/
proto.injective_explorer_rpc.GetWasmCodesResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.injective_explorer_rpc.WasmCode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.WasmCode}
 */
proto.injective_explorer_rpc.GetWasmCodesResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective_explorer_rpc.WasmCode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GetWasmCodesResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodesResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.WasmCode.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.WasmCode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.WasmCode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.WasmCode.toObject = function(includeInstance, msg) {
  var f, obj = {
    codeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    txHash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    checksum: (f = msg.getChecksum()) && proto.injective_explorer_rpc.Checksum.toObject(includeInstance, f),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    contractType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    version: jspb.Message.getFieldWithDefault(msg, 6, ""),
    permission: (f = msg.getPermission()) && proto.injective_explorer_rpc.ContractPermission.toObject(includeInstance, f),
    codeSchema: jspb.Message.getFieldWithDefault(msg, 8, ""),
    codeView: jspb.Message.getFieldWithDefault(msg, 9, ""),
    instantiates: jspb.Message.getFieldWithDefault(msg, 10, 0),
    creator: jspb.Message.getFieldWithDefault(msg, 11, ""),
    codeNumber: jspb.Message.getFieldWithDefault(msg, 12, 0),
    proposalId: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.WasmCode}
 */
proto.injective_explorer_rpc.WasmCode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.WasmCode;
  return proto.injective_explorer_rpc.WasmCode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.WasmCode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.WasmCode}
 */
proto.injective_explorer_rpc.WasmCode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCodeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxHash(value);
      break;
    case 3:
      var value = new proto.injective_explorer_rpc.Checksum;
      reader.readMessage(value,proto.injective_explorer_rpc.Checksum.deserializeBinaryFromReader);
      msg.setChecksum(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 7:
      var value = new proto.injective_explorer_rpc.ContractPermission;
      reader.readMessage(value,proto.injective_explorer_rpc.ContractPermission.deserializeBinaryFromReader);
      msg.setPermission(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeSchema(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeView(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInstantiates(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setCodeNumber(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setProposalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.WasmCode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.WasmCode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.WasmCode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.WasmCode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodeId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTxHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChecksum();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.injective_explorer_rpc.Checksum.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getContractType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPermission();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.injective_explorer_rpc.ContractPermission.serializeBinaryToWriter
    );
  }
  f = message.getCodeSchema();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCodeView();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getInstantiates();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCodeNumber();
  if (f !== 0) {
    writer.writeSint64(
      12,
      f
    );
  }
  f = message.getProposalId();
  if (f !== 0) {
    writer.writeSint64(
      13,
      f
    );
  }
};


/**
 * optional uint64 code_id = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.WasmCode.prototype.getCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
 */
proto.injective_explorer_rpc.WasmCode.prototype.setCodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string tx_hash = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmCode.prototype.getTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
 */
proto.injective_explorer_rpc.WasmCode.prototype.setTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Checksum checksum = 3;
 * @return {?proto.injective_explorer_rpc.Checksum}
 */
proto.injective_explorer_rpc.WasmCode.prototype.getChecksum = function() {
  return /** @type{?proto.injective_explorer_rpc.Checksum} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Checksum, 3));
};


/**
 * @param {?proto.injective_explorer_rpc.Checksum|undefined} value
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
*/
proto.injective_explorer_rpc.WasmCode.prototype.setChecksum = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
 */
proto.injective_explorer_rpc.WasmCode.prototype.clearChecksum = function() {
  return this.setChecksum(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.WasmCode.prototype.hasChecksum = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 created_at = 4;
 * @return {number}
 */
proto.injective_explorer_rpc.WasmCode.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
 */
proto.injective_explorer_rpc.WasmCode.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string contract_type = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmCode.prototype.getContractType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
 */
proto.injective_explorer_rpc.WasmCode.prototype.setContractType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string version = 6;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmCode.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
 */
proto.injective_explorer_rpc.WasmCode.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional ContractPermission permission = 7;
 * @return {?proto.injective_explorer_rpc.ContractPermission}
 */
proto.injective_explorer_rpc.WasmCode.prototype.getPermission = function() {
  return /** @type{?proto.injective_explorer_rpc.ContractPermission} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.ContractPermission, 7));
};


/**
 * @param {?proto.injective_explorer_rpc.ContractPermission|undefined} value
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
*/
proto.injective_explorer_rpc.WasmCode.prototype.setPermission = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
 */
proto.injective_explorer_rpc.WasmCode.prototype.clearPermission = function() {
  return this.setPermission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.WasmCode.prototype.hasPermission = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string code_schema = 8;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmCode.prototype.getCodeSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
 */
proto.injective_explorer_rpc.WasmCode.prototype.setCodeSchema = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string code_view = 9;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmCode.prototype.getCodeView = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
 */
proto.injective_explorer_rpc.WasmCode.prototype.setCodeView = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint64 instantiates = 10;
 * @return {number}
 */
proto.injective_explorer_rpc.WasmCode.prototype.getInstantiates = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
 */
proto.injective_explorer_rpc.WasmCode.prototype.setInstantiates = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string creator = 11;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmCode.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
 */
proto.injective_explorer_rpc.WasmCode.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional sint64 code_number = 12;
 * @return {number}
 */
proto.injective_explorer_rpc.WasmCode.prototype.getCodeNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
 */
proto.injective_explorer_rpc.WasmCode.prototype.setCodeNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional sint64 proposal_id = 13;
 * @return {number}
 */
proto.injective_explorer_rpc.WasmCode.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.WasmCode} returns this
 */
proto.injective_explorer_rpc.WasmCode.prototype.setProposalId = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.Checksum.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.Checksum.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.Checksum} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Checksum.toObject = function(includeInstance, msg) {
  var f, obj = {
    algorithm: jspb.Message.getFieldWithDefault(msg, 1, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.Checksum}
 */
proto.injective_explorer_rpc.Checksum.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.Checksum;
  return proto.injective_explorer_rpc.Checksum.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.Checksum} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.Checksum}
 */
proto.injective_explorer_rpc.Checksum.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAlgorithm(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.Checksum.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.Checksum.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.Checksum} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Checksum.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAlgorithm();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string algorithm = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.Checksum.prototype.getAlgorithm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Checksum} returns this
 */
proto.injective_explorer_rpc.Checksum.prototype.setAlgorithm = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string hash = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.Checksum.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Checksum} returns this
 */
proto.injective_explorer_rpc.Checksum.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.ContractPermission.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.ContractPermission.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.ContractPermission} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.ContractPermission.toObject = function(includeInstance, msg) {
  var f, obj = {
    accessType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    address: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.ContractPermission}
 */
proto.injective_explorer_rpc.ContractPermission.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.ContractPermission;
  return proto.injective_explorer_rpc.ContractPermission.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.ContractPermission} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.ContractPermission}
 */
proto.injective_explorer_rpc.ContractPermission.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setAccessType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.ContractPermission.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.ContractPermission.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.ContractPermission} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.ContractPermission.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccessType();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional sint32 access_type = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.ContractPermission.prototype.getAccessType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.ContractPermission} returns this
 */
proto.injective_explorer_rpc.ContractPermission.prototype.setAccessType = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.ContractPermission.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.ContractPermission} returns this
 */
proto.injective_explorer_rpc.ContractPermission.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetWasmCodeByIDRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetWasmCodeByIDRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmCodeByIDRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    codeId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDRequest}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetWasmCodeByIDRequest;
  return proto.injective_explorer_rpc.GetWasmCodeByIDRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetWasmCodeByIDRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDRequest}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setCodeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetWasmCodeByIDRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetWasmCodeByIDRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmCodeByIDRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodeId();
  if (f !== 0) {
    writer.writeSint64(
      1,
      f
    );
  }
};


/**
 * optional sint64 code_id = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDRequest.prototype.getCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDRequest} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDRequest.prototype.setCodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetWasmCodeByIDResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    codeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    txHash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    checksum: (f = msg.getChecksum()) && proto.injective_explorer_rpc.Checksum.toObject(includeInstance, f),
    createdAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    contractType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    version: jspb.Message.getFieldWithDefault(msg, 6, ""),
    permission: (f = msg.getPermission()) && proto.injective_explorer_rpc.ContractPermission.toObject(includeInstance, f),
    codeSchema: jspb.Message.getFieldWithDefault(msg, 8, ""),
    codeView: jspb.Message.getFieldWithDefault(msg, 9, ""),
    instantiates: jspb.Message.getFieldWithDefault(msg, 10, 0),
    creator: jspb.Message.getFieldWithDefault(msg, 11, ""),
    codeNumber: jspb.Message.getFieldWithDefault(msg, 12, 0),
    proposalId: jspb.Message.getFieldWithDefault(msg, 13, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetWasmCodeByIDResponse;
  return proto.injective_explorer_rpc.GetWasmCodeByIDResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCodeId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxHash(value);
      break;
    case 3:
      var value = new proto.injective_explorer_rpc.Checksum;
      reader.readMessage(value,proto.injective_explorer_rpc.Checksum.deserializeBinaryFromReader);
      msg.setChecksum(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 7:
      var value = new proto.injective_explorer_rpc.ContractPermission;
      reader.readMessage(value,proto.injective_explorer_rpc.ContractPermission.deserializeBinaryFromReader);
      msg.setPermission(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeSchema(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodeView(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInstantiates(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setCodeNumber(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setProposalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetWasmCodeByIDResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCodeId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getTxHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChecksum();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.injective_explorer_rpc.Checksum.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getContractType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPermission();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.injective_explorer_rpc.ContractPermission.serializeBinaryToWriter
    );
  }
  f = message.getCodeSchema();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCodeView();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getInstantiates();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCodeNumber();
  if (f !== 0) {
    writer.writeSint64(
      12,
      f
    );
  }
  f = message.getProposalId();
  if (f !== 0) {
    writer.writeSint64(
      13,
      f
    );
  }
};


/**
 * optional uint64 code_id = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.getCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.setCodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string tx_hash = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.getTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.setTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Checksum checksum = 3;
 * @return {?proto.injective_explorer_rpc.Checksum}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.getChecksum = function() {
  return /** @type{?proto.injective_explorer_rpc.Checksum} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Checksum, 3));
};


/**
 * @param {?proto.injective_explorer_rpc.Checksum|undefined} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
*/
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.setChecksum = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.clearChecksum = function() {
  return this.setChecksum(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.hasChecksum = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 created_at = 4;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string contract_type = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.getContractType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.setContractType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string version = 6;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional ContractPermission permission = 7;
 * @return {?proto.injective_explorer_rpc.ContractPermission}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.getPermission = function() {
  return /** @type{?proto.injective_explorer_rpc.ContractPermission} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.ContractPermission, 7));
};


/**
 * @param {?proto.injective_explorer_rpc.ContractPermission|undefined} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
*/
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.setPermission = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.clearPermission = function() {
  return this.setPermission(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.hasPermission = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string code_schema = 8;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.getCodeSchema = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.setCodeSchema = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string code_view = 9;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.getCodeView = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.setCodeView = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional uint64 instantiates = 10;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.getInstantiates = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.setInstantiates = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string creator = 11;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional sint64 code_number = 12;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.getCodeNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.setCodeNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional sint64 proposal_id = 13;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmCodeByIDResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmCodeByIDResponse.prototype.setProposalId = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetWasmContractsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetWasmContractsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    limit: jspb.Message.getFieldWithDefault(msg, 1, 0),
    codeId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fromNumber: jspb.Message.getFieldWithDefault(msg, 3, 0),
    toNumber: jspb.Message.getFieldWithDefault(msg, 4, 0),
    assetsOnly: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    skip: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetWasmContractsRequest}
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetWasmContractsRequest;
  return proto.injective_explorer_rpc.GetWasmContractsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetWasmContractsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetWasmContractsRequest}
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setLimit(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setCodeId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setFromNumber(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setToNumber(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAssetsOnly(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setSkip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetWasmContractsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetWasmContractsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLimit();
  if (f !== 0) {
    writer.writeSint32(
      1,
      f
    );
  }
  f = message.getCodeId();
  if (f !== 0) {
    writer.writeSint64(
      2,
      f
    );
  }
  f = message.getFromNumber();
  if (f !== 0) {
    writer.writeSint64(
      3,
      f
    );
  }
  f = message.getToNumber();
  if (f !== 0) {
    writer.writeSint64(
      4,
      f
    );
  }
  f = message.getAssetsOnly();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getSkip();
  if (f !== 0) {
    writer.writeSint64(
      6,
      f
    );
  }
};


/**
 * optional sint32 limit = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractsRequest} returns this
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional sint64 code_id = 2;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.getCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractsRequest} returns this
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.setCodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional sint64 from_number = 3;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.getFromNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractsRequest} returns this
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.setFromNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional sint64 to_number = 4;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.getToNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractsRequest} returns this
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.setToNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool assets_only = 5;
 * @return {boolean}
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.getAssetsOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractsRequest} returns this
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.setAssetsOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional sint64 skip = 6;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.getSkip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractsRequest} returns this
 */
proto.injective_explorer_rpc.GetWasmContractsRequest.prototype.setSkip = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GetWasmContractsResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetWasmContractsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetWasmContractsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetWasmContractsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmContractsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    paging: (f = msg.getPaging()) && proto.injective_explorer_rpc.Paging.toObject(includeInstance, f),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.injective_explorer_rpc.WasmContract.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetWasmContractsResponse}
 */
proto.injective_explorer_rpc.GetWasmContractsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetWasmContractsResponse;
  return proto.injective_explorer_rpc.GetWasmContractsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetWasmContractsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetWasmContractsResponse}
 */
proto.injective_explorer_rpc.GetWasmContractsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.injective_explorer_rpc.Paging;
      reader.readMessage(value,proto.injective_explorer_rpc.Paging.deserializeBinaryFromReader);
      msg.setPaging(value);
      break;
    case 2:
      var value = new proto.injective_explorer_rpc.WasmContract;
      reader.readMessage(value,proto.injective_explorer_rpc.WasmContract.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetWasmContractsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetWasmContractsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetWasmContractsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmContractsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPaging();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.injective_explorer_rpc.Paging.serializeBinaryToWriter
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.injective_explorer_rpc.WasmContract.serializeBinaryToWriter
    );
  }
};


/**
 * optional Paging paging = 1;
 * @return {?proto.injective_explorer_rpc.Paging}
 */
proto.injective_explorer_rpc.GetWasmContractsResponse.prototype.getPaging = function() {
  return /** @type{?proto.injective_explorer_rpc.Paging} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Paging, 1));
};


/**
 * @param {?proto.injective_explorer_rpc.Paging|undefined} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractsResponse} returns this
*/
proto.injective_explorer_rpc.GetWasmContractsResponse.prototype.setPaging = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.GetWasmContractsResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractsResponse.prototype.clearPaging = function() {
  return this.setPaging(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.GetWasmContractsResponse.prototype.hasPaging = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated WasmContract data = 2;
 * @return {!Array<!proto.injective_explorer_rpc.WasmContract>}
 */
proto.injective_explorer_rpc.GetWasmContractsResponse.prototype.getDataList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.WasmContract>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.WasmContract, 2));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.WasmContract>} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractsResponse} returns this
*/
proto.injective_explorer_rpc.GetWasmContractsResponse.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.injective_explorer_rpc.WasmContract=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.WasmContract}
 */
proto.injective_explorer_rpc.GetWasmContractsResponse.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective_explorer_rpc.WasmContract, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GetWasmContractsResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractsResponse.prototype.clearDataList = function() {
  return this.setDataList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.WasmContract.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.WasmContract.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.WasmContract.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.WasmContract} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.WasmContract.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    txHash: jspb.Message.getFieldWithDefault(msg, 3, ""),
    creator: jspb.Message.getFieldWithDefault(msg, 4, ""),
    executes: jspb.Message.getFieldWithDefault(msg, 5, 0),
    instantiatedAt: jspb.Message.getFieldWithDefault(msg, 6, 0),
    initMessage: jspb.Message.getFieldWithDefault(msg, 7, ""),
    lastExecutedAt: jspb.Message.getFieldWithDefault(msg, 8, 0),
    fundsList: jspb.Message.toObjectList(msg.getFundsList(),
    proto.injective_explorer_rpc.ContractFund.toObject, includeInstance),
    codeId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    admin: jspb.Message.getFieldWithDefault(msg, 11, ""),
    currentMigrateMessage: jspb.Message.getFieldWithDefault(msg, 12, ""),
    contractNumber: jspb.Message.getFieldWithDefault(msg, 13, 0),
    version: jspb.Message.getFieldWithDefault(msg, 14, ""),
    type: jspb.Message.getFieldWithDefault(msg, 15, ""),
    cw20Metadata: (f = msg.getCw20Metadata()) && proto.injective_explorer_rpc.Cw20Metadata.toObject(includeInstance, f),
    proposalId: jspb.Message.getFieldWithDefault(msg, 17, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.WasmContract}
 */
proto.injective_explorer_rpc.WasmContract.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.WasmContract;
  return proto.injective_explorer_rpc.WasmContract.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.WasmContract} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.WasmContract}
 */
proto.injective_explorer_rpc.WasmContract.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxHash(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExecutes(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInstantiatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitMessage(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastExecutedAt(value);
      break;
    case 9:
      var value = new proto.injective_explorer_rpc.ContractFund;
      reader.readMessage(value,proto.injective_explorer_rpc.ContractFund.deserializeBinaryFromReader);
      msg.addFunds(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCodeId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmin(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentMigrateMessage(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setContractNumber(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 16:
      var value = new proto.injective_explorer_rpc.Cw20Metadata;
      reader.readMessage(value,proto.injective_explorer_rpc.Cw20Metadata.deserializeBinaryFromReader);
      msg.setCw20Metadata(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setProposalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.WasmContract.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.WasmContract.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.WasmContract} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.WasmContract.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTxHash();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExecutes();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getInstantiatedAt();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getInitMessage();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLastExecutedAt();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getFundsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.injective_explorer_rpc.ContractFund.serializeBinaryToWriter
    );
  }
  f = message.getCodeId();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getAdmin();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCurrentMigrateMessage();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getContractNumber();
  if (f !== 0) {
    writer.writeSint64(
      13,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCw20Metadata();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.injective_explorer_rpc.Cw20Metadata.serializeBinaryToWriter
    );
  }
  f = message.getProposalId();
  if (f !== 0) {
    writer.writeSint64(
      17,
      f
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string tx_hash = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string creator = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 executes = 5;
 * @return {number}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getExecutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setExecutes = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 instantiated_at = 6;
 * @return {number}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getInstantiatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setInstantiatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string init_message = 7;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getInitMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setInitMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint64 last_executed_at = 8;
 * @return {number}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getLastExecutedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setLastExecutedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated ContractFund funds = 9;
 * @return {!Array<!proto.injective_explorer_rpc.ContractFund>}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getFundsList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.ContractFund>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.ContractFund, 9));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.ContractFund>} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
*/
proto.injective_explorer_rpc.WasmContract.prototype.setFundsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.injective_explorer_rpc.ContractFund=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.ContractFund}
 */
proto.injective_explorer_rpc.WasmContract.prototype.addFunds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.injective_explorer_rpc.ContractFund, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.clearFundsList = function() {
  return this.setFundsList([]);
};


/**
 * optional uint64 code_id = 10;
 * @return {number}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setCodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string admin = 11;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getAdmin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setAdmin = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string current_migrate_message = 12;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getCurrentMigrateMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setCurrentMigrateMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional sint64 contract_number = 13;
 * @return {number}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getContractNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setContractNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string version = 14;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string type = 15;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional Cw20Metadata cw20_metadata = 16;
 * @return {?proto.injective_explorer_rpc.Cw20Metadata}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getCw20Metadata = function() {
  return /** @type{?proto.injective_explorer_rpc.Cw20Metadata} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Cw20Metadata, 16));
};


/**
 * @param {?proto.injective_explorer_rpc.Cw20Metadata|undefined} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
*/
proto.injective_explorer_rpc.WasmContract.prototype.setCw20Metadata = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.clearCw20Metadata = function() {
  return this.setCw20Metadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.WasmContract.prototype.hasCw20Metadata = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional sint64 proposal_id = 17;
 * @return {number}
 */
proto.injective_explorer_rpc.WasmContract.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.WasmContract} returns this
 */
proto.injective_explorer_rpc.WasmContract.prototype.setProposalId = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.ContractFund.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.ContractFund.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.ContractFund} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.ContractFund.toObject = function(includeInstance, msg) {
  var f, obj = {
    denom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.ContractFund}
 */
proto.injective_explorer_rpc.ContractFund.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.ContractFund;
  return proto.injective_explorer_rpc.ContractFund.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.ContractFund} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.ContractFund}
 */
proto.injective_explorer_rpc.ContractFund.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDenom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.ContractFund.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.ContractFund.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.ContractFund} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.ContractFund.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDenom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string denom = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.ContractFund.prototype.getDenom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.ContractFund} returns this
 */
proto.injective_explorer_rpc.ContractFund.prototype.setDenom = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.ContractFund.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.ContractFund} returns this
 */
proto.injective_explorer_rpc.ContractFund.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.Cw20Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.Cw20Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.Cw20Metadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Cw20Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    tokenInfo: (f = msg.getTokenInfo()) && proto.injective_explorer_rpc.Cw20TokenInfo.toObject(includeInstance, f),
    marketingInfo: (f = msg.getMarketingInfo()) && proto.injective_explorer_rpc.Cw20MarketingInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.Cw20Metadata}
 */
proto.injective_explorer_rpc.Cw20Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.Cw20Metadata;
  return proto.injective_explorer_rpc.Cw20Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.Cw20Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.Cw20Metadata}
 */
proto.injective_explorer_rpc.Cw20Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.injective_explorer_rpc.Cw20TokenInfo;
      reader.readMessage(value,proto.injective_explorer_rpc.Cw20TokenInfo.deserializeBinaryFromReader);
      msg.setTokenInfo(value);
      break;
    case 2:
      var value = new proto.injective_explorer_rpc.Cw20MarketingInfo;
      reader.readMessage(value,proto.injective_explorer_rpc.Cw20MarketingInfo.deserializeBinaryFromReader);
      msg.setMarketingInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.Cw20Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.Cw20Metadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.Cw20Metadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Cw20Metadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTokenInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.injective_explorer_rpc.Cw20TokenInfo.serializeBinaryToWriter
    );
  }
  f = message.getMarketingInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.injective_explorer_rpc.Cw20MarketingInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional Cw20TokenInfo token_info = 1;
 * @return {?proto.injective_explorer_rpc.Cw20TokenInfo}
 */
proto.injective_explorer_rpc.Cw20Metadata.prototype.getTokenInfo = function() {
  return /** @type{?proto.injective_explorer_rpc.Cw20TokenInfo} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Cw20TokenInfo, 1));
};


/**
 * @param {?proto.injective_explorer_rpc.Cw20TokenInfo|undefined} value
 * @return {!proto.injective_explorer_rpc.Cw20Metadata} returns this
*/
proto.injective_explorer_rpc.Cw20Metadata.prototype.setTokenInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.Cw20Metadata} returns this
 */
proto.injective_explorer_rpc.Cw20Metadata.prototype.clearTokenInfo = function() {
  return this.setTokenInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.Cw20Metadata.prototype.hasTokenInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Cw20MarketingInfo marketing_info = 2;
 * @return {?proto.injective_explorer_rpc.Cw20MarketingInfo}
 */
proto.injective_explorer_rpc.Cw20Metadata.prototype.getMarketingInfo = function() {
  return /** @type{?proto.injective_explorer_rpc.Cw20MarketingInfo} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Cw20MarketingInfo, 2));
};


/**
 * @param {?proto.injective_explorer_rpc.Cw20MarketingInfo|undefined} value
 * @return {!proto.injective_explorer_rpc.Cw20Metadata} returns this
*/
proto.injective_explorer_rpc.Cw20Metadata.prototype.setMarketingInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.Cw20Metadata} returns this
 */
proto.injective_explorer_rpc.Cw20Metadata.prototype.clearMarketingInfo = function() {
  return this.setMarketingInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.Cw20Metadata.prototype.hasMarketingInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.Cw20TokenInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.Cw20TokenInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.Cw20TokenInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Cw20TokenInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    symbol: jspb.Message.getFieldWithDefault(msg, 2, ""),
    decimals: jspb.Message.getFieldWithDefault(msg, 3, 0),
    totalSupply: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.Cw20TokenInfo}
 */
proto.injective_explorer_rpc.Cw20TokenInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.Cw20TokenInfo;
  return proto.injective_explorer_rpc.Cw20TokenInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.Cw20TokenInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.Cw20TokenInfo}
 */
proto.injective_explorer_rpc.Cw20TokenInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSymbol(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setDecimals(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setTotalSupply(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.Cw20TokenInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.Cw20TokenInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.Cw20TokenInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Cw20TokenInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSymbol();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDecimals();
  if (f !== 0) {
    writer.writeSint64(
      3,
      f
    );
  }
  f = message.getTotalSupply();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.Cw20TokenInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Cw20TokenInfo} returns this
 */
proto.injective_explorer_rpc.Cw20TokenInfo.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string symbol = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.Cw20TokenInfo.prototype.getSymbol = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Cw20TokenInfo} returns this
 */
proto.injective_explorer_rpc.Cw20TokenInfo.prototype.setSymbol = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional sint64 decimals = 3;
 * @return {number}
 */
proto.injective_explorer_rpc.Cw20TokenInfo.prototype.getDecimals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.Cw20TokenInfo} returns this
 */
proto.injective_explorer_rpc.Cw20TokenInfo.prototype.setDecimals = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string total_supply = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.Cw20TokenInfo.prototype.getTotalSupply = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Cw20TokenInfo} returns this
 */
proto.injective_explorer_rpc.Cw20TokenInfo.prototype.setTotalSupply = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.Cw20MarketingInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.Cw20MarketingInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    project: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    logo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    marketing: msg.getMarketing_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.Cw20MarketingInfo}
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.Cw20MarketingInfo;
  return proto.injective_explorer_rpc.Cw20MarketingInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.Cw20MarketingInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.Cw20MarketingInfo}
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProject(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogo(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMarketing(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.Cw20MarketingInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.Cw20MarketingInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProject();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLogo();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMarketing_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string project = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.prototype.getProject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Cw20MarketingInfo} returns this
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.prototype.setProject = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Cw20MarketingInfo} returns this
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string logo = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Cw20MarketingInfo} returns this
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.prototype.setLogo = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bytes marketing = 4;
 * @return {!(string|Uint8Array)}
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.prototype.getMarketing = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes marketing = 4;
 * This is a type-conversion wrapper around `getMarketing()`
 * @return {string}
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.prototype.getMarketing_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMarketing()));
};


/**
 * optional bytes marketing = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMarketing()`
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.prototype.getMarketing_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMarketing()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.injective_explorer_rpc.Cw20MarketingInfo} returns this
 */
proto.injective_explorer_rpc.Cw20MarketingInfo.prototype.setMarketing = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetWasmContractByAddressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetWasmContractByAddressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmContractByAddressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractAddress: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressRequest}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetWasmContractByAddressRequest;
  return proto.injective_explorer_rpc.GetWasmContractByAddressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetWasmContractByAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressRequest}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetWasmContractByAddressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetWasmContractByAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmContractByAddressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string contract_address = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressRequest.prototype.getContractAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressRequest} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressRequest.prototype.setContractAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetWasmContractByAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    address: jspb.Message.getFieldWithDefault(msg, 2, ""),
    txHash: jspb.Message.getFieldWithDefault(msg, 3, ""),
    creator: jspb.Message.getFieldWithDefault(msg, 4, ""),
    executes: jspb.Message.getFieldWithDefault(msg, 5, 0),
    instantiatedAt: jspb.Message.getFieldWithDefault(msg, 6, 0),
    initMessage: jspb.Message.getFieldWithDefault(msg, 7, ""),
    lastExecutedAt: jspb.Message.getFieldWithDefault(msg, 8, 0),
    fundsList: jspb.Message.toObjectList(msg.getFundsList(),
    proto.injective_explorer_rpc.ContractFund.toObject, includeInstance),
    codeId: jspb.Message.getFieldWithDefault(msg, 10, 0),
    admin: jspb.Message.getFieldWithDefault(msg, 11, ""),
    currentMigrateMessage: jspb.Message.getFieldWithDefault(msg, 12, ""),
    contractNumber: jspb.Message.getFieldWithDefault(msg, 13, 0),
    version: jspb.Message.getFieldWithDefault(msg, 14, ""),
    type: jspb.Message.getFieldWithDefault(msg, 15, ""),
    cw20Metadata: (f = msg.getCw20Metadata()) && proto.injective_explorer_rpc.Cw20Metadata.toObject(includeInstance, f),
    proposalId: jspb.Message.getFieldWithDefault(msg, 17, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetWasmContractByAddressResponse;
  return proto.injective_explorer_rpc.GetWasmContractByAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTxHash(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreator(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setExecutes(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setInstantiatedAt(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setInitMessage(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLastExecutedAt(value);
      break;
    case 9:
      var value = new proto.injective_explorer_rpc.ContractFund;
      reader.readMessage(value,proto.injective_explorer_rpc.ContractFund.deserializeBinaryFromReader);
      msg.addFunds(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCodeId(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAdmin(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setCurrentMigrateMessage(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setContractNumber(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 16:
      var value = new proto.injective_explorer_rpc.Cw20Metadata;
      reader.readMessage(value,proto.injective_explorer_rpc.Cw20Metadata.deserializeBinaryFromReader);
      msg.setCw20Metadata(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setProposalId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetWasmContractByAddressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTxHash();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCreator();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getExecutes();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getInstantiatedAt();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getInitMessage();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getLastExecutedAt();
  if (f !== 0) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = message.getFundsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.injective_explorer_rpc.ContractFund.serializeBinaryToWriter
    );
  }
  f = message.getCodeId();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getAdmin();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCurrentMigrateMessage();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getContractNumber();
  if (f !== 0) {
    writer.writeSint64(
      13,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getCw20Metadata();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.injective_explorer_rpc.Cw20Metadata.serializeBinaryToWriter
    );
  }
  f = message.getProposalId();
  if (f !== 0) {
    writer.writeSint64(
      17,
      f
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string tx_hash = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getTxHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setTxHash = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string creator = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getCreator = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setCreator = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional uint64 executes = 5;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getExecutes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setExecutes = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint64 instantiated_at = 6;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getInstantiatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setInstantiatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional string init_message = 7;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getInitMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setInitMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional uint64 last_executed_at = 8;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getLastExecutedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setLastExecutedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated ContractFund funds = 9;
 * @return {!Array<!proto.injective_explorer_rpc.ContractFund>}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getFundsList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.ContractFund>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.ContractFund, 9));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.ContractFund>} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
*/
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setFundsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.injective_explorer_rpc.ContractFund=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.ContractFund}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.addFunds = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.injective_explorer_rpc.ContractFund, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.clearFundsList = function() {
  return this.setFundsList([]);
};


/**
 * optional uint64 code_id = 10;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getCodeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setCodeId = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string admin = 11;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getAdmin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setAdmin = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string current_migrate_message = 12;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getCurrentMigrateMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setCurrentMigrateMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional sint64 contract_number = 13;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getContractNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setContractNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string version = 14;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string type = 15;
 * @return {string}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional Cw20Metadata cw20_metadata = 16;
 * @return {?proto.injective_explorer_rpc.Cw20Metadata}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getCw20Metadata = function() {
  return /** @type{?proto.injective_explorer_rpc.Cw20Metadata} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Cw20Metadata, 16));
};


/**
 * @param {?proto.injective_explorer_rpc.Cw20Metadata|undefined} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
*/
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setCw20Metadata = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.clearCw20Metadata = function() {
  return this.setCw20Metadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.hasCw20Metadata = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional sint64 proposal_id = 17;
 * @return {number}
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.getProposalId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetWasmContractByAddressResponse} returns this
 */
proto.injective_explorer_rpc.GetWasmContractByAddressResponse.prototype.setProposalId = function(value) {
  return jspb.Message.setProto3IntField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetCw20BalanceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetCw20BalanceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetCw20BalanceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetCw20BalanceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetCw20BalanceRequest}
 */
proto.injective_explorer_rpc.GetCw20BalanceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetCw20BalanceRequest;
  return proto.injective_explorer_rpc.GetCw20BalanceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetCw20BalanceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetCw20BalanceRequest}
 */
proto.injective_explorer_rpc.GetCw20BalanceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readSint32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetCw20BalanceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetCw20BalanceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetCw20BalanceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetCw20BalanceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeSint32(
      2,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.GetCw20BalanceRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.GetCw20BalanceRequest} returns this
 */
proto.injective_explorer_rpc.GetCw20BalanceRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional sint32 limit = 2;
 * @return {number}
 */
proto.injective_explorer_rpc.GetCw20BalanceRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.GetCw20BalanceRequest} returns this
 */
proto.injective_explorer_rpc.GetCw20BalanceRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.GetCw20BalanceResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.GetCw20BalanceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.GetCw20BalanceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.GetCw20BalanceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetCw20BalanceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldList: jspb.Message.toObjectList(msg.getFieldList(),
    proto.injective_explorer_rpc.WasmCw20Balance.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.GetCw20BalanceResponse}
 */
proto.injective_explorer_rpc.GetCw20BalanceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.GetCw20BalanceResponse;
  return proto.injective_explorer_rpc.GetCw20BalanceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.GetCw20BalanceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.GetCw20BalanceResponse}
 */
proto.injective_explorer_rpc.GetCw20BalanceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.injective_explorer_rpc.WasmCw20Balance;
      reader.readMessage(value,proto.injective_explorer_rpc.WasmCw20Balance.deserializeBinaryFromReader);
      msg.addField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.GetCw20BalanceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.GetCw20BalanceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.GetCw20BalanceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.GetCw20BalanceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.injective_explorer_rpc.WasmCw20Balance.serializeBinaryToWriter
    );
  }
};


/**
 * repeated WasmCw20Balance field = 1;
 * @return {!Array<!proto.injective_explorer_rpc.WasmCw20Balance>}
 */
proto.injective_explorer_rpc.GetCw20BalanceResponse.prototype.getFieldList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.WasmCw20Balance>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.WasmCw20Balance, 1));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.WasmCw20Balance>} value
 * @return {!proto.injective_explorer_rpc.GetCw20BalanceResponse} returns this
*/
proto.injective_explorer_rpc.GetCw20BalanceResponse.prototype.setFieldList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.injective_explorer_rpc.WasmCw20Balance=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.WasmCw20Balance}
 */
proto.injective_explorer_rpc.GetCw20BalanceResponse.prototype.addField = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective_explorer_rpc.WasmCw20Balance, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.GetCw20BalanceResponse} returns this
 */
proto.injective_explorer_rpc.GetCw20BalanceResponse.prototype.clearFieldList = function() {
  return this.setFieldList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.WasmCw20Balance.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.WasmCw20Balance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.WasmCw20Balance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.WasmCw20Balance.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractAddress: jspb.Message.getFieldWithDefault(msg, 1, ""),
    account: jspb.Message.getFieldWithDefault(msg, 2, ""),
    balance: jspb.Message.getFieldWithDefault(msg, 3, ""),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    cw20Metadata: (f = msg.getCw20Metadata()) && proto.injective_explorer_rpc.Cw20Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.WasmCw20Balance}
 */
proto.injective_explorer_rpc.WasmCw20Balance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.WasmCw20Balance;
  return proto.injective_explorer_rpc.WasmCw20Balance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.WasmCw20Balance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.WasmCw20Balance}
 */
proto.injective_explorer_rpc.WasmCw20Balance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContractAddress(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBalance(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setUpdatedAt(value);
      break;
    case 5:
      var value = new proto.injective_explorer_rpc.Cw20Metadata;
      reader.readMessage(value,proto.injective_explorer_rpc.Cw20Metadata.deserializeBinaryFromReader);
      msg.setCw20Metadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.WasmCw20Balance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.WasmCw20Balance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.WasmCw20Balance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.WasmCw20Balance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAccount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBalance();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeSint64(
      4,
      f
    );
  }
  f = message.getCw20Metadata();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.injective_explorer_rpc.Cw20Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string contract_address = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmCw20Balance.prototype.getContractAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmCw20Balance} returns this
 */
proto.injective_explorer_rpc.WasmCw20Balance.prototype.setContractAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string account = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmCw20Balance.prototype.getAccount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmCw20Balance} returns this
 */
proto.injective_explorer_rpc.WasmCw20Balance.prototype.setAccount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string balance = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.WasmCw20Balance.prototype.getBalance = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.WasmCw20Balance} returns this
 */
proto.injective_explorer_rpc.WasmCw20Balance.prototype.setBalance = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional sint64 updated_at = 4;
 * @return {number}
 */
proto.injective_explorer_rpc.WasmCw20Balance.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.WasmCw20Balance} returns this
 */
proto.injective_explorer_rpc.WasmCw20Balance.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional Cw20Metadata cw20_metadata = 5;
 * @return {?proto.injective_explorer_rpc.Cw20Metadata}
 */
proto.injective_explorer_rpc.WasmCw20Balance.prototype.getCw20Metadata = function() {
  return /** @type{?proto.injective_explorer_rpc.Cw20Metadata} */ (
    jspb.Message.getWrapperField(this, proto.injective_explorer_rpc.Cw20Metadata, 5));
};


/**
 * @param {?proto.injective_explorer_rpc.Cw20Metadata|undefined} value
 * @return {!proto.injective_explorer_rpc.WasmCw20Balance} returns this
*/
proto.injective_explorer_rpc.WasmCw20Balance.prototype.setCw20Metadata = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.injective_explorer_rpc.WasmCw20Balance} returns this
 */
proto.injective_explorer_rpc.WasmCw20Balance.prototype.clearCw20Metadata = function() {
  return this.setCw20Metadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.injective_explorer_rpc.WasmCw20Balance.prototype.hasCw20Metadata = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.RelayersRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.RelayersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.RelayersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.RelayersRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.RelayersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketIDsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.RelayersRequest}
 */
proto.injective_explorer_rpc.RelayersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.RelayersRequest;
  return proto.injective_explorer_rpc.RelayersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.RelayersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.RelayersRequest}
 */
proto.injective_explorer_rpc.RelayersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addMarketIDs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.RelayersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.RelayersRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.RelayersRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.RelayersRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketIDsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string market_i_ds = 1;
 * @return {!Array<string>}
 */
proto.injective_explorer_rpc.RelayersRequest.prototype.getMarketIDsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.injective_explorer_rpc.RelayersRequest} returns this
 */
proto.injective_explorer_rpc.RelayersRequest.prototype.setMarketIDsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.RelayersRequest} returns this
 */
proto.injective_explorer_rpc.RelayersRequest.prototype.addMarketIDs = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.RelayersRequest} returns this
 */
proto.injective_explorer_rpc.RelayersRequest.prototype.clearMarketIDsList = function() {
  return this.setMarketIDsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.RelayersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.RelayersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.RelayersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.RelayersResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.RelayersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    fieldList: jspb.Message.toObjectList(msg.getFieldList(),
    proto.injective_explorer_rpc.RelayerMarkets.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.RelayersResponse}
 */
proto.injective_explorer_rpc.RelayersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.RelayersResponse;
  return proto.injective_explorer_rpc.RelayersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.RelayersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.RelayersResponse}
 */
proto.injective_explorer_rpc.RelayersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.injective_explorer_rpc.RelayerMarkets;
      reader.readMessage(value,proto.injective_explorer_rpc.RelayerMarkets.deserializeBinaryFromReader);
      msg.addField(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.RelayersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.RelayersResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.RelayersResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.RelayersResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFieldList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.injective_explorer_rpc.RelayerMarkets.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RelayerMarkets field = 1;
 * @return {!Array<!proto.injective_explorer_rpc.RelayerMarkets>}
 */
proto.injective_explorer_rpc.RelayersResponse.prototype.getFieldList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.RelayerMarkets>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.RelayerMarkets, 1));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.RelayerMarkets>} value
 * @return {!proto.injective_explorer_rpc.RelayersResponse} returns this
*/
proto.injective_explorer_rpc.RelayersResponse.prototype.setFieldList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.injective_explorer_rpc.RelayerMarkets=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.RelayerMarkets}
 */
proto.injective_explorer_rpc.RelayersResponse.prototype.addField = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.injective_explorer_rpc.RelayerMarkets, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.RelayersResponse} returns this
 */
proto.injective_explorer_rpc.RelayersResponse.prototype.clearFieldList = function() {
  return this.setFieldList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.RelayerMarkets.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.RelayerMarkets.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.RelayerMarkets.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.RelayerMarkets} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.RelayerMarkets.toObject = function(includeInstance, msg) {
  var f, obj = {
    marketId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    relayersList: jspb.Message.toObjectList(msg.getRelayersList(),
    proto.injective_explorer_rpc.Relayer.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.RelayerMarkets}
 */
proto.injective_explorer_rpc.RelayerMarkets.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.RelayerMarkets;
  return proto.injective_explorer_rpc.RelayerMarkets.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.RelayerMarkets} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.RelayerMarkets}
 */
proto.injective_explorer_rpc.RelayerMarkets.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setMarketId(value);
      break;
    case 2:
      var value = new proto.injective_explorer_rpc.Relayer;
      reader.readMessage(value,proto.injective_explorer_rpc.Relayer.deserializeBinaryFromReader);
      msg.addRelayers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.RelayerMarkets.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.RelayerMarkets.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.RelayerMarkets} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.RelayerMarkets.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMarketId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRelayersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.injective_explorer_rpc.Relayer.serializeBinaryToWriter
    );
  }
};


/**
 * optional string market_id = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.RelayerMarkets.prototype.getMarketId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.RelayerMarkets} returns this
 */
proto.injective_explorer_rpc.RelayerMarkets.prototype.setMarketId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Relayer relayers = 2;
 * @return {!Array<!proto.injective_explorer_rpc.Relayer>}
 */
proto.injective_explorer_rpc.RelayerMarkets.prototype.getRelayersList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.Relayer>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.Relayer, 2));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.Relayer>} value
 * @return {!proto.injective_explorer_rpc.RelayerMarkets} returns this
*/
proto.injective_explorer_rpc.RelayerMarkets.prototype.setRelayersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.injective_explorer_rpc.Relayer=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.Relayer}
 */
proto.injective_explorer_rpc.RelayerMarkets.prototype.addRelayers = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.injective_explorer_rpc.Relayer, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.RelayerMarkets} returns this
 */
proto.injective_explorer_rpc.RelayerMarkets.prototype.clearRelayersList = function() {
  return this.setRelayersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.Relayer.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.Relayer.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.Relayer} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Relayer.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    cta: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.Relayer}
 */
proto.injective_explorer_rpc.Relayer.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.Relayer;
  return proto.injective_explorer_rpc.Relayer.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.Relayer} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.Relayer}
 */
proto.injective_explorer_rpc.Relayer.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCta(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.Relayer.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.Relayer.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.Relayer} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.Relayer.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCta();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.Relayer.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Relayer} returns this
 */
proto.injective_explorer_rpc.Relayer.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string cta = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.Relayer.prototype.getCta = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.Relayer} returns this
 */
proto.injective_explorer_rpc.Relayer.prototype.setCta = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.StreamTxsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.StreamTxsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.StreamTxsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.StreamTxsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.StreamTxsRequest}
 */
proto.injective_explorer_rpc.StreamTxsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.StreamTxsRequest;
  return proto.injective_explorer_rpc.StreamTxsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.StreamTxsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.StreamTxsRequest}
 */
proto.injective_explorer_rpc.StreamTxsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.StreamTxsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.StreamTxsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.StreamTxsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.StreamTxsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.StreamTxsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.StreamTxsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.StreamTxsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockNumber: jspb.Message.getFieldWithDefault(msg, 2, 0),
    blockTimestamp: jspb.Message.getFieldWithDefault(msg, 3, ""),
    hash: jspb.Message.getFieldWithDefault(msg, 4, ""),
    codespace: jspb.Message.getFieldWithDefault(msg, 5, ""),
    messages: jspb.Message.getFieldWithDefault(msg, 6, ""),
    txNumber: jspb.Message.getFieldWithDefault(msg, 7, 0),
    errorLog: jspb.Message.getFieldWithDefault(msg, 8, ""),
    code: jspb.Message.getFieldWithDefault(msg, 9, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.StreamTxsResponse}
 */
proto.injective_explorer_rpc.StreamTxsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.StreamTxsResponse;
  return proto.injective_explorer_rpc.StreamTxsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.StreamTxsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.StreamTxsResponse}
 */
proto.injective_explorer_rpc.StreamTxsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBlockNumber(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockTimestamp(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCodespace(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessages(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTxNumber(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorLog(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.StreamTxsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.StreamTxsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.StreamTxsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockNumber();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getBlockTimestamp();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCodespace();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getMessages();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTxNumber();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getErrorLog();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCode();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.StreamTxsResponse} returns this
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 block_number = 2;
 * @return {number}
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.getBlockNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.StreamTxsResponse} returns this
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.setBlockNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string block_timestamp = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.getBlockTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.StreamTxsResponse} returns this
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.setBlockTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string hash = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.StreamTxsResponse} returns this
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string codespace = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.getCodespace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.StreamTxsResponse} returns this
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.setCodespace = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string messages = 6;
 * @return {string}
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.getMessages = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.StreamTxsResponse} returns this
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.setMessages = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint64 tx_number = 7;
 * @return {number}
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.getTxNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.StreamTxsResponse} returns this
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.setTxNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string error_log = 8;
 * @return {string}
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.getErrorLog = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.StreamTxsResponse} returns this
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.setErrorLog = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional uint32 code = 9;
 * @return {number}
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.getCode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.StreamTxsResponse} returns this
 */
proto.injective_explorer_rpc.StreamTxsResponse.prototype.setCode = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.StreamBlocksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.StreamBlocksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.StreamBlocksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.StreamBlocksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.StreamBlocksRequest}
 */
proto.injective_explorer_rpc.StreamBlocksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.StreamBlocksRequest;
  return proto.injective_explorer_rpc.StreamBlocksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.StreamBlocksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.StreamBlocksRequest}
 */
proto.injective_explorer_rpc.StreamBlocksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.StreamBlocksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.StreamBlocksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.StreamBlocksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.StreamBlocksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.injective_explorer_rpc.StreamBlocksResponse.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.injective_explorer_rpc.StreamBlocksResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.injective_explorer_rpc.StreamBlocksResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.StreamBlocksResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    height: jspb.Message.getFieldWithDefault(msg, 1, 0),
    proposer: jspb.Message.getFieldWithDefault(msg, 2, ""),
    moniker: jspb.Message.getFieldWithDefault(msg, 3, ""),
    blockHash: jspb.Message.getFieldWithDefault(msg, 4, ""),
    parentHash: jspb.Message.getFieldWithDefault(msg, 5, ""),
    numPreCommits: jspb.Message.getFieldWithDefault(msg, 6, 0),
    numTxs: jspb.Message.getFieldWithDefault(msg, 7, 0),
    txsList: jspb.Message.toObjectList(msg.getTxsList(),
    proto.injective_explorer_rpc.TxDataRPC.toObject, includeInstance),
    timestamp: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.injective_explorer_rpc.StreamBlocksResponse}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.injective_explorer_rpc.StreamBlocksResponse;
  return proto.injective_explorer_rpc.StreamBlocksResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.injective_explorer_rpc.StreamBlocksResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.injective_explorer_rpc.StreamBlocksResponse}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setHeight(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProposer(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMoniker(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBlockHash(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentHash(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setNumPreCommits(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readSint64());
      msg.setNumTxs(value);
      break;
    case 8:
      var value = new proto.injective_explorer_rpc.TxDataRPC;
      reader.readMessage(value,proto.injective_explorer_rpc.TxDataRPC.deserializeBinaryFromReader);
      msg.addTxs(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimestamp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.injective_explorer_rpc.StreamBlocksResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.injective_explorer_rpc.StreamBlocksResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.injective_explorer_rpc.StreamBlocksResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHeight();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getProposer();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMoniker();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBlockHash();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getParentHash();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getNumPreCommits();
  if (f !== 0) {
    writer.writeSint64(
      6,
      f
    );
  }
  f = message.getNumTxs();
  if (f !== 0) {
    writer.writeSint64(
      7,
      f
    );
  }
  f = message.getTxsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.injective_explorer_rpc.TxDataRPC.serializeBinaryToWriter
    );
  }
  f = message.getTimestamp();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional uint64 height = 1;
 * @return {number}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.StreamBlocksResponse} returns this
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string proposer = 2;
 * @return {string}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.getProposer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.StreamBlocksResponse} returns this
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.setProposer = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string moniker = 3;
 * @return {string}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.getMoniker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.StreamBlocksResponse} returns this
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.setMoniker = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string block_hash = 4;
 * @return {string}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.getBlockHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.StreamBlocksResponse} returns this
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.setBlockHash = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string parent_hash = 5;
 * @return {string}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.getParentHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.StreamBlocksResponse} returns this
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.setParentHash = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional sint64 num_pre_commits = 6;
 * @return {number}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.getNumPreCommits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.StreamBlocksResponse} returns this
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.setNumPreCommits = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional sint64 num_txs = 7;
 * @return {number}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.getNumTxs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.injective_explorer_rpc.StreamBlocksResponse} returns this
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.setNumTxs = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated TxDataRPC txs = 8;
 * @return {!Array<!proto.injective_explorer_rpc.TxDataRPC>}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.getTxsList = function() {
  return /** @type{!Array<!proto.injective_explorer_rpc.TxDataRPC>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.injective_explorer_rpc.TxDataRPC, 8));
};


/**
 * @param {!Array<!proto.injective_explorer_rpc.TxDataRPC>} value
 * @return {!proto.injective_explorer_rpc.StreamBlocksResponse} returns this
*/
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.setTxsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.injective_explorer_rpc.TxDataRPC=} opt_value
 * @param {number=} opt_index
 * @return {!proto.injective_explorer_rpc.TxDataRPC}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.addTxs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.injective_explorer_rpc.TxDataRPC, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.injective_explorer_rpc.StreamBlocksResponse} returns this
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.clearTxsList = function() {
  return this.setTxsList([]);
};


/**
 * optional string timestamp = 9;
 * @return {string}
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.getTimestamp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.injective_explorer_rpc.StreamBlocksResponse} returns this
 */
proto.injective_explorer_rpc.StreamBlocksResponse.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


goog.object.extend(exports, proto.injective_explorer_rpc);
