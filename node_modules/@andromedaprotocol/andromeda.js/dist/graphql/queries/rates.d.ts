import { ContractAddressQuery, Recipient } from "./types";
import { Coin } from "@cosmjs/proto-signing";
export interface RatesResponse<T> {
    rates: T;
}
export interface ADORate {
    address: string;
    key: string;
}
export interface DecimalRate {
    decimal: number;
}
export interface Rate {
    external: ADORate;
    flat: Coin;
    percent: DecimalRate;
}
export interface RateInfo {
    description: string;
    is_additive: boolean;
    rate: Rate;
    receivers: Recipient[];
}
export interface QueryRatesPayments extends ContractAddressQuery {
}
export type QueryRatesPaymentsResponse = RatesResponse<{
    payments: RateInfo[];
}>;
export declare const QUERY_RATES_PAYMENTS: string;
/**
 * Queries a rates contract for its stored rate info
 * @param contractAddress
 * @returns
 */
export declare function queryPayments(contractAddress: string): Promise<RateInfo[]>;
