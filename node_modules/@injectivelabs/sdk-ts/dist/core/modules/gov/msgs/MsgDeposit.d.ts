import { MsgDeposit as BaseMsgDeposit } from '@injectivelabs/chain-api/cosmos/gov/v1beta1/tx_pb';
import { Coin } from '@injectivelabs/chain-api/cosmos/base/v1beta1/coin_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgDeposit {
    interface Params {
        proposalId: number;
        amount: {
            denom: string;
            amount: string;
        };
        depositor: string;
    }
    type Proto = BaseMsgDeposit;
    type Object = BaseMsgDeposit.AsObject;
}
/**
 * @category Messages
 */
export default class MsgDeposit extends MsgBase<MsgDeposit.Params, MsgDeposit.Proto, MsgDeposit.Object> {
    static fromJSON(params: MsgDeposit.Params): MsgDeposit;
    toProto(): BaseMsgDeposit;
    toData(): {
        proposalId: number;
        depositor: string;
        amountList: Coin.AsObject[];
        '@type': string;
    };
    toAmino(): {
        type: string;
        value: {
            amount: {
                denom: string;
                amount: string;
            }[];
            proposal_id: number;
            depositor: string;
            amount_list: Coin.AsObject[];
        };
    };
    toWeb3(): {
        amount: {
            denom: string;
            amount: string;
        }[];
        proposal_id: number;
        depositor: string;
        amount_list: Coin.AsObject[];
        '@type': string;
    };
    toDirectSign(): {
        type: string;
        message: BaseMsgDeposit;
    };
}
//# sourceMappingURL=MsgDeposit.d.ts.map