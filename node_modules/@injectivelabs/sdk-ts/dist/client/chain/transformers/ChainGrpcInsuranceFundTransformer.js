"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChainGrpcInsuranceFundTransformer = void 0;
/**
 * @category Chain Grpc Transformer
 */
class ChainGrpcInsuranceFundTransformer {
    static moduleParamsResponseToModuleParams(response) {
        var _a;
        const params = response.getParams();
        return {
            defaultRedemptionNoticePeriodDuration: ((_a = params.getDefaultRedemptionNoticePeriodDuration()) === null || _a === void 0 ? void 0 : _a.getSeconds()) || 0,
        };
    }
    static grpcInsuranceFundToInsuranceFund(grpcFund) {
        var _a;
        return {
            depositDenom: grpcFund.getDepositDenom(),
            insurancePoolTokenDenom: grpcFund.getInsurancePoolTokenDenom(),
            redemptionNoticePeriodDuration: (_a = grpcFund
                .getRedemptionNoticePeriodDuration()) === null || _a === void 0 ? void 0 : _a.getSeconds(),
            balance: grpcFund.getBalance(),
            totalShare: grpcFund.getTotalShare(),
            marketId: grpcFund.getMarketId(),
            marketTicker: grpcFund.getMarketTicker(),
            oracleBase: grpcFund.getOracleBase(),
            oracleQuote: grpcFund.getOracleQuote(),
            oracleType: grpcFund.getOracleType(),
            expiry: grpcFund.getExpiry(),
        };
    }
    static insuranceFundResponseToInsuranceFund(response) {
        return ChainGrpcInsuranceFundTransformer.grpcInsuranceFundToInsuranceFund(response.getFund());
    }
    static insuranceFundsResponseToInsuranceFunds(response) {
        return response
            .getFundsList()
            .map((fund) => ChainGrpcInsuranceFundTransformer.grpcInsuranceFundToInsuranceFund(fund));
    }
    static redemptionsResponseToRedemptions(response) {
        return response.getAmountList().map((amount) => {
            return {
                amount: amount.getAmount(),
                denom: amount.getDenom(),
            };
        });
    }
    static estimatedRedemptionsResponseToEstimatedRedemptions(response) {
        return response.getAmountList().map((amount) => {
            return {
                amount: amount.getAmount(),
                denom: amount.getDenom(),
            };
        });
    }
}
exports.ChainGrpcInsuranceFundTransformer = ChainGrpcInsuranceFundTransformer;
//# sourceMappingURL=ChainGrpcInsuranceFundTransformer.js.map