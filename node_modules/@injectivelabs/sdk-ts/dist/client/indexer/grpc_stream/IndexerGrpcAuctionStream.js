"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IndexerGrpcAuctionStream = void 0;
const injective_auction_rpc_pb_service_1 = require("@injectivelabs/indexer-api/injective_auction_rpc_pb_service");
const injective_auction_rpc_pb_1 = require("@injectivelabs/indexer-api/injective_auction_rpc_pb");
const transformers_1 = require("../transformers");
const grpc_1 = require("../../../utils/grpc");
/**
 * @category Indexer Grpc Stream
 */
class IndexerGrpcAuctionStream {
    constructor(endpoint) {
        this.client = new injective_auction_rpc_pb_service_1.InjectiveAuctionRPCClient(endpoint, {
            transport: (0, grpc_1.getGrpcTransport)(),
        });
    }
    streamBids({ callback, onEndCallback, onStatusCallback, }) {
        const request = new injective_auction_rpc_pb_1.StreamBidsRequest();
        const stream = this.client.streamBids(request);
        stream.on('data', (response) => {
            callback(transformers_1.IndexerAuctionStreamTransformer.bidsStreamCallback(response));
        });
        if (onEndCallback) {
            stream.on('end', onEndCallback);
        }
        if (onStatusCallback) {
            stream.on('status', onStatusCallback);
        }
        return stream;
    }
}
exports.IndexerGrpcAuctionStream = IndexerGrpcAuctionStream;
//# sourceMappingURL=IndexerGrpcAuctionStream.js.map