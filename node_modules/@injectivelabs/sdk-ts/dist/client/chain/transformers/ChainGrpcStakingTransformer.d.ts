import { QueryDelegatorDelegationsResponse, QueryDelegatorUnbondingDelegationsResponse, QueryRedelegationsResponse, QueryValidatorsResponse, QueryDelegationResponse, QueryValidatorResponse, QueryParamsResponse as QueryStakingParamsResponse, QueryPoolResponse } from '@injectivelabs/chain-api/cosmos/staking/v1beta1/query_pb';
import { GrpcValidator, GrpcValidatorCommission, GrpcValidatorDescription, BondStatus, Validator, ValidatorCommission, ValidatorDescription, Delegation, UnBondingDelegation, ReDelegation, Pool, StakingModuleParams } from '../types/staking';
import { Pagination } from '../../../types/index';
/**
 * @category Chain Grpc Transformer
 */
export declare class ChainGrpcStakingTransformer {
    static moduleParamsResponseToModuleParams(response: QueryStakingParamsResponse): StakingModuleParams;
    static validatorResponseToValidator(response: QueryValidatorResponse): Validator;
    static validatorsResponseToValidators(response: QueryValidatorsResponse): {
        validators: Validator[];
        pagination: Pagination;
    };
    static delegationResponseToDelegation(response: QueryDelegationResponse): Delegation;
    static delegationsResponseToDelegations(response: QueryDelegatorDelegationsResponse): {
        delegations: Delegation[];
        pagination: Pagination;
    };
    static unBondingDelegationsResponseToUnBondingDelegations(response: QueryDelegatorUnbondingDelegationsResponse): {
        unbondingDelegations: UnBondingDelegation[];
        pagination: Pagination;
    };
    static reDelegationsResponseToReDelegations(response: QueryRedelegationsResponse): {
        redelegations: ReDelegation[];
        pagination: Pagination;
    };
    static grpcValidatorToValidator(validator: GrpcValidator): Validator;
    static poolResponseToPool(response: QueryPoolResponse): Pool;
    static grpcValidatorDescriptionToDescription(description?: GrpcValidatorDescription): ValidatorDescription;
    static grpcValidatorCommissionToCommission(commission?: GrpcValidatorCommission): ValidatorCommission;
    static grpcValidatorStatusToStatus(status: number): BondStatus;
}
//# sourceMappingURL=ChainGrpcStakingTransformer.d.ts.map