"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IndexerGrpcInsuranceFundTransformer = void 0;
/**
 * @category Indexer Grpc Transformer
 */
class IndexerGrpcInsuranceFundTransformer {
    static insuranceFundsResponseToInsuranceFunds(response) {
        const insuranceFunds = response.getFundsList();
        return IndexerGrpcInsuranceFundTransformer.grpcInsuranceFundsToInsuranceFunds(insuranceFunds);
    }
    static redemptionsResponseToRedemptions(response) {
        const redemptions = response.getRedemptionSchedulesList();
        return IndexerGrpcInsuranceFundTransformer.grpcRedemptionsToRedemptions(redemptions);
    }
    static grpcInsuranceFundToInsuranceFund(grpcInsuranceFund) {
        const redemptionNoticePeriodDuration = grpcInsuranceFund.getRedemptionNoticePeriodDuration();
        const tokenMeta = grpcInsuranceFund.getDepositTokenMeta();
        const depositDenom = grpcInsuranceFund.getDepositDenom();
        return {
            depositDenom,
            insurancePoolTokenDenom: grpcInsuranceFund.getPoolTokenDenom(),
            redemptionNoticePeriodDuration: redemptionNoticePeriodDuration || 0,
            balance: grpcInsuranceFund.getBalance(),
            totalShare: grpcInsuranceFund.getTotalShare(),
            depositTokenMeta: tokenMeta,
            marketId: grpcInsuranceFund.getMarketId(),
            marketTicker: grpcInsuranceFund.getMarketTicker(),
            oracleBase: grpcInsuranceFund.getOracleBase(),
            oracleQuote: grpcInsuranceFund.getOracleQuote(),
            oracleType: parseInt(grpcInsuranceFund.getOracleType()),
            expiry: grpcInsuranceFund.getExpiry(),
        };
    }
    static grpcInsuranceFundsToInsuranceFunds(grpcInsuranceFunds) {
        return grpcInsuranceFunds.map(IndexerGrpcInsuranceFundTransformer.grpcInsuranceFundToInsuranceFund);
    }
    static grpcRedemptionToRedemption(redemption) {
        return {
            redemptionId: redemption.getRedemptionId(),
            status: redemption.getStatus(),
            redeemer: redemption.getRedeemer(),
            claimableRedemptionTime: redemption.getClaimableRedemptionTime(),
            redemptionAmount: redemption.getRedemptionAmount(),
            redemptionDenom: redemption.getRedemptionDenom(),
            requestedAt: redemption.getRequestedAt(),
            disbursedAmount: redemption.getDisbursedAmount(),
            disbursedDenom: redemption.getDisbursedDenom(),
            disbursedAt: redemption.getDisbursedAt(),
        };
    }
    static grpcRedemptionsToRedemptions(redemptions) {
        return redemptions.map(IndexerGrpcInsuranceFundTransformer.grpcRedemptionToRedemption);
    }
}
exports.IndexerGrpcInsuranceFundTransformer = IndexerGrpcInsuranceFundTransformer;
//# sourceMappingURL=IndexerGrpcInsuranceFundTransformer.js.map