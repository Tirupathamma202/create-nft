import { MsgMigrateContract as BaseMsgMigrateContract } from '@injectivelabs/chain-api/cosmwasm/wasm/v1/tx_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgMigrateContract {
    interface Params {
        sender: string;
        contract: string;
        codeId: number;
        msg: object;
    }
    type Proto = BaseMsgMigrateContract;
    type Object = BaseMsgMigrateContract.AsObject;
}
/**
 * @category Messages
 */
export default class MsgMigrateContract extends MsgBase<MsgMigrateContract.Params, MsgMigrateContract.Proto, MsgMigrateContract.Object> {
    static fromJSON(params: MsgMigrateContract.Params): MsgMigrateContract;
    toProto(): BaseMsgMigrateContract;
    toData(): {
        sender: string;
        contract: string;
        codeId: number;
        msg: string | Uint8Array;
        '@type': string;
    };
    toAmino(): {
        type: string;
        value: {
            sender: string;
            contract: string;
            code_id: number;
            msg: string | Uint8Array;
        };
    };
    toWeb3(): {
        sender: string;
        contract: string;
        code_id: number;
        msg: string | Uint8Array;
        '@type': string;
    };
    toDirectSign(): {
        type: string;
        message: BaseMsgMigrateContract;
    };
}
//# sourceMappingURL=MsgMigrateContract.d.ts.map