// package: injective.wasmx.v1
// file: injective/wasmx/v1/wasmx.proto

import * as jspb from "google-protobuf";
import * as gogoproto_gogo_pb from "../../../gogoproto/gogo_pb";

export class Params extends jspb.Message {
  getIsExecutionEnabled(): boolean;
  setIsExecutionEnabled(value: boolean): void;

  getRegistryContract(): string;
  setRegistryContract(value: string): void;

  getMaxBeginBlockTotalGas(): number;
  setMaxBeginBlockTotalGas(value: number): void;

  getMaxContractGasLimit(): number;
  setMaxContractGasLimit(value: number): void;

  getMinGasPrice(): number;
  setMinGasPrice(value: number): void;

  serializeBinary(): Uint8Array;
  toObject(includeInstance?: boolean): Params.AsObject;
  static toObject(includeInstance: boolean, msg: Params): Params.AsObject;
  static extensions: {[key: number]: jspb.ExtensionFieldInfo<jspb.Message>};
  static extensionsBinary: {[key: number]: jspb.ExtensionFieldBinaryInfo<jspb.Message>};
  static serializeBinaryToWriter(message: Params, writer: jspb.BinaryWriter): void;
  static deserializeBinary(bytes: Uint8Array): Params;
  static deserializeBinaryFromReader(message: Params, reader: jspb.BinaryReader): Params;
}

export namespace Params {
  export type AsObject = {
    isExecutionEnabled: boolean,
    registryContract: string,
    maxBeginBlockTotalGas: number,
    maxContractGasLimit: number,
    minGasPrice: number,
  }
}

