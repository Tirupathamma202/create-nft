"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.IndexerDerivativeStreamTransformer = void 0;
const IndexerGrpcDerivativeTransformer_1 = require("./IndexerGrpcDerivativeTransformer");
/**
 * @category Indexer Stream Transformer
 */
class IndexerDerivativeStreamTransformer {
}
exports.IndexerDerivativeStreamTransformer = IndexerDerivativeStreamTransformer;
IndexerDerivativeStreamTransformer.orderbookStreamCallback = (response) => {
    const orderbook = response.getOrderbook();
    return {
        orderbook: orderbook
            ? IndexerGrpcDerivativeTransformer_1.IndexerGrpcDerivativeTransformer.grpcOrderbookToOrderbook({
                buys: orderbook.getBuysList(),
                sells: orderbook.getSellsList(),
            })
            : undefined,
        operation: response.getOperationType(),
        marketId: response.getMarketId(),
        timestamp: response.getTimestamp(),
    };
};
IndexerDerivativeStreamTransformer.tradesStreamCallback = (response) => {
    const trade = response.getTrade();
    return {
        trade: trade
            ? IndexerGrpcDerivativeTransformer_1.IndexerGrpcDerivativeTransformer.grpcTradeToTrade(trade)
            : undefined,
        operation: response.getOperationType(),
        timestamp: response.getTimestamp(),
    };
};
IndexerDerivativeStreamTransformer.positionStreamCallback = (response) => {
    const position = response.getPosition();
    return {
        position: position
            ? IndexerGrpcDerivativeTransformer_1.IndexerGrpcDerivativeTransformer.grpcPositionToPosition(position)
            : undefined,
        timestamp: response.getTimestamp(),
    };
};
IndexerDerivativeStreamTransformer.ordersStreamCallback = (response) => {
    const order = response.getOrder();
    return {
        order: order
            ? IndexerGrpcDerivativeTransformer_1.IndexerGrpcDerivativeTransformer.grpcOrderToOrder(order)
            : undefined,
        operation: response.getOperationType(),
        timestamp: response.getTimestamp(),
    };
};
IndexerDerivativeStreamTransformer.orderHistoryStreamCallback = (response) => {
    const order = response.getOrder();
    return {
        order: order
            ? IndexerGrpcDerivativeTransformer_1.IndexerGrpcDerivativeTransformer.grpcOrderHistoryToOrderHistory(order)
            : undefined,
        operation: response.getOperationType(),
        timestamp: response.getTimestamp(),
    };
};
IndexerDerivativeStreamTransformer.orderbookV2StreamCallback = (response) => {
    const orderbook = response.getOrderbook();
    return {
        orderbook: orderbook
            ? IndexerGrpcDerivativeTransformer_1.IndexerGrpcDerivativeTransformer.grpcOrderbookV2ToOrderbookV2({
                sequence: orderbook.getSequence(),
                buys: orderbook.getBuysList(),
                sells: orderbook.getSellsList(),
            })
            : undefined,
        operation: response.getOperationType(),
        marketId: response.getMarketId(),
        timestamp: response.getTimestamp(),
    };
};
IndexerDerivativeStreamTransformer.orderbookUpdateStreamCallback = (response) => {
    const orderbook = response.getOrderbookLevelUpdates();
    return {
        orderbook: orderbook
            ? IndexerGrpcDerivativeTransformer_1.IndexerGrpcDerivativeTransformer.grpcOrderbookV2ToOrderbookV2({
                sequence: orderbook.getSequence(),
                buys: orderbook.getBuysList(),
                sells: orderbook.getSellsList(),
            })
            : undefined,
        operation: response.getOperationType(),
        marketId: response.getMarketId(),
        timestamp: response.getTimestamp(),
    };
};
//# sourceMappingURL=IndexerDerivativeStreamTransformer.js.map