import { MsgCancelSpotOrder as BaseMsgCancelSpotOrder } from '@injectivelabs/chain-api/injective/exchange/v1beta1/tx_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgCancelSpotOrder {
    interface Params {
        marketId: string;
        subaccountId: string;
        injectiveAddress: string;
        orderHash: string;
    }
    type Proto = BaseMsgCancelSpotOrder;
    type Object = BaseMsgCancelSpotOrder.AsObject;
}
/**
 * @category Messages
 */
export default class MsgCancelSpotOrder extends MsgBase<MsgCancelSpotOrder.Params, MsgCancelSpotOrder.Proto, MsgCancelSpotOrder.Object> {
    static fromJSON(params: MsgCancelSpotOrder.Params): MsgCancelSpotOrder;
    toProto(): BaseMsgCancelSpotOrder;
    toData(): {
        sender: string;
        marketId: string;
        subaccountId: string;
        orderHash: string;
        '@type': string;
    };
    toAmino(): {
        type: string;
        value: {
            sender: string;
            market_id: string;
            subaccount_id: string;
            order_hash: string;
        };
    };
    toWeb3(): {
        sender: string;
        market_id: string;
        subaccount_id: string;
        order_hash: string;
        '@type': string;
    };
    toDirectSign(): {
        type: string;
        message: BaseMsgCancelSpotOrder;
    };
}
//# sourceMappingURL=MsgCancelSpotOrder.d.ts.map