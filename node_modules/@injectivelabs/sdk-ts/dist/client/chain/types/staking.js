"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.GrpcStakingParams = exports.GrpcReDelegationResponse = exports.GrpcDelegationResponse = exports.GrpcReDelegation = exports.GrpcUnbondingDelegation = exports.GrpcValidatorCommissionRates = exports.GrpcValidatorCommission = exports.GrpcValidatorDescription = exports.GrpcDelegation = exports.GrpcValidator = exports.GrpcPool = exports.BondStatus = void 0;
const staking_pb_1 = require("@injectivelabs/chain-api/cosmos/staking/v1beta1/staking_pb");
Object.defineProperty(exports, "GrpcValidator", { enumerable: true, get: function () { return staking_pb_1.Validator; } });
Object.defineProperty(exports, "GrpcDelegation", { enumerable: true, get: function () { return staking_pb_1.Delegation; } });
Object.defineProperty(exports, "GrpcValidatorDescription", { enumerable: true, get: function () { return staking_pb_1.Description; } });
Object.defineProperty(exports, "GrpcValidatorCommission", { enumerable: true, get: function () { return staking_pb_1.Commission; } });
Object.defineProperty(exports, "GrpcValidatorCommissionRates", { enumerable: true, get: function () { return staking_pb_1.CommissionRates; } });
Object.defineProperty(exports, "GrpcUnbondingDelegation", { enumerable: true, get: function () { return staking_pb_1.UnbondingDelegation; } });
Object.defineProperty(exports, "GrpcReDelegation", { enumerable: true, get: function () { return staking_pb_1.Redelegation; } });
Object.defineProperty(exports, "GrpcDelegationResponse", { enumerable: true, get: function () { return staking_pb_1.DelegationResponse; } });
Object.defineProperty(exports, "GrpcReDelegationResponse", { enumerable: true, get: function () { return staking_pb_1.RedelegationResponse; } });
Object.defineProperty(exports, "GrpcStakingParams", { enumerable: true, get: function () { return staking_pb_1.Params; } });
Object.defineProperty(exports, "GrpcPool", { enumerable: true, get: function () { return staking_pb_1.Pool; } });
var BondStatus;
(function (BondStatus) {
    BondStatus["UnBonded"] = "UnBonded";
    BondStatus["UnBonding"] = "UnBonding";
    BondStatus["Bonded"] = "Bonded";
})(BondStatus = exports.BondStatus || (exports.BondStatus = {}));
//# sourceMappingURL=staking.js.map