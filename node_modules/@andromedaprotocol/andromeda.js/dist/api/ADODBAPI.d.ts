import type AndromedaClient from "../AndromedaClient";
import type { Fee } from "../types";
import type RegistryAPI from "./RegistryAPI";
import ADOAPI from "./ADOAPI";
export default class ADODBAPI extends ADOAPI {
    address: string;
    constructor(client: AndromedaClient, address?: string);
    /**
     * Fetches the ADO DB address from the on chain registry
     * @param registryAPI
     */
    getAddressFromRegistry(registryAPI: RegistryAPI): Promise<void>;
    /**
     * Provides a message object for the ADO DB's `UpdateCodeId` message
     * @param code_id_key
     * @param code_id
     * @returns
     */
    updateCodeIdMsg(code_id_key: string, code_id: number): {
        update_code_id: {
            code_id: number;
            code_id_key: string;
        };
    };
    /**
     * Updates the Code ID for a given key within the ADO DB
     * @param code_id_key
     * @param code_id
     * @param fee
     * @param address
     * @param memo
     * @returns
     */
    updateCodeId(code_id_key: string, code_id: number, fee: Fee, address?: string, memo?: string): Promise<import("@cosmjs/cosmwasm-stargate").ExecuteResult>;
    /**
     * Provides a message object for the ADO DB's `GetCodeId` query
     * @param name
     * @returns
     */
    getCodeIdQuery(name: string): {
        code_id: {
            key: string;
        };
    };
    /**
     * Gets the code ID for an ADO type from the ADO DB
     * @param name
     * @param address
     * @returns
     */
    getCodeId(name: string, address?: string): Promise<number>;
}
