import type { ChainInfo } from "@keplr-wallet/types";
export declare const KEPLR_CONFIG_DATA: string;
export interface KeplrConfigsResponse<T> {
    keplrConfigs: T;
}
export interface QueryKeplrConfig {
    identifier: string;
}
export type QueryKeplrConfigResponse = KeplrConfigsResponse<{
    config: ChainInfo;
}>;
export declare const QUERY_KEPLR_CONFIG: string;
/**
 * Queries a stored Keplr chain config by identifier
 * @param identifier The chain ID for the config to query
 * @returns
 */
export declare function queryKeplrConfig(identifier: string): Promise<ChainInfo>;
export interface QueryKeplrAllConfigs {
}
export type QueryKeplrAllConfigsResponse = KeplrConfigsResponse<{
    allConfigs: ChainInfo[];
}>;
export declare const QUERY_KEPLR_ALL_CONFIGS: string;
/**
 * Queries a stored Keplr chain config by identifier
 * @param identifier The chain ID for the config to query
 * @returns
 */
export declare function QueryKeplrAllConfigs(): Promise<ChainInfo[]>;
