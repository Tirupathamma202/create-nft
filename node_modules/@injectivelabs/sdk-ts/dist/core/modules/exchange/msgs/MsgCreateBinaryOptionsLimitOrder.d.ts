import { MsgCreateBinaryOptionsLimitOrder as BaseMsgCreateBinaryOptionsLimitOrder } from '@injectivelabs/chain-api/injective/exchange/v1beta1/tx_pb';
import { DerivativeOrder, OrderTypeMap } from '@injectivelabs/chain-api/injective/exchange/v1beta1/exchange_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgCreateBinaryOptionsLimitOrder {
    interface Params {
        marketId: string;
        subaccountId: string;
        injectiveAddress: string;
        orderType: OrderTypeMap[keyof OrderTypeMap];
        triggerPrice?: string;
        feeRecipient: string;
        price: string;
        margin: string;
        quantity: string;
    }
    type Proto = BaseMsgCreateBinaryOptionsLimitOrder;
    type Object = BaseMsgCreateBinaryOptionsLimitOrder.AsObject;
}
/**
 * @category Messages
 */
export default class MsgCreateBinaryOptionsLimitOrder extends MsgBase<MsgCreateBinaryOptionsLimitOrder.Params, MsgCreateBinaryOptionsLimitOrder.Proto, MsgCreateBinaryOptionsLimitOrder.Object> {
    static fromJSON(params: MsgCreateBinaryOptionsLimitOrder.Params): MsgCreateBinaryOptionsLimitOrder;
    toProto(): BaseMsgCreateBinaryOptionsLimitOrder;
    toData(): {
        sender: string;
        order?: DerivativeOrder.AsObject | undefined;
        '@type': string;
    };
    toAmino(): {
        type: string;
        value: {
            sender: string;
            order?: {
                market_id: string;
                order_info?: {
                    subaccount_id: string;
                    fee_recipient: string;
                    price: string;
                    quantity: string;
                } | undefined;
                order_type: 0 | 2 | 1 | 3 | 4 | 5 | 6 | 7 | 8 | 10 | 9;
                margin: string;
                trigger_price: string;
            } | undefined;
        };
    };
    toWeb3(): {
        sender: string;
        order?: {
            market_id: string;
            order_info?: {
                subaccount_id: string;
                fee_recipient: string;
                price: string;
                quantity: string;
            } | undefined;
            order_type: 0 | 2 | 1 | 3 | 4 | 5 | 6 | 7 | 8 | 10 | 9;
            margin: string;
            trigger_price: string;
        } | undefined;
        '@type': string;
    };
    toDirectSign(): {
        type: string;
        message: BaseMsgCreateBinaryOptionsLimitOrder;
    };
}
//# sourceMappingURL=MsgCreateBinaryOptionsLimitOrder.d.ts.map