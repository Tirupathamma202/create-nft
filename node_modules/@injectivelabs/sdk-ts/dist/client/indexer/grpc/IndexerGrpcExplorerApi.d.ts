import { GetBlockResponse, GetBlocksResponse, GetTxsResponse } from '@injectivelabs/indexer-api/injective_explorer_rpc_pb';
import BaseConsumer from '../../BaseGrpcConsumer';
/**
 * @category Indexer Grpc API
 */
export declare class IndexerGrpcExplorerApi extends BaseConsumer {
    protected module: string;
    fetchTxByHash(hash: string): Promise<import("../types").BaseTransaction>;
    fetchAccountTx({ address, limit, type, }: {
        address: string;
        limit?: number;
        type?: string;
    }): Promise<{
        txs: import("../types").BaseTransaction[];
        pagination: import("../../..").ExchangePagination;
    }>;
    fetchValidator(validatorAddress: string): Promise<import("../types").ExplorerValidator>;
    fetchValidatorUptime(validatorAddress: string): Promise<import("../types").ValidatorUptime[]>;
    fetchPeggyDepositTxs({ sender, receiver, limit, skip, }: {
        receiver?: string;
        sender?: string;
        limit?: number;
        skip?: number;
    }): Promise<import("../types").PeggyDepositTx[]>;
    fetchPeggyWithdrawalTxs({ sender, receiver, limit, skip, }: {
        sender?: string;
        receiver?: string;
        limit?: number;
        skip?: number;
    }): Promise<import("../types").PeggyWithdrawalTx[]>;
    fetchBlocks({ before, after, limit, }: {
        before?: number;
        after?: number;
        limit?: number;
    }): Promise<GetBlocksResponse>;
    fetchBlock(id: string): Promise<GetBlockResponse>;
    fetchTxs({ before, after, limit, skip, type, module, }: {
        before?: number;
        after?: number;
        limit?: number;
        skip?: number;
        type?: string;
        module?: string;
    }): Promise<GetTxsResponse>;
    fetchIBCTransferTxs({ sender, receiver, srcChannel, srcPort, destChannel, destPort, limit, skip, }: {
        sender?: string;
        receiver?: string;
        srcChannel?: string;
        srcPort?: string;
        destChannel?: string;
        destPort?: string;
        limit?: number;
        skip?: number;
    }): Promise<import("../types").IBCTransferTx[]>;
}
//# sourceMappingURL=IndexerGrpcExplorerApi.d.ts.map