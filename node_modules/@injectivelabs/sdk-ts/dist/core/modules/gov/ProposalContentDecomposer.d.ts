import { GrantBandOraclePrivilegeProposal, RevokeBandOraclePrivilegeProposal, GrantPriceFeederPrivilegeProposal, RevokePriceFeederPrivilegeProposal, AuthorizeBandOracleRequestProposal, EnableBandIBCProposal } from '@injectivelabs/chain-api/injective/oracle/v1beta1/proposal_pb';
import { TextProposal } from '@injectivelabs/chain-api/cosmos/gov/v1beta1/gov_pb';
import { SoftwareUpgradeProposal } from '@injectivelabs/chain-api/cosmos/upgrade/v1beta1/upgrade_pb';
import { ParameterChangeProposal } from '@injectivelabs/chain-api/cosmos/params/v1beta1/params_pb';
import { DerivativeMarketParamUpdateProposal, ExchangeEnableProposal, ExpiryFuturesMarketLaunchProposal, FeeDiscountProposal, PerpetualMarketLaunchProposal, SpotMarketLaunchProposal, SpotMarketParamUpdateProposal, TradingRewardCampaignLaunchProposal, TradingRewardCampaignUpdateProposal } from '@injectivelabs/chain-api/injective/exchange/v1beta1/tx_pb';
export declare class ProposalDecomposer {
    static grantBandOraclePrivilegeProposal(content: Uint8Array): GrantBandOraclePrivilegeProposal;
    static removeBandOraclePrivilegeProposal(content: Uint8Array): RevokeBandOraclePrivilegeProposal;
    static grantPriceFeederPrivilegeProposal(content: Uint8Array): GrantPriceFeederPrivilegeProposal;
    static removePriceFeederPrivilegeProposal(content: Uint8Array): RevokePriceFeederPrivilegeProposal;
    static textProposal(content: Uint8Array): TextProposal;
    static SoftwareUpgrade(content: Uint8Array): SoftwareUpgradeProposal;
    static spotMarketLaunch(content: Uint8Array): SpotMarketLaunchProposal;
    static exchangeEnableProposal(content: Uint8Array): ExchangeEnableProposal;
    static spotMarketUpdate(content: Uint8Array): SpotMarketParamUpdateProposal;
    static perpetualMarketLaunch(content: Uint8Array): PerpetualMarketLaunchProposal;
    static expiryFuturesMarketLaunch(content: Uint8Array): ExpiryFuturesMarketLaunchProposal;
    static derivativeMarketUpdate(content: Uint8Array): DerivativeMarketParamUpdateProposal;
    static FeeDiscount(content: Uint8Array): FeeDiscountProposal;
    static TradingRewardCampaignLaunch(content: Uint8Array): TradingRewardCampaignLaunchProposal;
    static TradingRewardCampaignUpdate(content: Uint8Array): TradingRewardCampaignUpdateProposal;
    static parametersChange(content: Uint8Array): ParameterChangeProposal;
    static EnableBandIBC(content: Uint8Array): EnableBandIBCProposal;
    static AuthorizeBandOracleRequest(content: Uint8Array): AuthorizeBandOracleRequestProposal;
}
//# sourceMappingURL=ProposalContentDecomposer.d.ts.map