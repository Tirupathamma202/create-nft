import type { ContractAddressQuery, Expiry, Recipient } from "./types";
import { Coin } from "@cosmjs/proto-signing";
export interface CrowdfundResponse<T> {
    crowdfund: T;
}
export interface QueryCrowdfundAvailableTokens extends ContractAddressQuery {
}
export type QueryCrowdfundAvailableTokensResponse = CrowdfundResponse<{
    availableTokens: string[];
}>;
export declare const QUERY_CROWDFUND_AVAILABLE_TOKENS: string;
/**
 * Queries all available token IDs from a crowdfund contract
 * @param contractAddress
 * @returns
 */
export declare function queryCrowdfundAvailableTokens(contractAddress: string): Promise<string[]>;
export interface CrowdfundConfig {
    can_mint_after_sale: boolean;
    token_address: string;
}
export interface QueryCrowdfundConfig extends ContractAddressQuery {
}
export type QueryCrowdfundConfigResponse = CrowdfundResponse<{
    config: CrowdfundConfig;
}>;
export declare const QUERY_CROWDFUND_CONFIG: string;
/**
 * Queries the config for a given crowdfund contract
 * @param contractAddress
 * @returns
 */
export declare function queryCrowdfundConfig(contractAddress: string): Promise<CrowdfundConfig>;
export interface QueryCrowdfundTokenAvailable extends ContractAddressQuery {
    tokenId: string;
}
export type QueryCrowdfundTokenAvailableResponse = CrowdfundResponse<{
    isTokenAvailable: boolean;
}>;
export declare const QUERY_CROWDFUND_TOKEN_AVAILABLE: string;
/**
 * Queries a crowdfund contract for the availability of a given token ID
 * @param contractAddress
 * @param tokenId
 * @returns
 */
export declare function queryCrowdfundTokenAvailable(contractAddress: string, tokenId: string): Promise<boolean>;
export interface CrowdfundState {
    amount_sold: number;
    amount_to_send: number;
    amount_transferred: number;
    expiration: Expiry;
    max_amount_per_wallet: number;
    min_tokens_sold: number;
    price: Coin;
    recipient: Recipient;
}
export interface QueryCrowdfundState extends ContractAddressQuery {
}
export type QueryCrowdfundStateResponse = CrowdfundResponse<{
    state: CrowdfundState;
}>;
export declare const QUERY_CROWDFUND_STATE: string;
/**
 * Queries the current crowdfund state
 * @param contractAddress
 * @returns
 */
export declare function queryCrowdfundState(contractAddress: string): Promise<CrowdfundState>;
