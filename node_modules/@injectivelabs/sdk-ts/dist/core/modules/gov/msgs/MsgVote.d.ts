import { MsgVote as BaseMsgVote } from '@injectivelabs/chain-api/cosmos/gov/v1beta1/tx_pb';
import { VoteOptionMap } from '@injectivelabs/chain-api/cosmos/gov/v1beta1/gov_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgVote {
    interface Params {
        proposalId: number;
        vote: VoteOptionMap[keyof VoteOptionMap];
        voter: string;
    }
    type Proto = BaseMsgVote;
    type Object = BaseMsgVote.AsObject;
}
/**
 * @category Messages
 */
export default class MsgVote extends MsgBase<MsgVote.Params, MsgVote.Proto, MsgVote.Object> {
    static fromJSON(params: MsgVote.Params): MsgVote;
    toProto(): BaseMsgVote;
    toData(): {
        proposalId: number;
        voter: string;
        option: 0 | 2 | 1 | 3 | 4;
        '@type': string;
    };
    toAmino(): {
        type: string;
        value: {
            proposal_id: number;
            voter: string;
            option: 0 | 2 | 1 | 3 | 4;
        };
    };
    toWeb3(): {
        proposal_id: number;
        voter: string;
        option: 0 | 2 | 1 | 3 | 4;
        '@type': string;
    };
    toDirectSign(): {
        type: string;
        message: BaseMsgVote;
    };
}
//# sourceMappingURL=MsgVote.d.ts.map