import { MsgInstantBinaryOptionsMarketLaunch as BaseMsgInstantBinaryOptionsMarketLaunch } from '@injectivelabs/chain-api/injective/exchange/v1beta1/tx_pb';
import { OracleType } from '../../../../client';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgInstantBinaryOptionsMarketLaunch {
    interface Params {
        proposer: string;
        market: {
            ticker: string;
            admin: string;
            oracleSymbol: string;
            oracleProvider: string;
            oracleScaleFactor: number;
            oracleType: OracleType;
            quoteDenom: string;
            makerFeeRate: string;
            takerFeeRate: string;
            expirationTimestamp: number;
            settlementTimestamp: number;
            minPriceTickSize: string;
            minQuantityTickSize: string;
        };
    }
    type Proto = BaseMsgInstantBinaryOptionsMarketLaunch;
    type Object = BaseMsgInstantBinaryOptionsMarketLaunch.AsObject;
}
/**
 * @category Messages
 */
export default class MsgInstantBinaryOptionsMarketLaunch extends MsgBase<MsgInstantBinaryOptionsMarketLaunch.Params, MsgInstantBinaryOptionsMarketLaunch.Proto, MsgInstantBinaryOptionsMarketLaunch.Object> {
    static fromJSON(params: MsgInstantBinaryOptionsMarketLaunch.Params): MsgInstantBinaryOptionsMarketLaunch;
    toProto(): BaseMsgInstantBinaryOptionsMarketLaunch;
    toData(): {
        sender: string;
        ticker: string;
        oracleSymbol: string;
        oracleProvider: string;
        oracleType: 0 | 2 | 1 | 3 | 4 | 5 | 6 | 7 | 8 | 10 | 9 | 11;
        oracleScaleFactor: number;
        makerFeeRate: string;
        takerFeeRate: string;
        expirationTimestamp: number;
        settlementTimestamp: number;
        admin: string;
        quoteDenom: string;
        minPriceTickSize: string;
        minQuantityTickSize: string;
        '@type': string;
    };
    toAmino(): {
        type: string;
        value: {
            sender: string;
            ticker: string;
            oracle_symbol: string;
            oracle_provider: string;
            oracle_type: 0 | 2 | 1 | 3 | 4 | 5 | 6 | 7 | 8 | 10 | 9 | 11;
            oracle_scale_factor: number;
            maker_fee_rate: string;
            taker_fee_rate: string;
            expiration_timestamp: number;
            settlement_timestamp: number;
            admin: string;
            quote_denom: string;
            min_price_tick_size: string;
            min_quantity_tick_size: string;
        };
    };
    toWeb3(): {
        sender: string;
        ticker: string;
        oracle_symbol: string;
        oracle_provider: string;
        oracle_type: 0 | 2 | 1 | 3 | 4 | 5 | 6 | 7 | 8 | 10 | 9 | 11;
        oracle_scale_factor: number;
        maker_fee_rate: string;
        taker_fee_rate: string;
        expiration_timestamp: number;
        settlement_timestamp: number;
        admin: string;
        quote_denom: string;
        min_price_tick_size: string;
        min_quantity_tick_size: string;
        '@type': string;
    };
    toDirectSign(): {
        type: string;
        message: BaseMsgInstantBinaryOptionsMarketLaunch;
    };
}
//# sourceMappingURL=MsgInstantBinaryOptionsMarketLaunch.d.ts.map