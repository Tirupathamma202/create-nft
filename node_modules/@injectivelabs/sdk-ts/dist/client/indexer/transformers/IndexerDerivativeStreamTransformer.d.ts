import { StreamOrderbookResponse, StreamTradesResponse, StreamPositionsResponse, StreamOrdersResponse, StreamOrdersHistoryResponse } from '@injectivelabs/indexer-api/injective_derivative_exchange_rpc_pb';
import { StreamOrderbookV2Response, StreamOrderbookUpdateResponse } from '@injectivelabs/indexer-api/injective_spot_exchange_rpc_pb';
import { StreamOperation } from '../../../types/index';
/**
 * @category Indexer Stream Transformer
 */
export declare class IndexerDerivativeStreamTransformer {
    static orderbookStreamCallback: (response: StreamOrderbookResponse) => {
        orderbook: import("..").Orderbook | undefined;
        operation: StreamOperation;
        marketId: string;
        timestamp: number;
    };
    static tradesStreamCallback: (response: StreamTradesResponse) => {
        trade: import("..").DerivativeTrade | undefined;
        operation: StreamOperation;
        timestamp: number;
    };
    static positionStreamCallback: (response: StreamPositionsResponse) => {
        position: import("..").Position | undefined;
        timestamp: number;
    };
    static ordersStreamCallback: (response: StreamOrdersResponse) => {
        order: import("..").DerivativeLimitOrder | undefined;
        operation: StreamOperation;
        timestamp: number;
    };
    static orderHistoryStreamCallback: (response: StreamOrdersHistoryResponse) => {
        order: import("..").DerivativeOrderHistory | undefined;
        operation: StreamOperation;
        timestamp: number;
    };
    static orderbookV2StreamCallback: (response: StreamOrderbookV2Response) => {
        orderbook: import("..").OrderbookWithSequence | undefined;
        operation: StreamOperation;
        marketId: string;
        timestamp: number;
    };
    static orderbookUpdateStreamCallback: (response: StreamOrderbookUpdateResponse) => {
        orderbook: import("..").OrderbookWithSequence | undefined;
        operation: StreamOperation;
        marketId: string;
        timestamp: number;
    };
}
//# sourceMappingURL=IndexerDerivativeStreamTransformer.d.ts.map