"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ChainGrpcBankTransformer = void 0;
const pagination_1 = require("../../../utils/pagination");
/**
 * @category Chain Grpc Transformer
 */
class ChainGrpcBankTransformer {
    static grpcCoinToCoin(coin) {
        return {
            denom: coin.getDenom(),
            amount: coin.getAmount(),
        };
    }
    static grpcCoinsToCoins(coins) {
        return coins.map(ChainGrpcBankTransformer.grpcCoinToCoin);
    }
    static moduleParamsResponseToModuleParams(response) {
        const params = response.getParams();
        return {
            sendEnabledList: params.getSendEnabledList().map((e) => e.toObject()),
            defaultSendEnabled: params.getDefaultSendEnabled(),
        };
    }
    static totalSupplyResponseToTotalSupply(response) {
        const balances = response.getSupplyList();
        const pagination = response.getPagination();
        return {
            supply: balances.map(ChainGrpcBankTransformer.grpcCoinToCoin),
            pagination: (0, pagination_1.grpcPaginationToPagination)(pagination),
        };
    }
    static balanceResponseToBalance(response) {
        return ChainGrpcBankTransformer.grpcCoinToCoin(response.getBalance());
    }
    static balancesResponseToBalances(response) {
        const balances = response.getBalancesList();
        const pagination = response.getPagination();
        return {
            balances: ChainGrpcBankTransformer.grpcCoinsToCoins(balances),
            pagination: (0, pagination_1.grpcPaginationToPagination)(pagination),
        };
    }
}
exports.ChainGrpcBankTransformer = ChainGrpcBankTransformer;
//# sourceMappingURL=ChainGrpcBankTransformer.js.map