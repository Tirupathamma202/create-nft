import { MsgExec as BaseMsgExec } from '@injectivelabs/chain-api/cosmos/authz/v1beta1/tx_pb';
import { Any } from 'google-protobuf/google/protobuf/any_pb';
import { MsgBase } from '../../MsgBase';
import { Msgs } from '../../msgs';
export declare namespace MsgExec {
    interface Params {
        grantee: string;
        msgs: Msgs | Msgs[];
    }
    type Proto = BaseMsgExec;
    type Object = BaseMsgExec.AsObject;
}
/**
 * @category Messages
 */
export default class MsgExec extends MsgBase<MsgExec.Params, MsgExec.Proto, MsgExec.Object> {
    static fromJSON(params: MsgExec.Params): MsgExec;
    toProto(): BaseMsgExec;
    toData(): {
        grantee: string;
        msgsList: Any.AsObject[];
        '@type': string;
    };
    toAmino(): {
        type: string;
        value: {
            grantee: string;
            msgs_list: {
                type_url: string;
                value: string | Uint8Array;
            }[];
        };
    };
    toWeb3(): {
        grantee: string;
        msgs_list: {
            type_url: string;
            value: string | Uint8Array;
        }[];
        '@type': string;
    };
    toDirectSign(): {
        type: string;
        message: BaseMsgExec;
    };
}
//# sourceMappingURL=MsgExec.d.ts.map