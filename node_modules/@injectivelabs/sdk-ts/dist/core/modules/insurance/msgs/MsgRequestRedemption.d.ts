import { MsgRequestRedemption as BaseMsgRequestRedemption } from '@injectivelabs/chain-api/injective/insurance/v1beta1/tx_pb';
import { Coin } from '@injectivelabs/chain-api/cosmos/base/v1beta1/coin_pb';
import { MsgBase } from '../../MsgBase';
export declare namespace MsgRequestRedemption {
    interface Params {
        marketId: string;
        amount: {
            denom: string;
            amount: string;
        };
        injectiveAddress: string;
    }
    type Proto = BaseMsgRequestRedemption;
    type Object = BaseMsgRequestRedemption.AsObject;
}
/**
 * @category Messages
 */
export default class MsgRequestRedemption extends MsgBase<MsgRequestRedemption.Params, MsgRequestRedemption.Proto, MsgRequestRedemption.Object> {
    static fromJSON(params: MsgRequestRedemption.Params): MsgRequestRedemption;
    toProto(): BaseMsgRequestRedemption;
    toData(): {
        sender: string;
        marketId: string;
        amount?: Coin.AsObject | undefined;
        '@type': string;
    };
    toAmino(): {
        type: string;
        value: {
            sender: string;
            market_id: string;
            amount?: Coin.AsObject | undefined;
        };
    };
    toWeb3(): {
        sender: string;
        market_id: string;
        amount?: Coin.AsObject | undefined;
        '@type': string;
    };
    toDirectSign(): {
        type: string;
        message: BaseMsgRequestRedemption;
    };
}
//# sourceMappingURL=MsgRequestRedemption.d.ts.map